ARM GAS  /tmp/ccI69vXK.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_adc_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c"
  20              		.section	.text.LL_ADC_SetCalibrationFactor,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	LL_ADC_SetCalibrationFactor:
  27              	.LVL0:
  28              	.LFB139:
  29              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 2


  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_SQR1_SQ1" position
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_SQR1_SQ2" position
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Equivalent to bitfield "ADC_SQR1_SQ3" position
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_SQR1_SQ4" position
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_SQR2_SQ5" position
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_SQR2_SQ6" position
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_SQR2_SQ7" position
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Equivalent to bitfield "ADC_SQR2_SQ8" position
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_SQR2_SQ9" position
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Equivalent to bitfield "ADC_SQR3_SQ10" positio
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Equivalent to bitfield "ADC_SQR3_SQ11" positio
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Equivalent to bitfield "ADC_SQR3_SQ12" positio
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Equivalent to bitfield "ADC_SQR3_SQ13" positio
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Equivalent to bitfield "ADC_SQR3_SQ14" positio
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Equivalent to bitfield "ADC_SQR4_SQ15" positio
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Equivalent to bitfield "ADC_SQR4_SQ16" positio
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
ARM GAS  /tmp/ccI69vXK.s 			page 3


  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_JSQR_JSQ1" positio
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Equivalent to bitfield "ADC_JSQR_JSQ2" positio
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_JSQR_JSQ3" positio
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Equivalent to bitfield "ADC_JSQR_JSQ4" positio
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (d
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  compatibility with some ADC on oth
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  having this setting set by HW defa
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U * 
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 0
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 1
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 2
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 3
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR_EXTSEL" posit
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR_EXTEN" positi
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
ARM GAS  /tmp/ccI69vXK.s 			page 4


 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                   having this setting set by HW def
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK           (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U 
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK             (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U * 
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Equivalent to bitfield "ADC_JSQR_JEXTSEL" posi
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Equivalent to bitfield "ADC_JSQR_JEXTEN" posit
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    position in register            
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                              of different ADC internal channels map
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                              number on different ADC instances */
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
ARM GAS  /tmp/ccI69vXK.s 			page 5


 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL)           /* Position of bits ADC_SMPRx_REGOFFSET
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                in ADC_CHANNEL_SMPRX_REGOFFSET_MASK 
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Equivalent to bitfield "ADC_CHANNEL_
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                position in register */
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
ARM GAS  /tmp/ccI69vXK.s 			page 6


 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Value shifted are equivalent to bitfield "ADC_SMPRx_SMPy" position         */
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* in register.                                                               */
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to perform of shift when single mode is selected, shift 
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channels bits range. */
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL) /* Selection of 1 bit to discriminate di
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mask of bit */
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)         /* Selection of 1 bit to discriminate di
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            position of bit */
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_SINGLEDIFF_CALIB_F_BIT_D to perform a shift of 4 ran
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 7


 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                threshold high: mask
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                threshold high: posi
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                position to perform 
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset instance configuration */
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Equivalent to bitfield "ADC_CFGR_RES" position
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR_AWD1SGL" posi
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Equivalent to bitfield "ADC_CFGR_AWD1EN" posit
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Equivalent to bitfield "ADC_CFGR_JAWD1EN" posi
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CR_JADSTART | ADC_CR_JADSTP \
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
ARM GAS  /tmp/ccI69vXK.s 			page 8


 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Address of parameter TS_
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            TEMPSENSOR_CAL2_TEMP (tolerance: +-5 DegC), Vref+ = 3.0 
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Temperature at which tem
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Temperature at which tem
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Temperature at which tem
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance +-10 mV) (unit: mV). */
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
ARM GAS  /tmp/ccI69vXK.s 			page 9


 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    constraints between ADC clock and AHB clock must
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    Refer to reference manual.
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              (for devices with several ADC instances).
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultimode(). */
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiDMATransfer(). */
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiTwoSamplingDelay(). */
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 series).
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
ARM GAS  /tmp/ccI69vXK.s 			page 10


 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    default value).
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
ARM GAS  /tmp/ccI69vXK.s 			page 11


 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                     enabled (scan length of 2 ranks or more).
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              successively automatically).
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    and discontinuous mode.
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 12


 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              or from external peripheral (timer event, external int
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    set trigger polarity to rising edge (default set
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    compatibility with some ADC on other STM32 serie
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    setting set by HW default value).
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    @ref LL_ADC_INJ_SetTriggerEdge().
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTriggerSource(). */
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerLength(). */
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    enabled (scan length of 2 ranks or more).
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerDiscont(). */
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              regular.
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    trigger source is set to an external trigger.
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTrigAuto(). */
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion */
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversions */
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
ARM GAS  /tmp/ccI69vXK.s 			page 13


 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversion */
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversions */
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overflow */
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overrun */
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overrun */
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sampling phase */
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sampling phase */
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    contexts queue overflow */
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    contexts queue overflow */
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC master */
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC slave */
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC master */
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC slave */
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC master */
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC slave */
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 14


 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversion */
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversions */
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    phase */
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversion */
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversions */
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overflow */
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI  (0x00000001UL)      /* ADC group regular conversion data
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (corresponding to register CDR) to be used with ADC conf
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (available on STM32 devices with several ADC instances).
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Without DMA transfer, register accessed by LL function
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadMultiConversionData32() */
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                    /*!< ADC synchrono
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            AHB clock without prescaler */
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1)                    /*!< ADC synchrono
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            AHB clock with prescaler division by 2 */
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0) /*!< ADC synchrono
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            AHB clock with prescaler division by 4 */
ARM GAS  /tmp/ccI69vXK.s 			page 15


 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler */
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 2 */
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 4 */
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 6 */
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 8 */
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 10 */
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 12 */
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 16  */
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 32 */
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 64 */
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 128 */
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 256 */
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                      temperature sensor */
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 16


 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)   /*!< ADC conversion data alignment: l
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)  /*!< ADC low power mode auto delay: D
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset instance
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset instance 1: ADC chann
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset instance 2: ADC chann
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset instance 3: ADC chann
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset instance 4: ADC chann
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (setting offset instance wise) */
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (setting offset instance wise) */
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 17


 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL)     /*!< ADC group injected (not availabl
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            devices)*/
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL)     /*!< ADC both groups regular and inje
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP \
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD)                       /*!< AD
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP \
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD)                       /*!< AD
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP \
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD)                       /*!< AD
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP \
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD)                       /*!< AD
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP \
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD)                       /*!< AD
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP \
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD)                       /*!< AD
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP \
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD)                       /*!< AD
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP \
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD)                       /*!< AD
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP \
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD)                       /*!< AD
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP \
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD)                       /*!< AD
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP \
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD)                      /*!< AD
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP \
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD)                      /*!< AD
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP \
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD)                      /*!< AD
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP \
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD)                      /*!< AD
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP \
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD)                      /*!< AD
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP \
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD)                      /*!< AD
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | \
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_16_BITFIELD)                        /*!< ADC
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | \
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_17_BITFIELD)                        /*!< ADC
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | \
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_18_BITFIELD)                        /*!< ADC
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference.
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            On STM32L4, ADC channel available only on ADC instance: 
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to internal temperature sensor.
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            On STM32L4, ADC channel available only on ADC instances:
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to Vbat/3: Vbat voltage through a divider ladd
ARM GAS  /tmp/ccI69vXK.s 			page 18


 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to have channel voltage always below Vdda.
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            On STM32L4, ADC channel available only on ADC instances:
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | \
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 1, channel specific to ADC1. T
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            shared with ADC internal channel connected to internal t
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            selection is done using function @ref LL_ADC_SetCommonPa
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | \
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 2, channel specific to ADC1. T
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            shared with ADC internal channel connected to Vbat,
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            selection is done using function @ref LL_ADC_SetCommonPa
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | \
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 1, channel specific to ADC2 */
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | \
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 2, channel specific to ADC2 */
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 1, channel specific to ADC3 */
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 2, channel specific to ADC3 */
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | \
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO. 
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | \
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2.
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | \
ARM GAS  /tmp/ccI69vXK.s 			page 19


 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO. 
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO. 
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO. 
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | \
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 channe
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO. 
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO. 
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO2.
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR_EXTEN_0)                      /*!< ADC group r
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1)                      /*!< ADC group r
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
ARM GAS  /tmp/ccI69vXK.s 			page 20


1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            one conversion per trigger */
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)    /*!< ADC conversions performed in con
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            automatically */
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR_DMAEN)   /*!< ADC conversion data are transfer
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)      /*!< ADC conversions are not transfe
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG) /*!< ADC conversion data are transfe
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            post processing. The ADC conversion data format must be 
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            right aligned, refer to reference manual.
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            DFSDM transfer cannot be used if DMA transfer is enabled
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            cycles replacing 2.5 ADC clock cycles (this applies to a
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with selection sampling time 2.5 ADC clock cycles, whate
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            on ADC groups regular or injected). */
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 21


1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    data preserved */
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)  /*!< ADC group regular behavior in ca
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    data overwritten */
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                 /*!< ADC group regular se
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_SQR1_L_0)                 /*!< ADC group regular se
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_SQR1_L_1)                 /*!< ADC group regular se
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_SQR1_L_1 | ADC_SQR1_L_0)  /*!< ADC group regular se
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_SQR1_L_2)                 /*!< ADC group regular se
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 5 ranks in the sequence */
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_0)  /*!< ADC group regular se
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 6 ranks in the sequence */
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1) /*!< ADC group regular seq
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 7 ranks in the sequence */
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1 \
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 8 ranks in the sequence */
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3)                 /*!< ADC group regular se
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 9 ranks in the sequence */
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_0)  /*!< ADC group regular se
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 10 ranks in the sequence */
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1)  /*!< ADC group regular se
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 11 ranks in the sequence */
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1 \
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 12 ranks in the sequence */
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2)  /*!< ADC group regular se
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 13 ranks in the sequence */
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 14 ranks in the sequence */
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_1)                /*!< ADC group regular s
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 15 ranks in the sequence */
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_1 | ADC_SQR1_L_0) /*!< ADC group regular s
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                               with 16 ranks in the 
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccI69vXK.s 			page 22


1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode disable */
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR_DISCEN)                       /*!< ADC group r
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group r
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enabled with sequence interruption ev
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCEN)  /*!< ADC group r
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCNUM_0 \
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCEN)   /*!< ADC group 
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_0 \
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 1 */
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 2 */
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 3 */
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 4 */
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 5 */
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 6 */
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 7 */
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 8 */
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 9 */
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 10 */
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 11 */
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
ARM GAS  /tmp/ccI69vXK.s 			page 23


1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 12 */
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 13 */
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 14 */
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 15 */
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 16 */
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                        /*
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                       /*
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO. 
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2.
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO. 
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | \
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO. 
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | \
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO. 
ARM GAS  /tmp/ccI69vXK.s 			page 24


1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO. 
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 channe
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | \
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO. 
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO2.
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | \
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)     /*!< ADC group injected conversion tr
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Setting mandatory if ADC group injected injected trigger
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            an external trigger. */
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)   /*!< ADC group injected conversion tr
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular. Setting compliant only with group injected trig
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            SW start, without any further action on  ADC group injec
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            or stop: in this case, ADC group injected is controlled 
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular. */
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccI69vXK.s 			page 25


1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)   /* Group injected sequence context 
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            the queue maintains the last context active perpetually.
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)   /* Group injected sequence context 
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            the queue is empty and injected group triggers are disab
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS) /* Group injected sequence context 
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            only 1 sequence can be configured and is active perpetua
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)     /*!< ADC group injected sequencer dis
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            disable */
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN) /*!< ADC group injected sequencer dis
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            enable with sequence interruption every rank */
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET \
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS) /*!< ADC group inj
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET \
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS) /*!< ADC group inj
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET \
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS) /*!< ADC group inj
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET \
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS) /*!< ADC group inj
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 26


1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)       /*!< Sampling time 2.5 ADC clock cy
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (ADC_SMPR2_SMP10_0)  /*!< Sampling time 6.5 ADC clock cy
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR2_SMP10_1)  /*!< Sampling time 12.5 ADC clock c
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (ADC_SMPR2_SMP10_1 \
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 24.5 ADC clock 
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2)  /*!< Sampling time 47.5 ADC clock c
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2 \
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 92.5 ADC clock 
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 \
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1) /*!< Sampling time 247.5 ADC clock
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 \
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1 \
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 640.5 ADC clock
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            set to single ended (literal also used to set calibratio
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            set to differential (literal also used to set calibratio
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            set to both single ended and differential (literal used 
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            calibration factors) */
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            disabled */
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN)                       /*!< ADC analo
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of all channels, converted by group regular only */
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK \
ARM GAS  /tmp/ccI69vXK.s 			page 27


1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN)                      /*!< ADC analo
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of all channels, converted by group injected only */
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK \
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN)    /*!< ADC analo
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of all channels, converted by either group regular or in
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group injected onl
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by either group regul
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group injected onl
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by either group regul
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group injected onl
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by either group regul
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group injected onl
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by either group regul
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group injected onl
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by either group regul
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
ARM GAS  /tmp/ccI69vXK.s 			page 28


1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group injected onl
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by either group regul
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group injected onl
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by either group regul
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group injected onl
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by either group regul
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group injected onl
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by either group regul
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group injected onl
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by either group regul
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group injected on
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)\
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
ARM GAS  /tmp/ccI69vXK.s 			page 29


1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by either group regu
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group injected on
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by either group regu
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group injected on
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by either group regu
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group injected on
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by either group regu
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group only */
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by either group regu
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            monitoring of ADC channel ADCx_IN15, converted by group 
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group injected on
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by either group
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular or injected */
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
ARM GAS  /tmp/ccI69vXK.s 			page 30


1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group injected on
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by either group regu
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group injected on
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by either group regu
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group injected on
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by either group
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular or injected */
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage reference, converted by group regular only */
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage reference, converted by group injected only */
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage reference, converted by either group regular or 
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) \
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            converted by group regular only */
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) \
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            converted by group injected only */
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) \
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            converted by either group regular or injected */
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            always below Vdda, converted by group regular only */
ARM GAS  /tmp/ccI69vXK.s 			page 31


1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            always below Vdda, converted by group injected only */
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            always below Vdda */
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) \
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group regular onl
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) \
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group injected on
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) \
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by either group regu
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) \
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group regular onl
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) \
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group injected on
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) \
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by either group regu
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) \
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group regular onl
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) \
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group injected on
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) \
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by either group regu
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) \
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group regular onl
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) \
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
ARM GAS  /tmp/ccI69vXK.s 			page 32


1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group injected on
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) \
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by either group regu
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) \
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group regular onl
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) \
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group injected on
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) \
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by either group regu
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) \
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group regular onl
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) \
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group injected on
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) \
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by either group regu
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1)      /*!< ADC analog watchdog threshold hi
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_TR1_LT1)      /*!< ADC analog watchdog threshold lo
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 \
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_TR1_LT1)     /*!< ADC analog watchdog both thresh
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            concatenated into the same data */
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_ROVSE)                   /*!< ADC oversamplin
ARM GAS  /tmp/ccI69vXK.s 			page 33


1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            is temporary stopped and continued afterwards. */
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            is resumed from start (oversampler buffer reset). */
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (ADC_CFGR2_JOVSE)                   /*!< ADC oversamplin
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC group injected. */
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            both ADC groups regular and injected. If group injected 
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular: when ADC group injected is triggered, the overs
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular is resumed from start (oversampler buffer reset)
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)  /*!< ADC oversampling discontinuous m
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 34


1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion data) */
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                    /*!< ADC dual mode dis
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            independent mode) */
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1) /*!< ADC dual mode ena
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            simultaneous */
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 \
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_DUAL_0)                  /*!< ADC dual mode e
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular interleaved */
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            simultaneous */
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            alternate trigger. Works only with external triggers (no
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (ADC_CCR_DUAL_0)                  /*!< ADC dual mode ena
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular simultaneous + group injected simultaneous */
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (ADC_CCR_DUAL_1)                  /*!< ADC dual mode ena
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular simultaneous + group injected alternate trigger 
ARM GAS  /tmp/ccI69vXK.s 			page 35


1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (ADC_CCR_DUAL_1 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular interleaved + group injected simultaneous */
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                    /*!< ADC multimode g
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA: each ADC uses its 
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              with its individual DMA transfer settings */
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (ADC_CCR_MDMA_1)                  /*!< ADC multimode g
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 12 and 10 
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!< ADC multimode g
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 8 and 6 bi
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1) /*!< ADC multimode g
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Setting for ADC resolution of 12 and 10 bits */
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 \
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                               | ADC_CCR_MDMA_0)                 /*!< ADC multimode 
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Setting for ADC resolution of 8 and 6 bits */
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                      /*!< ADC multimode d
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 1 ADC clock cycle */
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (ADC_CCR_DELAY_0)                   /*!< ADC multimode d
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 2 ADC clock cycles */
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (ADC_CCR_DELAY_1)                   /*!< ADC multimode d
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 3 ADC clock cycles */
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 4 ADC clock cycles */
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (ADC_CCR_DELAY_2)                   /*!< ADC multimode d
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 5 ADC clock cycles */
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 6 ADC clock cycles */
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1) /*!< ADC multimode d
ARM GAS  /tmp/ccI69vXK.s 			page 36


1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 7 ADC clock cycles */
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 \
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 8 ADC clock cycles */
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3)                   /*!< ADC multimode d
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 9 ADC clock cycles */
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 10 ADC clock cycles */
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1) /*!< ADC multimode d
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 11 ADC clock cycles */
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1 \
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 12 ADC clock cycles */
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (ADC_CDR_RDATA_MST) /*!< In multimode, selection among s
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            instances: ADC master */
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV) /*!< In multimode, selection among s
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            instances: ADC slave */
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV \
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CDR_RDATA_MST) /*!< In multimode, selection among
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            instances: both ADC master and ADC slave */
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE         (LL_ADC_OVS_SHIFT_NONE)
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1            (LL_ADC_OVS_SHIFT_RIGHT_1)
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2            (LL_ADC_OVS_SHIFT_RIGHT_2)
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3            (LL_ADC_OVS_SHIFT_RIGHT_3)
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4            (LL_ADC_OVS_SHIFT_RIGHT_4)
ARM GAS  /tmp/ccI69vXK.s 			page 37


2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5            (LL_ADC_OVS_SHIFT_RIGHT_5)
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6            (LL_ADC_OVS_SHIFT_RIGHT_6)
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7            (LL_ADC_OVS_SHIFT_RIGHT_7)
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8            (LL_ADC_OVS_SHIFT_RIGHT_8)
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  calibration parameters. This value
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  (to fit on signed word or double w
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  to an inconsistent temperature val
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                               regulator start-up time) */
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
ARM GAS  /tmp/ccI69vXK.s 			page 38


2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    time */
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)        /*!< Delay required between ADC end o
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    and ADC enable */
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
ARM GAS  /tmp/ccI69vXK.s 			page 39


2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 40


2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
ARM GAS  /tmp/ccI69vXK.s 			page 41


2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                              |    
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
ARM GAS  /tmp/ccI69vXK.s 			page 42


2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                       connected to a GPIO pin).
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /tmp/ccI69vXK.s 			page 43


2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
ARM GAS  /tmp/ccI69vXK.s 			page 44


2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (                                                                         \
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                         \
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
ARM GAS  /tmp/ccI69vXK.s 			page 45


2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
ARM GAS  /tmp/ccI69vXK.s 			page 46


2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
ARM GAS  /tmp/ccI69vXK.s 			page 47


2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 48


2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
ARM GAS  /tmp/ccI69vXK.s 			page 49


2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
ARM GAS  /tmp/ccI69vXK.s 			page 50


2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                         \
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
ARM GAS  /tmp/ccI69vXK.s 			page 51


2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
ARM GAS  /tmp/ccI69vXK.s 			page 52


2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 53


2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
ARM GAS  /tmp/ccI69vXK.s 			page 54


2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  )                                                                                \
2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  :                                                                                \
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       (unit: uV/DegCelsius).
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       (at temperature and Vref+ defined in parameters below) (u
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to datasheet parameter "V30" (correspon
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       (see parameter above) is corresponding (unit: mV)
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
ARM GAS  /tmp/ccI69vXK.s 			page 55


3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     -                                                                       \
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                        \
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccI69vXK.s 			page 56


3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC instances
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
ARM GAS  /tmp/ccI69vXK.s 			page 57


3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
ARM GAS  /tmp/ccI69vXK.s 			page 58


3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
ARM GAS  /tmp/ccI69vXK.s 			page 59


3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccI69vXK.s 			page 60


3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
  30              		.loc 2 3379 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
  35              		.loc 2 3380 3 view .LVU1
  36 0000 D0F8B430 		ldr	r3, [r0, #180]
  37 0004 01F07F1C 		and	ip, r1, #8323199
  38 0008 23EA0C0C 		bic	ip, r3, ip
  39 000c 01F07F03 		and	r3, r1, #127
  40 0010 DB43     		mvns	r3, r3
  41 0012 03EA1133 		and	r3, r3, r1, lsr #12
ARM GAS  /tmp/ccI69vXK.s 			page 61


  42 0016 03F01003 		and	r3, r3, #16
  43 001a 9A40     		lsls	r2, r2, r3
  44              	.LVL1:
  45              		.loc 2 3380 3 is_stmt 0 view .LVU2
  46 001c 4CEA0202 		orr	r2, ip, r2
  47 0020 C0F8B420 		str	r2, [r0, #180]
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK)
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     >> ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4)
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    & ~(SingleDiff & ADC_CALFACT_CALFACT_S)));
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
  48              		.loc 2 3385 1 view .LVU3
  49 0024 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE139:
  53              		.section	.text.LL_ADC_SetChannelSamplingTime,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	LL_ADC_SetChannelSamplingTime:
  60              	.LVL2:
  61              	.LFB185:
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >>
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/ccI69vXK.s 			page 62


3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
ARM GAS  /tmp/ccI69vXK.s 			page 63


3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 64


3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset instance 1, 2, 3 or 4.
3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
ARM GAS  /tmp/ccI69vXK.s 			page 65


3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
ARM GAS  /tmp/ccI69vXK.s 			page 66


3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
ARM GAS  /tmp/ccI69vXK.s 			page 67


3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
ARM GAS  /tmp/ccI69vXK.s 			page 68


3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
ARM GAS  /tmp/ccI69vXK.s 			page 69


3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(const ADC_TypeDef *ADCx)
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
ARM GAS  /tmp/ccI69vXK.s 			page 70


3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
ARM GAS  /tmp/ccI69vXK.s 			page 71


3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((trigger_source
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR_EXTSEL)
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR_EXTEN)
3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 72


3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
ARM GAS  /tmp/ccI69vXK.s 			page 73


4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
ARM GAS  /tmp/ccI69vXK.s 			page 74


4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
ARM GAS  /tmp/ccI69vXK.s 			page 75


4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  /tmp/ccI69vXK.s 			page 76


4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
ARM GAS  /tmp/ccI69vXK.s 			page 77


4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /tmp/ccI69vXK.s 			page 78


4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
ARM GAS  /tmp/ccI69vXK.s 			page 79


4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQR
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccI69vXK.s 			page 80


4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
ARM GAS  /tmp/ccI69vXK.s 			page 81


4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
4529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
4530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
4531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
4532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
4537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
4539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
4540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
4541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
4544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
4546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
4550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
4551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
4554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
4555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(const ADC_TypeDef *ADCx)
4557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
4559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccI69vXK.s 			page 82


4560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
4561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
4565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
4567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
4568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
4590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
4597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
4613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
ARM GAS  /tmp/ccI69vXK.s 			page 83


4617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
4657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
4661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
ARM GAS  /tmp/ccI69vXK.s 			page 84


4674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
4688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t shift_jexten = ((trigger_source & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS 
4694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((trigger_source
4698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> shift_jexten) & ADC_JSQR_JEXTSEL)
4699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> shift_jexten) & ADC_JSQR_JEXTEN)
4700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
4701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
4706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
ARM GAS  /tmp/ccI69vXK.s 			page 85


4731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
4750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
ARM GAS  /tmp/ccI69vXK.s 			page 86


4788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
4797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
ARM GAS  /tmp/ccI69vXK.s 			page 87


4845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
ARM GAS  /tmp/ccI69vXK.s 			page 88


4902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK),
4908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK));
4910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
ARM GAS  /tmp/ccI69vXK.s 			page 89


4959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
4977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               << (Rank & ADC_INJ_RANK_ID_JSQR_MASK))
4986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
5000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
5001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
5002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
5003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
5004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
5005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
5006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
5007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
5008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
5014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
ARM GAS  /tmp/ccI69vXK.s 			page 90


5016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
5021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
5023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
5028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
5043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
5044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
5045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
5046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
5047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
5048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
5049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
5050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
5060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
ARM GAS  /tmp/ccI69vXK.s 			page 91


5073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
5103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
5105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
5106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
5107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
5111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
5120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
5122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
5123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
ARM GAS  /tmp/ccI69vXK.s 			page 92


5130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
ARM GAS  /tmp/ccI69vXK.s 			page 93


5187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
ARM GAS  /tmp/ccI69vXK.s 			page 94


5244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
ARM GAS  /tmp/ccI69vXK.s 			page 95


5301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
5343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_4 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_3 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_2 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_1 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
5354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
5355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 96


5358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
5372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
5375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
5377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
5386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
5387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
ARM GAS  /tmp/ccI69vXK.s 			page 97


5415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
  62              		.loc 2 5465 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              		.loc 2 5465 1 is_stmt 0 view .LVU5
ARM GAS  /tmp/ccI69vXK.s 			page 98


  68 0000 10B4     		push	{r4}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 4, -4
5466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1,
  72              		.loc 2 5470 3 is_stmt 1 view .LVU6
  73              		.loc 2 5470 25 is_stmt 0 view .LVU7
  74 0002 1430     		adds	r0, r0, #20
  75              	.LVL3:
  76              		.loc 2 5470 25 view .LVU8
  77 0004 4B0E     		lsrs	r3, r1, #25
  78 0006 9B00     		lsls	r3, r3, #2
  79 0008 03F00403 		and	r3, r3, #4
  80              	.LVL4:
5471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
5472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
  81              		.loc 2 5473 3 is_stmt 1 view .LVU9
  82 000c C458     		ldr	r4, [r0, r3]
  83 000e C1F30451 		ubfx	r1, r1, #20, #5
  84              	.LVL5:
  85              		.loc 2 5473 3 is_stmt 0 view .LVU10
  86 0012 4FF0070C 		mov	ip, #7
  87 0016 0CFA01FC 		lsl	ip, ip, r1
  88 001a 24EA0C0C 		bic	ip, r4, ip
  89 001e 8A40     		lsls	r2, r2, r1
  90              	.LVL6:
  91              		.loc 2 5473 3 view .LVU11
  92 0020 4CEA0202 		orr	r2, ip, r2
  93 0024 C250     		str	r2, [r0, r3]
5474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
  94              		.loc 2 5476 1 view .LVU12
  95 0026 5DF8044B 		ldr	r4, [sp], #4
  96              	.LCFI1:
  97              		.cfi_restore 4
  98              		.cfi_def_cfa_offset 0
  99 002a 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE185:
 103              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
 104              		.align	1
 105              		.global	HAL_ADCEx_Calibration_Start
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	HAL_ADCEx_Calibration_Start:
 111              	.LVL7:
 112              	.LFB288:
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @file    stm32l4xx_hal_adc_ex.c
ARM GAS  /tmp/ccI69vXK.s 			page 99


   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          "stm32l4xx_hal_adc.c".
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       available in file of generic functions "stm32l4xx_hal_adc.c".
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #include "stm32l4xx_hal.h"
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS      ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))           /*!< ADC_JSQR fields of p
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                              be updated anytime once the ADC is enabled */
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
ARM GAS  /tmp/ccI69vXK.s 			page 100


  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* source PLL SAI 8MHz, ADC clock prescaler 256), CPU frequency 80MHz.        */
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /*                      = 296 960 CPU cycles                                  */
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (296960UL)   /*!< ADC calibration time-out value (unit: CPU
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @}
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @verbatim
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @endverbatim
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/ccI69vXK.s 			page 101


 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 113              		.loc 1 120 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 120 1 is_stmt 0 view .LVU14
 118 0000 30B5     		push	{r4, r5, lr}
 119              	.LCFI2:
 120              		.cfi_def_cfa_offset 12
 121              		.cfi_offset 4, -12
 122              		.cfi_offset 5, -8
 123              		.cfi_offset 14, -4
 124 0002 83B0     		sub	sp, sp, #12
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 24
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 127              		.loc 1 121 3 is_stmt 1 view .LVU15
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
 128              		.loc 1 122 3 view .LVU16
 129              		.loc 1 122 17 is_stmt 0 view .LVU17
 130 0004 0023     		movs	r3, #0
 131 0006 0193     		str	r3, [sp, #4]
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 132              		.loc 1 125 3 is_stmt 1 view .LVU18
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 133              		.loc 1 126 3 view .LVU19
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 134              		.loc 1 129 3 view .LVU20
 135              		.loc 1 129 3 view .LVU21
 136 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 137 000c 012B     		cmp	r3, #1
 138 000e 41D0     		beq	.L11
 139 0010 0446     		mov	r4, r0
 140 0012 0D46     		mov	r5, r1
 141              		.loc 1 129 3 discriminator 2 view .LVU22
 142 0014 0123     		movs	r3, #1
 143 0016 80F85030 		strb	r3, [r0, #80]
 144              		.loc 1 129 3 discriminator 2 view .LVU23
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
 145              		.loc 1 134 3 discriminator 2 view .LVU24
 146              		.loc 1 134 20 is_stmt 0 discriminator 2 view .LVU25
 147 001a FFF7FEFF 		bl	ADC_Disable
 148              	.LVL8:
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 149              		.loc 1 137 3 is_stmt 1 discriminator 2 view .LVU26
ARM GAS  /tmp/ccI69vXK.s 			page 102


 150              		.loc 1 137 6 is_stmt 0 discriminator 2 view .LVU27
 151 001e 80BB     		cbnz	r0, .L6
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 152              		.loc 1 140 5 is_stmt 1 view .LVU28
 153 0020 636D     		ldr	r3, [r4, #84]
 154 0022 23F48853 		bic	r3, r3, #4352
 155 0026 23F00203 		bic	r3, r3, #2
 156 002a 43F00203 		orr	r3, r3, #2
 157 002e 6365     		str	r3, [r4, #84]
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, SingleDiff);
 158              		.loc 1 145 5 view .LVU29
 159 0030 2268     		ldr	r2, [r4]
 160              	.LVL9:
 161              	.LBB230:
 162              	.LBI230:
5477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
ARM GAS  /tmp/ccI69vXK.s 			page 103


5513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  >> ADC_SMPRX_REGOFFSET_POS));
5565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0
5568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BI
5569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
ARM GAS  /tmp/ccI69vXK.s 			page 104


5570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
5571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
5576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
5578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
5584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
5586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
5589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
5597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
ARM GAS  /tmp/ccI69vXK.s 			page 105


5627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)
5629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
5630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
5635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
5643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
5645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
5648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
5673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 106


5684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
5691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
ARM GAS  /tmp/ccI69vXK.s 			page 107


5741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
ARM GAS  /tmp/ccI69vXK.s 			page 108


5798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
5837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
ARM GAS  /tmp/ccI69vXK.s 			page 109


5855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
ARM GAS  /tmp/ccI69vXK.s 			page 110


5912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
5968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccI69vXK.s 			page 111


5969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
5971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
5977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
5981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR_AWD1SGL) == 0UL)
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
5988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
5989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     )
5990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     & (~(ADC_CFGR_AWD1CH))
5991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
5992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
5997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
5998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
5999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
6000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
6001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
6002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
6003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
6005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
6009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
6010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
6011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
6013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
6017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
6018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
6019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
6020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
6021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return analog_wd_monit_channels;
6023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 112


6026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
6028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
6035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
6040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
6045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Examples:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
ARM GAS  /tmp/ccI69vXK.s 			page 113


6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
6093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
6099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
6106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
6113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
6118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
6123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
6126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Examples:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
ARM GAS  /tmp/ccI69vXK.s 			page 114


6140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
6179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
6180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
6187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
6190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  /tmp/ccI69vXK.s 			page 115


6197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
6212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
6213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
6240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
ARM GAS  /tmp/ccI69vXK.s 			page 116


6254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
6270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
6282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
6289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
6292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
6294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
6298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
ARM GAS  /tmp/ccI69vXK.s 			page 117


6311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
6316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
6319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
6321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
6328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
6334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
6337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
6338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccI69vXK.s 			page 118


6368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
6387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
6408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
ARM GAS  /tmp/ccI69vXK.s 			page 119


6425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
6427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
6432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
6458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(const ADC_Common_TypeDef *ADCxy_COMMON)
6472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
6479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
ARM GAS  /tmp/ccI69vXK.s 			page 120


6482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
6488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
6492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
6495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
6530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
6533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
ARM GAS  /tmp/ccI69vXK.s 			page 121


6539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
6543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
6546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(const ADC_Common_TypeDef *ADCxy_COMMON)
6569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
ARM GAS  /tmp/ccI69vXK.s 			page 122


6596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
6603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
6632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(const ADC_Common_TypeDef *ADCxy_COMMON)
6637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
6646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
6649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
6650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
6651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
ARM GAS  /tmp/ccI69vXK.s 			page 123


6653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
6655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
6657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccI69vXK.s 			page 124


6710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
6718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccI69vXK.s 			page 125


6767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
6776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccI69vXK.s 			page 126


6824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
6827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
6838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
 163              		.loc 2 6865 22 view .LVU30
 164              	.LBB231:
6866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 165              		.loc 2 6870 3 view .LVU31
 166 0032 9368     		ldr	r3, [r2, #8]
 167 0034 23F04043 		bic	r3, r3, #-1073741824
 168 0038 23F03F03 		bic	r3, r3, #63
 169 003c 05F08045 		and	r5, r5, #1073741824
 170              	.LVL10:
 171              		.loc 2 6870 3 is_stmt 0 view .LVU32
 172 0040 2B43     		orrs	r3, r3, r5
ARM GAS  /tmp/ccI69vXK.s 			page 127


 173 0042 43F00043 		orr	r3, r3, #-2147483648
 174 0046 9360     		str	r3, [r2, #8]
 175              	.LVL11:
 176              	.L7:
 177              		.loc 2 6870 3 view .LVU33
 178              	.LBE231:
 179              	.LBE230:
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 180              		.loc 1 148 56 is_stmt 1 view .LVU34
 181              		.loc 1 148 44 is_stmt 0 view .LVU35
 182 0048 2368     		ldr	r3, [r4]
 183              	.LVL12:
 184              	.LBB232:
 185              	.LBI232:
6871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
 186              		.loc 2 6881 26 is_stmt 1 view .LVU36
 187              	.LBB233:
6882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 188              		.loc 2 6883 3 view .LVU37
 189              		.loc 2 6883 12 is_stmt 0 view .LVU38
 190 004a 9B68     		ldr	r3, [r3, #8]
 191              	.LVL13:
 192              		.loc 2 6883 70 view .LVU39
 193 004c 002B     		cmp	r3, #0
 194 004e 06DB     		blt	.L13
 195              	.LVL14:
 196              		.loc 2 6883 70 view .LVU40
 197              	.LBE233:
 198              	.LBE232:
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       wait_loop_index++;
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Process unlocked */
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         return HAL_ERROR;
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccI69vXK.s 			page 128


 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 199              		.loc 1 166 5 is_stmt 1 view .LVU41
 200 0050 636D     		ldr	r3, [r4, #84]
 201 0052 23F00303 		bic	r3, r3, #3
 202 0056 43F00103 		orr	r3, r3, #1
 203 005a 6365     		str	r3, [r4, #84]
 204 005c 15E0     		b	.L10
 205              	.LVL15:
 206              	.L13:
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 207              		.loc 1 150 7 view .LVU42
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 208              		.loc 1 150 22 is_stmt 0 view .LVU43
 209 005e 019B     		ldr	r3, [sp, #4]
 210 0060 0133     		adds	r3, r3, #1
 211 0062 0193     		str	r3, [sp, #4]
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 212              		.loc 1 151 7 is_stmt 1 view .LVU44
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 213              		.loc 1 151 27 is_stmt 0 view .LVU45
 214 0064 019B     		ldr	r3, [sp, #4]
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 215              		.loc 1 151 10 view .LVU46
 216 0066 B3F5912F 		cmp	r3, #296960
 217 006a EDD3     		bcc	.L7
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 218              		.loc 1 154 9 is_stmt 1 view .LVU47
 219 006c 636D     		ldr	r3, [r4, #84]
 220 006e 23F01203 		bic	r3, r3, #18
 221 0072 43F01003 		orr	r3, r3, #16
 222 0076 6365     		str	r3, [r4, #84]
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 223              		.loc 1 159 9 view .LVU48
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 224              		.loc 1 159 9 view .LVU49
 225 0078 0023     		movs	r3, #0
 226 007a 84F85030 		strb	r3, [r4, #80]
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 227              		.loc 1 159 9 view .LVU50
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 228              		.loc 1 161 9 view .LVU51
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 229              		.loc 1 161 16 is_stmt 0 view .LVU52
 230 007e 0120     		movs	r0, #1
 231              	.LVL16:
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 232              		.loc 1 161 16 view .LVU53
 233 0080 06E0     		b	.L5
 234              	.LVL17:
 235              	.L6:
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccI69vXK.s 			page 129


 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 236              		.loc 1 172 5 is_stmt 1 view .LVU54
 237 0082 636D     		ldr	r3, [r4, #84]
 238 0084 43F01003 		orr	r3, r3, #16
 239 0088 6365     		str	r3, [r4, #84]
 240              	.LVL18:
 241              	.L10:
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 242              		.loc 1 179 3 view .LVU55
 243              		.loc 1 179 3 view .LVU56
 244 008a 0023     		movs	r3, #0
 245 008c 84F85030 		strb	r3, [r4, #80]
 246              		.loc 1 179 3 view .LVU57
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 247              		.loc 1 182 3 view .LVU58
 248              	.LVL19:
 249              	.L5:
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 250              		.loc 1 183 1 is_stmt 0 view .LVU59
 251 0090 03B0     		add	sp, sp, #12
 252              	.LCFI4:
 253              		.cfi_remember_state
 254              		.cfi_def_cfa_offset 12
 255              		@ sp needed
 256 0092 30BD     		pop	{r4, r5, pc}
 257              	.LVL20:
 258              	.L11:
 259              	.LCFI5:
 260              		.cfi_restore_state
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 261              		.loc 1 129 3 view .LVU60
 262 0094 0220     		movs	r0, #2
 263              	.LVL21:
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 264              		.loc 1 129 3 view .LVU61
 265 0096 FBE7     		b	.L5
 266              		.cfi_endproc
 267              	.LFE288:
 269              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 270              		.align	1
 271              		.global	HAL_ADCEx_Calibration_GetValue
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	HAL_ADCEx_Calibration_GetValue:
 277              	.LVL22:
 278              	.LFB289:
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 130


 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval Calibration value.
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(const ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 279              		.loc 1 194 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 284              		.loc 1 196 3 view .LVU63
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 285              		.loc 1 197 3 view .LVU64
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance, SingleDiff);
 286              		.loc 1 200 3 view .LVU65
 287              		.loc 1 200 42 is_stmt 0 view .LVU66
 288 0000 0368     		ldr	r3, [r0]
 289              	.LVL23:
 290              	.LBB234:
 291              	.LBI234:
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 292              		.loc 2 3403 26 is_stmt 1 view .LVU67
 293              	.LBB235:
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
 294              		.loc 2 3409 3 view .LVU68
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
 295              		.loc 2 3409 21 is_stmt 0 view .LVU69
 296 0002 D3F8B400 		ldr	r0, [r3, #180]
 297              	.LVL24:
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
 298              		.loc 2 3409 21 view .LVU70
 299 0006 0840     		ands	r0, r0, r1
 300 0008 00F07F10 		and	r0, r0, #8323199
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
 301              		.loc 2 3411 74 view .LVU71
 302 000c 090B     		lsrs	r1, r1, #12
 303              	.LVL25:
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
 304              		.loc 2 3411 74 view .LVU72
 305 000e 01F01001 		and	r1, r1, #16
 306              	.LVL26:
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
 307              		.loc 2 3411 74 view .LVU73
 308              	.LBE235:
 309              	.LBE234:
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 310              		.loc 1 201 1 view .LVU74
 311 0012 C840     		lsrs	r0, r0, r1
 312 0014 7047     		bx	lr
ARM GAS  /tmp/ccI69vXK.s 			page 131


 313              		.cfi_endproc
 314              	.LFE289:
 316              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 317              		.align	1
 318              		.global	HAL_ADCEx_Calibration_SetValue
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	HAL_ADCEx_Calibration_SetValue:
 324              	.LVL27:
 325              	.LFB290:
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL state
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff,
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  uint32_t CalibrationFactor)
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 326              		.loc 1 215 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 330              		.loc 1 216 3 view .LVU76
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 331              		.loc 1 217 3 view .LVU77
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 332              		.loc 1 218 3 view .LVU78
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 333              		.loc 1 221 3 view .LVU79
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 334              		.loc 1 222 3 view .LVU80
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 335              		.loc 1 223 3 view .LVU81
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 336              		.loc 1 226 3 view .LVU82
 337              		.loc 1 226 3 view .LVU83
 338 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 339 0004 012B     		cmp	r3, #1
 340 0006 26D0     		beq	.L21
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 341              		.loc 1 215 1 is_stmt 0 discriminator 2 view .LVU84
 342 0008 70B5     		push	{r4, r5, r6, lr}
 343              	.LCFI6:
 344              		.cfi_def_cfa_offset 16
 345              		.cfi_offset 4, -16
ARM GAS  /tmp/ccI69vXK.s 			page 132


 346              		.cfi_offset 5, -12
 347              		.cfi_offset 6, -8
 348              		.cfi_offset 14, -4
 349 000a 0446     		mov	r4, r0
 350              		.loc 1 226 3 is_stmt 1 discriminator 2 view .LVU85
 351 000c 0123     		movs	r3, #1
 352 000e 80F85030 		strb	r3, [r0, #80]
 353              		.loc 1 226 3 discriminator 2 view .LVU86
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 354              		.loc 1 230 3 discriminator 2 view .LVU87
 355              		.loc 1 230 79 is_stmt 0 discriminator 2 view .LVU88
 356 0012 0068     		ldr	r0, [r0]
 357              	.LVL28:
 358              	.LBB236:
 359              	.LBI236:
6884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccI69vXK.s 			page 133


6923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 360              		.loc 2 6948 26 is_stmt 1 discriminator 2 view .LVU89
 361              	.LBB237:
6949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 362              		.loc 2 6950 3 discriminator 2 view .LVU90
 363              		.loc 2 6950 12 is_stmt 0 discriminator 2 view .LVU91
 364 0014 8368     		ldr	r3, [r0, #8]
 365              		.loc 2 6950 74 discriminator 2 view .LVU92
 366 0016 13F00403 		ands	r3, r3, #4
 367 001a 00D0     		beq	.L17
 368              		.loc 2 6950 74 view .LVU93
 369 001c 0123     		movs	r3, #1
 370              	.L17:
 371              	.LVL29:
 372              		.loc 2 6950 74 view .LVU94
 373              	.LBE237:
 374              	.LBE236:
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 375              		.loc 1 231 3 is_stmt 1 view .LVU95
 376              	.LBB238:
 377              	.LBI238:
6951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
6960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccI69vXK.s 			page 134


6961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
6974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
6989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
7004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 135


7018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
7019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
7030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
7034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
7050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(const ADC_Common_TypeDef *ADCxy_COMMO
7061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                               uint32_t ConversionData)
7062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
7065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
7067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
7072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
ARM GAS  /tmp/ccI69vXK.s 			page 136


7075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
7076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
7084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
7087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
7089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
7092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
7110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
7112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
7124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccI69vXK.s 			page 137


7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
 378              		.loc 2 7132 26 view .LVU96
 379              	.LBB239:
7133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 380              		.loc 2 7134 3 view .LVU97
 381              		.loc 2 7134 12 is_stmt 0 view .LVU98
 382 001e 8568     		ldr	r5, [r0, #8]
 383              		.loc 2 7134 76 view .LVU99
 384 0020 15F00805 		ands	r5, r5, #8
 385 0024 00D0     		beq	.L18
 386 0026 0125     		movs	r5, #1
 387              	.L18:
 388              	.LVL30:
 389              		.loc 2 7134 76 view .LVU100
 390              	.LBE239:
 391              	.LBE238:
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 392              		.loc 1 233 3 is_stmt 1 view .LVU101
 393              	.LBB240:
 394              	.LBI240:
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 395              		.loc 2 6826 26 view .LVU102
 396              	.LBB241:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 397              		.loc 2 6828 3 view .LVU103
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 398              		.loc 2 6828 12 is_stmt 0 view .LVU104
 399 0028 8668     		ldr	r6, [r0, #8]
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 400              		.loc 2 6828 68 view .LVU105
 401 002a 16F0010F 		tst	r6, #1
 402 002e 01D0     		beq	.L19
 403              	.LVL31:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 404              		.loc 2 6828 68 view .LVU106
 405              	.LBE241:
 406              	.LBE240:
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 407              		.loc 1 234 7 view .LVU107
 408 0030 03B9     		cbnz	r3, .L19
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 409              		.loc 1 235 7 view .LVU108
 410 0032 65B1     		cbz	r5, .L26
 411              	.L19:
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine */
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 412              		.loc 1 244 5 is_stmt 1 view .LVU109
 413 0034 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/ccI69vXK.s 			page 138


 414              	.LVL32:
 415              		.loc 1 244 5 is_stmt 0 view .LVU110
 416 0036 43F02003 		orr	r3, r3, #32
 417 003a 6365     		str	r3, [r4, #84]
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC error code */
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 418              		.loc 1 246 5 is_stmt 1 view .LVU111
 419 003c A36D     		ldr	r3, [r4, #88]
 420 003e 43F00103 		orr	r3, r3, #1
 421 0042 A365     		str	r3, [r4, #88]
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 422              		.loc 1 249 5 view .LVU112
 423              	.LVL33:
 424              		.loc 1 249 20 is_stmt 0 view .LVU113
 425 0044 0120     		movs	r0, #1
 426              	.LVL34:
 427              	.L20:
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 428              		.loc 1 253 3 is_stmt 1 view .LVU114
 429              		.loc 1 253 3 view .LVU115
 430 0046 0023     		movs	r3, #0
 431 0048 84F85030 		strb	r3, [r4, #80]
 432              		.loc 1 253 3 view .LVU116
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 433              		.loc 1 256 3 view .LVU117
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 434              		.loc 1 257 1 is_stmt 0 view .LVU118
 435 004c 70BD     		pop	{r4, r5, r6, pc}
 436              	.LVL35:
 437              	.L26:
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 438              		.loc 1 239 5 is_stmt 1 view .LVU119
 439 004e FFF7FEFF 		bl	LL_ADC_SetCalibrationFactor
 440              	.LVL36:
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 441              		.loc 1 216 21 is_stmt 0 view .LVU120
 442 0052 0020     		movs	r0, #0
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 443              		.loc 1 239 5 view .LVU121
 444 0054 F7E7     		b	.L20
 445              	.LVL37:
 446              	.L21:
 447              	.LCFI7:
 448              		.cfi_def_cfa_offset 0
 449              		.cfi_restore 4
 450              		.cfi_restore 5
 451              		.cfi_restore 6
 452              		.cfi_restore 14
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 453              		.loc 1 226 3 view .LVU122
ARM GAS  /tmp/ccI69vXK.s 			page 139


 454 0056 0220     		movs	r0, #2
 455              	.LVL38:
 456              		.loc 1 257 1 view .LVU123
 457 0058 7047     		bx	lr
 458              		.cfi_endproc
 459              	.LFE290:
 461              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 462              		.align	1
 463              		.global	HAL_ADCEx_InjectedStart
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	HAL_ADCEx_InjectedStart:
 469              	.LVL39:
 470              	.LFB291:
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 471              		.loc 1 271 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 475              		.loc 1 272 3 view .LVU125
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 476              		.loc 1 273 3 view .LVU126
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 477              		.loc 1 279 3 view .LVU127
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 478              		.loc 1 281 3 view .LVU128
 479              		.loc 1 281 42 is_stmt 0 view .LVU129
 480 0000 0368     		ldr	r3, [r0]
 481              	.LVL40:
 482              	.LBB242:
 483              	.LBI242:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 484              		.loc 2 7132 26 is_stmt 1 view .LVU130
 485              	.LBB243:
 486              		.loc 2 7134 3 view .LVU131
 487              		.loc 2 7134 12 is_stmt 0 view .LVU132
ARM GAS  /tmp/ccI69vXK.s 			page 140


 488 0002 9A68     		ldr	r2, [r3, #8]
 489              		.loc 2 7134 76 view .LVU133
 490 0004 12F0080F 		tst	r2, #8
 491 0008 44D1     		bne	.L34
 492              	.LBE243:
 493              	.LBE242:
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 494              		.loc 1 271 1 view .LVU134
 495 000a 10B5     		push	{r4, lr}
 496              	.LCFI8:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 4, -8
 499              		.cfi_offset 14, -4
 500 000c 0446     		mov	r4, r0
 501              	.LVL41:
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 502              		.loc 1 294 5 is_stmt 1 view .LVU135
 503              		.loc 1 294 33 is_stmt 0 view .LVU136
 504 000e DA68     		ldr	r2, [r3, #12]
 505              	.LVL42:
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 506              		.loc 1 296 5 is_stmt 1 view .LVU137
 507              		.loc 1 296 10 is_stmt 0 view .LVU138
 508 0010 DB6C     		ldr	r3, [r3, #76]
 509              		.loc 1 296 8 view .LVU139
 510 0012 13F0C00F 		tst	r3, #192
 511 0016 01D1     		bne	.L29
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 512              		.loc 1 297 9 view .LVU140
 513 0018 002A     		cmp	r2, #0
 514 001a 2EDA     		bge	.L40
 515              	.L29:
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        )
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 516              		.loc 1 305 5 is_stmt 1 view .LVU141
 517              		.loc 1 305 5 view .LVU142
 518 001c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 519 0020 012B     		cmp	r3, #1
ARM GAS  /tmp/ccI69vXK.s 			page 141


 520 0022 39D0     		beq	.L35
 521              		.loc 1 305 5 discriminator 2 view .LVU143
 522 0024 0123     		movs	r3, #1
 523 0026 84F85030 		strb	r3, [r4, #80]
 524              		.loc 1 305 5 discriminator 2 view .LVU144
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 525              		.loc 1 308 5 discriminator 2 view .LVU145
 526              		.loc 1 308 22 is_stmt 0 discriminator 2 view .LVU146
 527 002a 2046     		mov	r0, r4
 528              	.LVL43:
 529              		.loc 1 308 22 discriminator 2 view .LVU147
 530 002c FFF7FEFF 		bl	ADC_Enable
 531              	.LVL44:
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 532              		.loc 1 311 5 is_stmt 1 discriminator 2 view .LVU148
 533              		.loc 1 311 8 is_stmt 0 discriminator 2 view .LVU149
 534 0030 60BB     		cbnz	r0, .L30
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 535              		.loc 1 314 7 is_stmt 1 view .LVU150
 536              		.loc 1 314 16 is_stmt 0 view .LVU151
 537 0032 636D     		ldr	r3, [r4, #84]
 538              		.loc 1 314 10 view .LVU152
 539 0034 13F4807F 		tst	r3, #256
 540 0038 25D0     		beq	.L31
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 541              		.loc 1 317 9 is_stmt 1 view .LVU153
 542 003a A36D     		ldr	r3, [r4, #88]
 543 003c 23F00803 		bic	r3, r3, #8
 544 0040 A365     		str	r3, [r4, #88]
 545              	.L32:
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 546              		.loc 1 328 7 view .LVU154
 547 0042 636D     		ldr	r3, [r4, #84]
 548 0044 23F44053 		bic	r3, r3, #12288
 549 0048 23F00103 		bic	r3, r3, #1
 550 004c 43F48053 		orr	r3, r3, #4096
 551 0050 6365     		str	r3, [r4, #84]
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
ARM GAS  /tmp/ccI69vXK.s 			page 142


 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 552              		.loc 1 346 7 view .LVU155
 553 0052 2368     		ldr	r3, [r4]
 554 0054 6022     		movs	r2, #96
 555 0056 1A60     		str	r2, [r3]
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 556              		.loc 1 351 7 view .LVU156
 557              		.loc 1 351 7 view .LVU157
 558 0058 0023     		movs	r3, #0
 559 005a 84F85030 		strb	r3, [r4, #80]
 560              		.loc 1 351 7 view .LVU158
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
ARM GAS  /tmp/ccI69vXK.s 			page 143


 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 561              		.loc 1 384 7 view .LVU159
 562              		.loc 1 384 38 is_stmt 0 view .LVU160
 563 005e 2268     		ldr	r2, [r4]
 564              	.LVL45:
 565              	.LBB244:
 566              	.LBI244:
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 567              		.loc 2 5034 26 is_stmt 1 view .LVU161
 568              	.LBB245:
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 569              		.loc 2 5036 3 view .LVU162
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 570              		.loc 2 5036 21 is_stmt 0 view .LVU163
 571 0060 D368     		ldr	r3, [r2, #12]
 572              	.LVL46:
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 573              		.loc 2 5036 21 view .LVU164
 574              	.LBE245:
 575              	.LBE244:
 576              		.loc 1 384 10 view .LVU165
 577 0062 13F0007F 		tst	r3, #33554432
 578 0066 18D1     		bne	.L28
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 579              		.loc 1 387 9 is_stmt 1 view .LVU166
 580              	.LVL47:
 581              	.LBB246:
 582              	.LBI246:
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 583              		.loc 2 7096 22 view .LVU167
 584              	.LBB247:
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 585              		.loc 2 7101 3 view .LVU168
 586 0068 9368     		ldr	r3, [r2, #8]
 587 006a 23F00043 		bic	r3, r3, #-2147483648
 588 006e 23F03F03 		bic	r3, r3, #63
 589 0072 43F00803 		orr	r3, r3, #8
 590 0076 9360     		str	r3, [r2, #8]
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 591              		.loc 2 7104 1 is_stmt 0 view .LVU169
 592 0078 0FE0     		b	.L28
 593              	.LVL48:
 594              	.L40:
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 595              		.loc 2 7104 1 view .LVU170
 596              	.LBE247:
 597              	.LBE246:
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 598              		.loc 1 300 7 is_stmt 1 view .LVU171
 599 007a 436D     		ldr	r3, [r0, #84]
ARM GAS  /tmp/ccI69vXK.s 			page 144


 600 007c 43F02003 		orr	r3, r3, #32
 601 0080 4365     		str	r3, [r0, #84]
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 602              		.loc 1 301 7 view .LVU172
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 603              		.loc 1 301 14 is_stmt 0 view .LVU173
 604 0082 0120     		movs	r0, #1
 605              	.LVL49:
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 606              		.loc 1 301 14 view .LVU174
 607 0084 09E0     		b	.L28
 608              	.LVL50:
 609              	.L31:
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 610              		.loc 1 322 9 is_stmt 1 view .LVU175
 611 0086 0023     		movs	r3, #0
 612 0088 A365     		str	r3, [r4, #88]
 613 008a DAE7     		b	.L32
 614              	.L30:
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 615              		.loc 1 395 7 view .LVU176
 616              		.loc 1 395 7 view .LVU177
 617 008c 0023     		movs	r3, #0
 618 008e 84F85030 		strb	r3, [r4, #80]
 619              		.loc 1 395 7 view .LVU178
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 620              		.loc 1 399 5 view .LVU179
 621              		.loc 1 399 12 is_stmt 0 view .LVU180
 622 0092 02E0     		b	.L28
 623              	.LVL51:
 624              	.L34:
 625              	.LCFI9:
 626              		.cfi_def_cfa_offset 0
 627              		.cfi_restore 4
 628              		.cfi_restore 14
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 629              		.loc 1 283 12 view .LVU181
 630 0094 0220     		movs	r0, #2
 631              	.LVL52:
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 632              		.loc 1 401 1 view .LVU182
 633 0096 7047     		bx	lr
 634              	.LVL53:
 635              	.L35:
 636              	.LCFI10:
 637              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccI69vXK.s 			page 145


 638              		.cfi_offset 4, -8
 639              		.cfi_offset 14, -4
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 640              		.loc 1 305 5 view .LVU183
 641 0098 0220     		movs	r0, #2
 642              	.LVL54:
 643              	.L28:
 644              		.loc 1 401 1 view .LVU184
 645 009a 10BD     		pop	{r4, pc}
 646              		.loc 1 401 1 view .LVU185
 647              		.cfi_endproc
 648              	.LFE291:
 650              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 651              		.align	1
 652              		.global	HAL_ADCEx_InjectedStop
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 657              	HAL_ADCEx_InjectedStop:
 658              	.LVL55:
 659              	.LFB292:
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 660              		.loc 1 420 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 664              		.loc 1 421 3 view .LVU187
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 665              		.loc 1 424 3 view .LVU188
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 666              		.loc 1 427 3 view .LVU189
 667              		.loc 1 427 3 view .LVU190
 668 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 669 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/ccI69vXK.s 			page 146


 670 0006 23D0     		beq	.L45
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 671              		.loc 1 420 1 is_stmt 0 discriminator 2 view .LVU191
 672 0008 10B5     		push	{r4, lr}
 673              	.LCFI11:
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 4, -8
 676              		.cfi_offset 14, -4
 677 000a 0446     		mov	r4, r0
 678              		.loc 1 427 3 is_stmt 1 discriminator 2 view .LVU192
 679 000c 0123     		movs	r3, #1
 680 000e 80F85030 		strb	r3, [r0, #80]
 681              		.loc 1 427 3 discriminator 2 view .LVU193
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 682              		.loc 1 430 3 discriminator 2 view .LVU194
 683              		.loc 1 430 20 is_stmt 0 discriminator 2 view .LVU195
 684 0012 0221     		movs	r1, #2
 685 0014 FFF7FEFF 		bl	ADC_ConversionStop
 686              	.LVL56:
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 687              		.loc 1 434 3 is_stmt 1 discriminator 2 view .LVU196
 688              		.loc 1 434 6 is_stmt 0 discriminator 2 view .LVU197
 689 0018 40B9     		cbnz	r0, .L43
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 690              		.loc 1 436 5 is_stmt 1 view .LVU198
 691              		.loc 1 436 44 is_stmt 0 view .LVU199
 692 001a 2368     		ldr	r3, [r4]
 693              	.LVL57:
 694              	.LBB248:
 695              	.LBI248:
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 696              		.loc 2 6948 26 is_stmt 1 view .LVU200
 697              	.LBB249:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 698              		.loc 2 6950 3 view .LVU201
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 699              		.loc 2 6950 12 is_stmt 0 view .LVU202
 700 001c 9B68     		ldr	r3, [r3, #8]
 701              	.LVL58:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 702              		.loc 2 6950 74 view .LVU203
 703 001e 13F0040F 		tst	r3, #4
 704 0022 07D0     		beq	.L44
 705              	.LVL59:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 706              		.loc 2 6950 74 view .LVU204
 707              	.LBE249:
 708              	.LBE248:
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
ARM GAS  /tmp/ccI69vXK.s 			page 147


 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 709              		.loc 1 455 7 is_stmt 1 view .LVU205
 710 0024 636D     		ldr	r3, [r4, #84]
 711 0026 23F48053 		bic	r3, r3, #4096
 712 002a 6365     		str	r3, [r4, #84]
 713              	.L43:
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 714              		.loc 1 460 3 view .LVU206
 715              		.loc 1 460 3 view .LVU207
 716 002c 0023     		movs	r3, #0
 717 002e 84F85030 		strb	r3, [r4, #80]
 718              		.loc 1 460 3 view .LVU208
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 719              		.loc 1 463 3 view .LVU209
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 720              		.loc 1 464 1 is_stmt 0 view .LVU210
 721 0032 10BD     		pop	{r4, pc}
 722              	.LVL60:
 723              	.L44:
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 724              		.loc 1 439 7 is_stmt 1 view .LVU211
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 725              		.loc 1 439 24 is_stmt 0 view .LVU212
 726 0034 2046     		mov	r0, r4
 727              	.LVL61:
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 728              		.loc 1 439 24 view .LVU213
 729 0036 FFF7FEFF 		bl	ADC_Disable
 730              	.LVL62:
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 731              		.loc 1 442 7 is_stmt 1 view .LVU214
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 732              		.loc 1 442 10 is_stmt 0 view .LVU215
 733 003a 0028     		cmp	r0, #0
 734 003c F6D1     		bne	.L43
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
ARM GAS  /tmp/ccI69vXK.s 			page 148


 735              		.loc 1 445 9 is_stmt 1 view .LVU216
 736 003e 636D     		ldr	r3, [r4, #84]
 737 0040 23F48853 		bic	r3, r3, #4352
 738 0044 23F00103 		bic	r3, r3, #1
 739 0048 43F00103 		orr	r3, r3, #1
 740 004c 6365     		str	r3, [r4, #84]
 741 004e EDE7     		b	.L43
 742              	.LVL63:
 743              	.L45:
 744              	.LCFI12:
 745              		.cfi_def_cfa_offset 0
 746              		.cfi_restore 4
 747              		.cfi_restore 14
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 748              		.loc 1 427 3 is_stmt 0 view .LVU217
 749 0050 0220     		movs	r0, #2
 750              	.LVL64:
 751              		.loc 1 464 1 view .LVU218
 752 0052 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE292:
 756              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 757              		.align	1
 758              		.global	HAL_ADCEx_InjectedPollForConversion
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 763              	HAL_ADCEx_InjectedPollForConversion:
 764              	.LVL65:
 765              	.LFB293:
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 766              		.loc 1 475 1 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		.loc 1 475 1 is_stmt 0 view .LVU220
 771 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 772              	.LCFI13:
 773              		.cfi_def_cfa_offset 24
 774              		.cfi_offset 3, -24
 775              		.cfi_offset 4, -20
 776              		.cfi_offset 5, -16
 777              		.cfi_offset 6, -12
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
 780 0002 0446     		mov	r4, r0
 781 0004 0D46     		mov	r5, r1
ARM GAS  /tmp/ccI69vXK.s 			page 149


 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 782              		.loc 1 476 3 is_stmt 1 view .LVU221
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_flag_end;
 783              		.loc 1 477 3 view .LVU222
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 784              		.loc 1 478 3 view .LVU223
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 785              		.loc 1 479 3 view .LVU224
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 786              		.loc 1 480 3 view .LVU225
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 787              		.loc 1 487 3 view .LVU226
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* If end of sequence selected */
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 788              		.loc 1 490 3 view .LVU227
 789              		.loc 1 490 17 is_stmt 0 view .LVU228
 790 0006 4369     		ldr	r3, [r0, #20]
 791              		.loc 1 490 6 view .LVU229
 792 0008 082B     		cmp	r3, #8
 793 000a 1ED0     		beq	.L67
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_flag_end = ADC_FLAG_JEOS;
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else /* end of conversion selected */
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_flag_end = ADC_FLAG_JEOC;
 794              		.loc 1 496 18 view .LVU230
 795 000c 2026     		movs	r6, #32
 796              	.L51:
 797              	.LVL66:
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get timeout */
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 798              		.loc 1 500 3 is_stmt 1 view .LVU231
 799              		.loc 1 500 15 is_stmt 0 view .LVU232
 800 000e FFF7FEFF 		bl	HAL_GetTick
 801              	.LVL67:
 802              		.loc 1 500 15 view .LVU233
 803 0012 0746     		mov	r7, r0
 804              	.LVL68:
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 805              		.loc 1 503 3 is_stmt 1 view .LVU234
 806              	.L53:
 807              		.loc 1 503 47 view .LVU235
 808              		.loc 1 503 15 is_stmt 0 view .LVU236
 809 0014 2368     		ldr	r3, [r4]
 810              		.loc 1 503 25 view .LVU237
ARM GAS  /tmp/ccI69vXK.s 			page 150


 811 0016 1A68     		ldr	r2, [r3]
 812              		.loc 1 503 47 view .LVU238
 813 0018 3242     		tst	r2, r6
 814 001a 18D1     		bne	.L68
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 815              		.loc 1 506 5 is_stmt 1 view .LVU239
 816              		.loc 1 506 8 is_stmt 0 view .LVU240
 817 001c B5F1FF3F 		cmp	r5, #-1
 818 0020 F8D0     		beq	.L53
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 819              		.loc 1 508 7 is_stmt 1 view .LVU241
 820              		.loc 1 508 13 is_stmt 0 view .LVU242
 821 0022 FFF7FEFF 		bl	HAL_GetTick
 822              	.LVL69:
 823              		.loc 1 508 27 view .LVU243
 824 0026 C31B     		subs	r3, r0, r7
 825              		.loc 1 508 10 view .LVU244
 826 0028 AB42     		cmp	r3, r5
 827 002a 01D8     		bhi	.L54
 828              		.loc 1 508 51 discriminator 1 view .LVU245
 829 002c 002D     		cmp	r5, #0
 830 002e F1D1     		bne	.L53
 831              	.L54:
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 832              		.loc 1 511 9 is_stmt 1 view .LVU246
 833              		.loc 1 511 18 is_stmt 0 view .LVU247
 834 0030 2368     		ldr	r3, [r4]
 835              		.loc 1 511 28 view .LVU248
 836 0032 1B68     		ldr	r3, [r3]
 837              		.loc 1 511 12 view .LVU249
 838 0034 3342     		tst	r3, r6
 839 0036 EDD1     		bne	.L53
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 840              		.loc 1 514 11 is_stmt 1 view .LVU250
 841 0038 636D     		ldr	r3, [r4, #84]
 842 003a 43F00403 		orr	r3, r3, #4
 843 003e 6365     		str	r3, [r4, #84]
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 844              		.loc 1 517 11 view .LVU251
 845              		.loc 1 517 11 view .LVU252
 846 0040 0023     		movs	r3, #0
 847 0042 84F85030 		strb	r3, [r4, #80]
 848              		.loc 1 517 11 view .LVU253
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 849              		.loc 1 519 11 view .LVU254
 850              		.loc 1 519 18 is_stmt 0 view .LVU255
 851 0046 0320     		movs	r0, #3
ARM GAS  /tmp/ccI69vXK.s 			page 151


 852 0048 30E0     		b	.L55
 853              	.LVL70:
 854              	.L67:
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 855              		.loc 1 492 18 view .LVU256
 856 004a 4026     		movs	r6, #64
 857 004c DFE7     		b	.L51
 858              	.LVL71:
 859              	.L68:
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 860              		.loc 1 526 3 is_stmt 1 view .LVU257
 861              	.LBB250:
 862              	.LBI250:
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 863              		.loc 2 4714 26 view .LVU258
 864              	.LBB251:
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 865              		.loc 2 4716 3 view .LVU259
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 866              		.loc 2 4716 12 is_stmt 0 view .LVU260
 867 004e DA6C     		ldr	r2, [r3, #76]
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 868              		.loc 2 4716 105 view .LVU261
 869 0050 12F0C00F 		tst	r2, #192
 870 0054 2BD1     		bne	.L63
 871 0056 0120     		movs	r0, #1
 872              	.L57:
 873              	.LVL72:
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 874              		.loc 2 4716 105 view .LVU262
 875              	.LBE251:
 876              	.LBE250:
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 877              		.loc 1 527 3 is_stmt 1 view .LVU263
 878              	.LBB253:
 879              	.LBI253:
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 880              		.loc 2 3984 26 view .LVU264
 881              	.LBB254:
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 882              		.loc 2 3986 3 view .LVU265
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 883              		.loc 2 3986 12 is_stmt 0 view .LVU266
 884 0058 DA68     		ldr	r2, [r3, #12]
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 885              		.loc 2 3986 103 view .LVU267
 886 005a 12F4406F 		tst	r2, #3072
 887 005e 28D1     		bne	.L64
 888 0060 0125     		movs	r5, #1
 889              	.LVL73:
 890              	.L58:
ARM GAS  /tmp/ccI69vXK.s 			page 152


3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 891              		.loc 2 3986 103 view .LVU268
 892              	.LBE254:
 893              	.LBE253:
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* available).                                                        */
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 894              		.loc 1 546 3 is_stmt 1 view .LVU269
 895              		.loc 1 546 12 is_stmt 0 view .LVU270
 896 0062 D968     		ldr	r1, [r3, #12]
 897              	.LVL74:
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Update ADC state machine */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 898              		.loc 1 550 3 is_stmt 1 view .LVU271
 899 0064 626D     		ldr	r2, [r4, #84]
 900 0066 42F40052 		orr	r2, r2, #8192
 901 006a 6265     		str	r2, [r4, #84]
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 902              		.loc 1 555 3 view .LVU272
 903              		.loc 1 555 6 is_stmt 0 view .LVU273
 904 006c 30B9     		cbnz	r0, .L59
 905              		.loc 1 555 66 discriminator 1 view .LVU274
 906 006e 11F0007F 		tst	r1, #33554432
 907 0072 16D1     		bne	.L60
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 908              		.loc 1 556 57 view .LVU275
 909 0074 ADB1     		cbz	r5, .L60
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 910              		.loc 1 557 58 view .LVU276
 911 0076 11F4005F 		tst	r1, #8192
 912 007a 12D1     		bne	.L60
 913              	.L59:
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
ARM GAS  /tmp/ccI69vXK.s 			page 153


 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 914              		.loc 1 561 5 is_stmt 1 view .LVU277
 915              		.loc 1 561 9 is_stmt 0 view .LVU278
 916 007c 1A68     		ldr	r2, [r3]
 917              		.loc 1 561 8 view .LVU279
 918 007e 12F0400F 		tst	r2, #64
 919 0082 0ED0     		beq	.L60
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 920              		.loc 1 569 7 is_stmt 1 view .LVU280
 921              		.loc 1 569 10 is_stmt 0 view .LVU281
 922 0084 11F4001F 		tst	r1, #2097152
 923 0088 0BD1     		bne	.L60
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 924              		.loc 1 572 9 is_stmt 1 view .LVU282
 925 008a 626D     		ldr	r2, [r4, #84]
 926 008c 22F48052 		bic	r2, r2, #4096
 927 0090 6265     		str	r2, [r4, #84]
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 928              		.loc 1 574 9 view .LVU283
 929              		.loc 1 574 18 is_stmt 0 view .LVU284
 930 0092 626D     		ldr	r2, [r4, #84]
 931              		.loc 1 574 12 view .LVU285
 932 0094 12F4807F 		tst	r2, #256
 933 0098 03D1     		bne	.L60
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 934              		.loc 1 576 11 is_stmt 1 view .LVU286
 935 009a 626D     		ldr	r2, [r4, #84]
 936 009c 42F00102 		orr	r2, r2, #1
 937 00a0 6265     		str	r2, [r4, #84]
 938              	.L60:
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Clear polled flag */
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_flag_end == ADC_FLAG_JEOS)
 939              		.loc 1 583 3 view .LVU287
 940              		.loc 1 583 6 is_stmt 0 view .LVU288
 941 00a2 402E     		cmp	r6, #64
 942 00a4 07D0     		beq	.L69
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* cleared.                                                               */
ARM GAS  /tmp/ccI69vXK.s 			page 154


 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 943              		.loc 1 596 5 is_stmt 1 view .LVU289
 944 00a6 2022     		movs	r2, #32
 945 00a8 1A60     		str	r2, [r3]
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return API HAL status */
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return HAL_OK;
 946              		.loc 1 600 10 is_stmt 0 view .LVU290
 947 00aa 0020     		movs	r0, #0
 948              	.LVL75:
 949              	.L55:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 950              		.loc 1 601 1 view .LVU291
 951 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 952              	.LVL76:
 953              	.L63:
 954              	.LBB256:
 955              	.LBB252:
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 956              		.loc 2 4716 105 view .LVU292
 957 00ae 0020     		movs	r0, #0
 958 00b0 D2E7     		b	.L57
 959              	.LVL77:
 960              	.L64:
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 961              		.loc 2 4716 105 view .LVU293
 962              	.LBE252:
 963              	.LBE256:
 964              	.LBB257:
 965              	.LBB255:
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 966              		.loc 2 3986 103 view .LVU294
 967 00b2 0025     		movs	r5, #0
 968              	.LVL78:
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 969              		.loc 2 3986 103 view .LVU295
 970 00b4 D5E7     		b	.L58
 971              	.LVL79:
 972              	.L69:
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 973              		.loc 2 3986 103 view .LVU296
 974              	.LBE255:
 975              	.LBE257:
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 976              		.loc 1 589 5 is_stmt 1 view .LVU297
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 977              		.loc 1 589 8 is_stmt 0 view .LVU298
 978 00b6 11F4804F 		tst	r1, #16384
 979 00ba 03D1     		bne	.L65
ARM GAS  /tmp/ccI69vXK.s 			page 155


 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 980              		.loc 1 591 7 is_stmt 1 view .LVU299
 981 00bc 6022     		movs	r2, #96
 982 00be 1A60     		str	r2, [r3]
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 983              		.loc 1 600 10 is_stmt 0 view .LVU300
 984 00c0 0020     		movs	r0, #0
 985              	.LVL80:
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 986              		.loc 1 600 10 view .LVU301
 987 00c2 F3E7     		b	.L55
 988              	.LVL81:
 989              	.L65:
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 990              		.loc 1 600 10 view .LVU302
 991 00c4 0020     		movs	r0, #0
 992              	.LVL82:
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 993              		.loc 1 600 10 view .LVU303
 994 00c6 F1E7     		b	.L55
 995              		.cfi_endproc
 996              	.LFE293:
 998              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 999              		.align	1
 1000              		.global	HAL_ADCEx_InjectedStart_IT
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1005              	HAL_ADCEx_InjectedStart_IT:
 1006              	.LVL83:
 1007              	.LFB294:
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1008              		.loc 1 616 1 is_stmt 1 view -0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1012              		.loc 1 617 3 view .LVU305
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 1013              		.loc 1 618 3 view .LVU306
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
ARM GAS  /tmp/ccI69vXK.s 			page 156


 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1014              		.loc 1 624 3 view .LVU307
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 1015              		.loc 1 626 3 view .LVU308
 1016              		.loc 1 626 42 is_stmt 0 view .LVU309
 1017 0000 0368     		ldr	r3, [r0]
 1018              	.LVL84:
 1019              	.LBB258:
 1020              	.LBI258:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1021              		.loc 2 7132 26 is_stmt 1 view .LVU310
 1022              	.LBB259:
 1023              		.loc 2 7134 3 view .LVU311
 1024              		.loc 2 7134 12 is_stmt 0 view .LVU312
 1025 0002 9A68     		ldr	r2, [r3, #8]
 1026              		.loc 2 7134 76 view .LVU313
 1027 0004 12F0080F 		tst	r2, #8
 1028 0008 66D1     		bne	.L80
 1029              	.LBE259:
 1030              	.LBE258:
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1031              		.loc 1 616 1 view .LVU314
 1032 000a 10B5     		push	{r4, lr}
 1033              	.LCFI14:
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 4, -8
 1036              		.cfi_offset 14, -4
 1037 000c 0446     		mov	r4, r0
 1038              	.LVL85:
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 1039              		.loc 1 639 5 is_stmt 1 view .LVU315
 1040              		.loc 1 639 33 is_stmt 0 view .LVU316
 1041 000e DA68     		ldr	r2, [r3, #12]
 1042              	.LVL86:
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1043              		.loc 1 641 5 is_stmt 1 view .LVU317
 1044              		.loc 1 641 10 is_stmt 0 view .LVU318
 1045 0010 DB6C     		ldr	r3, [r3, #76]
 1046              		.loc 1 641 8 view .LVU319
 1047 0012 13F0C00F 		tst	r3, #192
 1048 0016 01D1     		bne	.L72
ARM GAS  /tmp/ccI69vXK.s 			page 157


 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1049              		.loc 1 642 9 view .LVU320
 1050 0018 002A     		cmp	r2, #0
 1051 001a 45DA     		bge	.L86
 1052              	.L72:
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        )
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1053              		.loc 1 650 5 is_stmt 1 view .LVU321
 1054              		.loc 1 650 5 view .LVU322
 1055 001c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1056 0020 012B     		cmp	r3, #1
 1057 0022 5BD0     		beq	.L81
 1058              		.loc 1 650 5 discriminator 2 view .LVU323
 1059 0024 0123     		movs	r3, #1
 1060 0026 84F85030 		strb	r3, [r4, #80]
 1061              		.loc 1 650 5 discriminator 2 view .LVU324
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1062              		.loc 1 653 5 discriminator 2 view .LVU325
 1063              		.loc 1 653 22 is_stmt 0 discriminator 2 view .LVU326
 1064 002a 2046     		mov	r0, r4
 1065              	.LVL87:
 1066              		.loc 1 653 22 discriminator 2 view .LVU327
 1067 002c FFF7FEFF 		bl	ADC_Enable
 1068              	.LVL88:
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1069              		.loc 1 656 5 is_stmt 1 discriminator 2 view .LVU328
 1070              		.loc 1 656 8 is_stmt 0 discriminator 2 view .LVU329
 1071 0030 0028     		cmp	r0, #0
 1072 0032 4DD1     		bne	.L73
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1073              		.loc 1 659 7 is_stmt 1 view .LVU330
 1074              		.loc 1 659 16 is_stmt 0 view .LVU331
 1075 0034 636D     		ldr	r3, [r4, #84]
 1076              		.loc 1 659 10 view .LVU332
 1077 0036 13F4807F 		tst	r3, #256
 1078 003a 3BD0     		beq	.L74
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1079              		.loc 1 662 9 is_stmt 1 view .LVU333
 1080 003c A36D     		ldr	r3, [r4, #88]
 1081 003e 23F00803 		bic	r3, r3, #8
 1082 0042 A365     		str	r3, [r4, #88]
 1083              	.L75:
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/ccI69vXK.s 			page 158


 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1084              		.loc 1 673 7 view .LVU334
 1085 0044 636D     		ldr	r3, [r4, #84]
 1086 0046 23F44053 		bic	r3, r3, #12288
 1087 004a 23F00103 		bic	r3, r3, #1
 1088 004e 43F48053 		orr	r3, r3, #4096
 1089 0052 6365     		str	r3, [r4, #84]
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1090              		.loc 1 691 7 view .LVU335
 1091 0054 2368     		ldr	r3, [r4]
 1092 0056 6022     		movs	r2, #96
 1093 0058 1A60     		str	r2, [r3]
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1094              		.loc 1 696 7 view .LVU336
 1095              		.loc 1 696 7 view .LVU337
 1096 005a 0023     		movs	r3, #0
 1097 005c 84F85030 		strb	r3, [r4, #80]
 1098              		.loc 1 696 7 view .LVU338
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 1099              		.loc 1 700 7 view .LVU339
 1100              		.loc 1 700 16 is_stmt 0 view .LVU340
 1101 0060 2368     		ldr	r3, [r4]
 1102              		.loc 1 700 26 view .LVU341
 1103 0062 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccI69vXK.s 			page 159


 1104              		.loc 1 700 10 view .LVU342
 1105 0064 12F4001F 		tst	r2, #2097152
 1106 0068 03D0     		beq	.L76
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 1107              		.loc 1 702 9 is_stmt 1 view .LVU343
 1108 006a 5A68     		ldr	r2, [r3, #4]
 1109 006c 42F48062 		orr	r2, r2, #1024
 1110 0070 5A60     		str	r2, [r3, #4]
 1111              	.L76:
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 1112              		.loc 1 706 7 view .LVU344
 1113              		.loc 1 706 25 is_stmt 0 view .LVU345
 1114 0072 6369     		ldr	r3, [r4, #20]
 1115              		.loc 1 706 7 view .LVU346
 1116 0074 082B     		cmp	r3, #8
 1117 0076 20D0     		beq	.L87
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         default:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 1118              		.loc 1 714 11 is_stmt 1 view .LVU347
 1119 0078 2268     		ldr	r2, [r4]
 1120 007a 5368     		ldr	r3, [r2, #4]
 1121 007c 23F04003 		bic	r3, r3, #64
 1122 0080 5360     		str	r3, [r2, #4]
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1123              		.loc 1 715 11 view .LVU348
 1124 0082 2268     		ldr	r2, [r4]
 1125 0084 5368     		ldr	r3, [r2, #4]
 1126 0086 43F02003 		orr	r3, r3, #32
 1127 008a 5360     		str	r3, [r2, #4]
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 1128              		.loc 1 716 11 view .LVU349
 1129              	.L78:
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
ARM GAS  /tmp/ccI69vXK.s 			page 160


 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 1130              		.loc 1 750 7 view .LVU350
 1131              		.loc 1 750 38 is_stmt 0 view .LVU351
 1132 008c 2268     		ldr	r2, [r4]
 1133              	.LVL89:
 1134              	.LBB260:
 1135              	.LBI260:
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1136              		.loc 2 5034 26 is_stmt 1 view .LVU352
 1137              	.LBB261:
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1138              		.loc 2 5036 3 view .LVU353
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1139              		.loc 2 5036 21 is_stmt 0 view .LVU354
 1140 008e D368     		ldr	r3, [r2, #12]
 1141              	.LVL90:
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1142              		.loc 2 5036 21 view .LVU355
 1143              	.LBE261:
 1144              	.LBE260:
 1145              		.loc 1 750 10 view .LVU356
 1146 0090 13F0007F 		tst	r3, #33554432
 1147 0094 23D1     		bne	.L71
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 1148              		.loc 1 753 9 is_stmt 1 view .LVU357
 1149              	.LVL91:
 1150              	.LBB262:
 1151              	.LBI262:
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1152              		.loc 2 7096 22 view .LVU358
 1153              	.LBB263:
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1154              		.loc 2 7101 3 view .LVU359
 1155 0096 9368     		ldr	r3, [r2, #8]
 1156 0098 23F00043 		bic	r3, r3, #-2147483648
 1157 009c 23F03F03 		bic	r3, r3, #63
 1158 00a0 43F00803 		orr	r3, r3, #8
ARM GAS  /tmp/ccI69vXK.s 			page 161


 1159 00a4 9360     		str	r3, [r2, #8]
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1160              		.loc 2 7104 1 is_stmt 0 view .LVU360
 1161 00a6 1AE0     		b	.L71
 1162              	.LVL92:
 1163              	.L86:
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1164              		.loc 2 7104 1 view .LVU361
 1165              	.LBE263:
 1166              	.LBE262:
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 1167              		.loc 1 645 7 is_stmt 1 view .LVU362
 1168 00a8 436D     		ldr	r3, [r0, #84]
 1169 00aa 43F02003 		orr	r3, r3, #32
 1170 00ae 4365     		str	r3, [r0, #84]
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1171              		.loc 1 646 7 view .LVU363
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1172              		.loc 1 646 14 is_stmt 0 view .LVU364
 1173 00b0 0120     		movs	r0, #1
 1174              	.LVL93:
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1175              		.loc 1 646 14 view .LVU365
 1176 00b2 14E0     		b	.L71
 1177              	.LVL94:
 1178              	.L74:
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1179              		.loc 1 667 9 is_stmt 1 view .LVU366
 1180 00b4 0023     		movs	r3, #0
 1181 00b6 A365     		str	r3, [r4, #88]
 1182 00b8 C4E7     		b	.L75
 1183              	.L87:
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 1184              		.loc 1 709 11 view .LVU367
 1185 00ba 2268     		ldr	r2, [r4]
 1186 00bc 5368     		ldr	r3, [r2, #4]
 1187 00be 23F02003 		bic	r3, r3, #32
 1188 00c2 5360     		str	r3, [r2, #4]
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 1189              		.loc 1 710 11 view .LVU368
 1190 00c4 2268     		ldr	r2, [r4]
 1191 00c6 5368     		ldr	r3, [r2, #4]
 1192 00c8 43F04003 		orr	r3, r3, #64
 1193 00cc 5360     		str	r3, [r2, #4]
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 1194              		.loc 1 711 11 view .LVU369
 1195 00ce DDE7     		b	.L78
 1196              	.L73:
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1197              		.loc 1 761 7 view .LVU370
ARM GAS  /tmp/ccI69vXK.s 			page 162


 1198              		.loc 1 761 7 view .LVU371
 1199 00d0 0023     		movs	r3, #0
 1200 00d2 84F85030 		strb	r3, [r4, #80]
 1201              		.loc 1 761 7 view .LVU372
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 1202              		.loc 1 765 5 view .LVU373
 1203              		.loc 1 765 12 is_stmt 0 view .LVU374
 1204 00d6 02E0     		b	.L71
 1205              	.LVL95:
 1206              	.L80:
 1207              	.LCFI15:
 1208              		.cfi_def_cfa_offset 0
 1209              		.cfi_restore 4
 1210              		.cfi_restore 14
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 1211              		.loc 1 628 12 view .LVU375
 1212 00d8 0220     		movs	r0, #2
 1213              	.LVL96:
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1214              		.loc 1 767 1 view .LVU376
 1215 00da 7047     		bx	lr
 1216              	.LVL97:
 1217              	.L81:
 1218              	.LCFI16:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1222              		.loc 1 650 5 view .LVU377
 1223 00dc 0220     		movs	r0, #2
 1224              	.LVL98:
 1225              	.L71:
 1226              		.loc 1 767 1 view .LVU378
 1227 00de 10BD     		pop	{r4, pc}
 1228              		.loc 1 767 1 view .LVU379
 1229              		.cfi_endproc
 1230              	.LFE294:
 1232              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1233              		.align	1
 1234              		.global	HAL_ADCEx_InjectedStop_IT
 1235              		.syntax unified
 1236              		.thumb
 1237              		.thumb_func
 1239              	HAL_ADCEx_InjectedStop_IT:
 1240              	.LVL99:
 1241              	.LFB295:
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         is on going.
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
ARM GAS  /tmp/ccI69vXK.s 			page 163


 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC slave.
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1242              		.loc 1 789 1 is_stmt 1 view -0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1246              		.loc 1 790 3 view .LVU381
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1247              		.loc 1 793 3 view .LVU382
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1248              		.loc 1 796 3 view .LVU383
 1249              		.loc 1 796 3 view .LVU384
 1250 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1251 0004 012B     		cmp	r3, #1
 1252 0006 28D0     		beq	.L92
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1253              		.loc 1 789 1 is_stmt 0 discriminator 2 view .LVU385
 1254 0008 10B5     		push	{r4, lr}
 1255              	.LCFI17:
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 4, -8
 1258              		.cfi_offset 14, -4
 1259 000a 0446     		mov	r4, r0
 1260              		.loc 1 796 3 is_stmt 1 discriminator 2 view .LVU386
 1261 000c 0123     		movs	r3, #1
 1262 000e 80F85030 		strb	r3, [r0, #80]
 1263              		.loc 1 796 3 discriminator 2 view .LVU387
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1264              		.loc 1 799 3 discriminator 2 view .LVU388
 1265              		.loc 1 799 20 is_stmt 0 discriminator 2 view .LVU389
 1266 0012 0221     		movs	r1, #2
 1267 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1268              	.LVL100:
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* continue.                                                                */
ARM GAS  /tmp/ccI69vXK.s 			page 164


 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1269              		.loc 1 804 3 is_stmt 1 discriminator 2 view .LVU390
 1270              		.loc 1 804 6 is_stmt 0 discriminator 2 view .LVU391
 1271 0018 68B9     		cbnz	r0, .L90
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 1272              		.loc 1 807 5 is_stmt 1 view .LVU392
 1273 001a 2268     		ldr	r2, [r4]
 1274 001c 5368     		ldr	r3, [r2, #4]
 1275 001e 23F48C63 		bic	r3, r3, #1120
 1276 0022 5360     		str	r3, [r2, #4]
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1277              		.loc 1 809 5 view .LVU393
 1278              		.loc 1 809 44 is_stmt 0 view .LVU394
 1279 0024 2368     		ldr	r3, [r4]
 1280              	.LVL101:
 1281              	.LBB264:
 1282              	.LBI264:
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1283              		.loc 2 6948 26 is_stmt 1 view .LVU395
 1284              	.LBB265:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1285              		.loc 2 6950 3 view .LVU396
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1286              		.loc 2 6950 12 is_stmt 0 view .LVU397
 1287 0026 9B68     		ldr	r3, [r3, #8]
 1288              	.LVL102:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1289              		.loc 2 6950 74 view .LVU398
 1290 0028 13F0040F 		tst	r3, #4
 1291 002c 07D0     		beq	.L91
 1292              	.LVL103:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1293              		.loc 2 6950 74 view .LVU399
 1294              	.LBE265:
 1295              	.LBE264:
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
ARM GAS  /tmp/ccI69vXK.s 			page 165


 1296              		.loc 1 828 7 is_stmt 1 view .LVU400
 1297 002e 636D     		ldr	r3, [r4, #84]
 1298 0030 23F48053 		bic	r3, r3, #4096
 1299 0034 6365     		str	r3, [r4, #84]
 1300              	.L90:
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1301              		.loc 1 833 3 view .LVU401
 1302              		.loc 1 833 3 view .LVU402
 1303 0036 0023     		movs	r3, #0
 1304 0038 84F85030 		strb	r3, [r4, #80]
 1305              		.loc 1 833 3 view .LVU403
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1306              		.loc 1 836 3 view .LVU404
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1307              		.loc 1 837 1 is_stmt 0 view .LVU405
 1308 003c 10BD     		pop	{r4, pc}
 1309              	.LVL104:
 1310              	.L91:
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1311              		.loc 1 812 7 is_stmt 1 view .LVU406
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1312              		.loc 1 812 24 is_stmt 0 view .LVU407
 1313 003e 2046     		mov	r0, r4
 1314              	.LVL105:
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1315              		.loc 1 812 24 view .LVU408
 1316 0040 FFF7FEFF 		bl	ADC_Disable
 1317              	.LVL106:
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1318              		.loc 1 815 7 is_stmt 1 view .LVU409
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1319              		.loc 1 815 10 is_stmt 0 view .LVU410
 1320 0044 0028     		cmp	r0, #0
 1321 0046 F6D1     		bne	.L90
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1322              		.loc 1 818 9 is_stmt 1 view .LVU411
 1323 0048 636D     		ldr	r3, [r4, #84]
 1324 004a 23F48853 		bic	r3, r3, #4352
 1325 004e 23F00103 		bic	r3, r3, #1
 1326 0052 43F00103 		orr	r3, r3, #1
 1327 0056 6365     		str	r3, [r4, #84]
 1328 0058 EDE7     		b	.L90
 1329              	.LVL107:
 1330              	.L92:
 1331              	.LCFI18:
 1332              		.cfi_def_cfa_offset 0
 1333              		.cfi_restore 4
 1334              		.cfi_restore 14
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1335              		.loc 1 796 3 is_stmt 0 view .LVU412
 1336 005a 0220     		movs	r0, #2
ARM GAS  /tmp/ccI69vXK.s 			page 166


 1337              	.LVL108:
 1338              		.loc 1 837 1 view .LVU413
 1339 005c 7047     		bx	lr
 1340              		.cfi_endproc
 1341              	.LFE295:
 1343              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1344              		.align	1
 1345              		.global	HAL_ADCEx_InjectedGetValue
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1350              	HAL_ADCEx_InjectedGetValue:
 1351              	.LVL109:
 1352              	.LFB296:
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversions.
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
ARM GAS  /tmp/ccI69vXK.s 			page 167


 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hadc_slave.Instance == NULL)
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmp_hadc_slave);
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA error callback */
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
ARM GAS  /tmp/ccI69vXK.s 			page 168


 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Start the DMA channel */
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_hadc_slave_conversion_on_going;
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hadc_slave_disable_status;
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
ARM GAS  /tmp/ccI69vXK.s 			page 169


 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hadc_slave.Instance == NULL)
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instance
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            || (tmp_hadc_slave_conversion_on_going == 1UL)
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           )
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Inst
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            )
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instan
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
ARM GAS  /tmp/ccI69vXK.s 			page 170


1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hadc_slave_disable_status = ADC_Disable(&tmp_hadc_slave);
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           (tmp_hadc_slave_disable_status == HAL_OK))
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmp_hadc_slave);
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval The converted data values.
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(const ADC_HandleTypeDef *hadc)
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
ARM GAS  /tmp/ccI69vXK.s 			page 171


1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            to flag JEOC.
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 series).
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(const ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1353              		.loc 1 1145 1 is_stmt 1 view -0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
 1358              		.loc 1 1146 3 view .LVU415
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1359              		.loc 1 1149 3 view .LVU416
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 1360              		.loc 1 1150 3 view .LVU417
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get ADC converted value */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   switch (InjectedRank)
 1361              		.loc 1 1153 3 view .LVU418
 1362 0000 B1F5057F 		cmp	r1, #532
 1363 0004 0ED0     		beq	.L98
 1364 0006 40F21A33 		movw	r3, #794
ARM GAS  /tmp/ccI69vXK.s 			page 172


 1365 000a 9942     		cmp	r1, r3
 1366 000c 06D0     		beq	.L99
 1367 000e B1F5877F 		cmp	r1, #270
 1368 0012 0BD0     		beq	.L104
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     default:
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1369              		.loc 1 1166 7 view .LVU419
 1370              		.loc 1 1166 21 is_stmt 0 view .LVU420
 1371 0014 0368     		ldr	r3, [r0]
 1372              		.loc 1 1166 15 view .LVU421
 1373 0016 D3F88000 		ldr	r0, [r3, #128]
 1374              	.LVL110:
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1375              		.loc 1 1167 7 is_stmt 1 view .LVU422
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return ADC converted value */
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_jdr;
 1376              		.loc 1 1171 3 view .LVU423
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1377              		.loc 1 1172 1 is_stmt 0 view .LVU424
 1378 001a 7047     		bx	lr
 1379              	.LVL111:
 1380              	.L99:
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1381              		.loc 1 1156 7 is_stmt 1 view .LVU425
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1382              		.loc 1 1156 21 is_stmt 0 view .LVU426
 1383 001c 0368     		ldr	r3, [r0]
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1384              		.loc 1 1156 15 view .LVU427
 1385 001e D3F88C00 		ldr	r0, [r3, #140]
 1386              	.LVL112:
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 1387              		.loc 1 1157 7 is_stmt 1 view .LVU428
 1388 0022 7047     		bx	lr
 1389              	.LVL113:
 1390              	.L98:
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1391              		.loc 1 1159 7 view .LVU429
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1392              		.loc 1 1159 21 is_stmt 0 view .LVU430
 1393 0024 0368     		ldr	r3, [r0]
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1394              		.loc 1 1159 15 view .LVU431
 1395 0026 D3F88800 		ldr	r0, [r3, #136]
ARM GAS  /tmp/ccI69vXK.s 			page 173


 1396              	.LVL114:
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 1397              		.loc 1 1160 7 is_stmt 1 view .LVU432
 1398 002a 7047     		bx	lr
 1399              	.LVL115:
 1400              	.L104:
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1401              		.loc 1 1162 7 view .LVU433
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1402              		.loc 1 1162 21 is_stmt 0 view .LVU434
 1403 002c 0368     		ldr	r3, [r0]
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1404              		.loc 1 1162 15 view .LVU435
 1405 002e D3F88400 		ldr	r0, [r3, #132]
 1406              	.LVL116:
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 1407              		.loc 1 1163 7 is_stmt 1 view .LVU436
 1408 0032 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE296:
 1412              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1413              		.align	1
 1414              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1419              	HAL_ADCEx_InjectedConvCpltCallback:
 1420              	.LVL117:
 1421              	.LFB297:
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1422              		.loc 1 1180 1 view -0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1427              		.loc 1 1182 3 view .LVU438
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1428              		.loc 1 1187 1 is_stmt 0 view .LVU439
 1429 0000 7047     		bx	lr
 1430              		.cfi_endproc
 1431              	.LFE297:
 1433              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 1434              		.align	1
 1435              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
ARM GAS  /tmp/ccI69vXK.s 			page 174


 1436              		.syntax unified
 1437              		.thumb
 1438              		.thumb_func
 1440              	HAL_ADCEx_InjectedQueueOverflowCallback:
 1441              	.LVL118:
 1442              	.LFB298:
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             contexts).
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1443              		.loc 1 1199 1 is_stmt 1 view -0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1448              		.loc 1 1201 3 view .LVU441
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1449              		.loc 1 1206 1 is_stmt 0 view .LVU442
 1450 0000 7047     		bx	lr
 1451              		.cfi_endproc
 1452              	.LFE298:
 1454              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 1455              		.align	1
 1456              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1461              	HAL_ADCEx_LevelOutOfWindow2Callback:
 1462              	.LVL119:
 1463              	.LFB299:
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1464              		.loc 1 1214 1 is_stmt 1 view -0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468              		@ link register save eliminated.
ARM GAS  /tmp/ccI69vXK.s 			page 175


1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1469              		.loc 1 1216 3 view .LVU444
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1470              		.loc 1 1221 1 is_stmt 0 view .LVU445
 1471 0000 7047     		bx	lr
 1472              		.cfi_endproc
 1473              	.LFE299:
 1475              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 1476              		.align	1
 1477              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1482              	HAL_ADCEx_LevelOutOfWindow3Callback:
 1483              	.LVL120:
 1484              	.LFB300:
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1485              		.loc 1 1229 1 is_stmt 1 view -0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1490              		.loc 1 1231 3 view .LVU447
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1491              		.loc 1 1236 1 is_stmt 0 view .LVU448
 1492 0000 7047     		bx	lr
 1493              		.cfi_endproc
 1494              	.LFE300:
 1496              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 1497              		.align	1
 1498              		.weak	HAL_ADCEx_EndOfSamplingCallback
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1503              	HAL_ADCEx_EndOfSamplingCallback:
 1504              	.LVL121:
 1505              	.LFB301:
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 176


1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1506              		.loc 1 1245 1 is_stmt 1 view -0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1511              		.loc 1 1247 3 view .LVU450
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1512              		.loc 1 1252 1 is_stmt 0 view .LVU451
 1513 0000 7047     		bx	lr
 1514              		.cfi_endproc
 1515              	.LFE301:
 1517              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 1518              		.align	1
 1519              		.global	HAL_ADCEx_RegularStop
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1524              	HAL_ADCEx_RegularStop:
 1525              	.LVL122:
 1526              	.LFB302:
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1527              		.loc 1 1262 1 is_stmt 1 view -0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1531              		.loc 1 1263 3 view .LVU453
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1532              		.loc 1 1266 3 view .LVU454
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1533              		.loc 1 1269 3 view .LVU455
ARM GAS  /tmp/ccI69vXK.s 			page 177


 1534              		.loc 1 1269 3 view .LVU456
 1535 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1536 0004 012B     		cmp	r3, #1
 1537 0006 26D0     		beq	.L114
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1538              		.loc 1 1262 1 is_stmt 0 discriminator 2 view .LVU457
 1539 0008 10B5     		push	{r4, lr}
 1540              	.LCFI19:
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 4, -8
 1543              		.cfi_offset 14, -4
 1544 000a 0446     		mov	r4, r0
 1545              		.loc 1 1269 3 is_stmt 1 discriminator 2 view .LVU458
 1546 000c 0121     		movs	r1, #1
 1547 000e 80F85010 		strb	r1, [r0, #80]
 1548              		.loc 1 1269 3 discriminator 2 view .LVU459
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1549              		.loc 1 1272 3 discriminator 2 view .LVU460
 1550              		.loc 1 1272 20 is_stmt 0 discriminator 2 view .LVU461
 1551 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1552              	.LVL123:
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1553              		.loc 1 1276 3 is_stmt 1 discriminator 2 view .LVU462
 1554              		.loc 1 1276 6 is_stmt 0 discriminator 2 view .LVU463
 1555 0016 60B9     		cbnz	r0, .L112
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1556              		.loc 1 1279 5 is_stmt 1 view .LVU464
 1557 0018 636D     		ldr	r3, [r4, #84]
 1558 001a 23F48073 		bic	r3, r3, #256
 1559 001e 6365     		str	r3, [r4, #84]
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1560              		.loc 1 1281 5 view .LVU465
 1561              		.loc 1 1281 44 is_stmt 0 view .LVU466
 1562 0020 2368     		ldr	r3, [r4]
 1563              	.LVL124:
 1564              	.LBB266:
 1565              	.LBI266:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1566              		.loc 2 7132 26 is_stmt 1 view .LVU467
 1567              	.LBB267:
 1568              		.loc 2 7134 3 view .LVU468
 1569              		.loc 2 7134 12 is_stmt 0 view .LVU469
 1570 0022 9B68     		ldr	r3, [r3, #8]
 1571              	.LVL125:
 1572              		.loc 2 7134 76 view .LVU470
 1573 0024 13F0080F 		tst	r3, #8
 1574 0028 07D0     		beq	.L113
 1575              	.LVL126:
 1576              		.loc 2 7134 76 view .LVU471
ARM GAS  /tmp/ccI69vXK.s 			page 178


 1577              	.LBE267:
 1578              	.LBE266:
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1579              		.loc 1 1299 7 is_stmt 1 view .LVU472
 1580 002a 636D     		ldr	r3, [r4, #84]
 1581 002c 43F48053 		orr	r3, r3, #4096
 1582 0030 6365     		str	r3, [r4, #84]
 1583              	.L112:
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1584              		.loc 1 1304 3 view .LVU473
 1585              		.loc 1 1304 3 view .LVU474
 1586 0032 0023     		movs	r3, #0
 1587 0034 84F85030 		strb	r3, [r4, #80]
 1588              		.loc 1 1304 3 view .LVU475
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1589              		.loc 1 1307 3 view .LVU476
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1590              		.loc 1 1308 1 is_stmt 0 view .LVU477
 1591 0038 10BD     		pop	{r4, pc}
 1592              	.LVL127:
 1593              	.L113:
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1594              		.loc 1 1284 7 is_stmt 1 view .LVU478
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1595              		.loc 1 1284 24 is_stmt 0 view .LVU479
 1596 003a 2046     		mov	r0, r4
 1597              	.LVL128:
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1598              		.loc 1 1284 24 view .LVU480
 1599 003c FFF7FEFF 		bl	ADC_Disable
 1600              	.LVL129:
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1601              		.loc 1 1287 7 is_stmt 1 view .LVU481
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/ccI69vXK.s 			page 179


 1602              		.loc 1 1287 10 is_stmt 0 view .LVU482
 1603 0040 0028     		cmp	r0, #0
 1604 0042 F6D1     		bne	.L112
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1605              		.loc 1 1290 9 is_stmt 1 view .LVU483
 1606 0044 636D     		ldr	r3, [r4, #84]
 1607 0046 23F48053 		bic	r3, r3, #4096
 1608 004a 23F00103 		bic	r3, r3, #1
 1609 004e 43F00103 		orr	r3, r3, #1
 1610 0052 6365     		str	r3, [r4, #84]
 1611 0054 EDE7     		b	.L112
 1612              	.LVL130:
 1613              	.L114:
 1614              	.LCFI20:
 1615              		.cfi_def_cfa_offset 0
 1616              		.cfi_restore 4
 1617              		.cfi_restore 14
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1618              		.loc 1 1269 3 is_stmt 0 view .LVU484
 1619 0056 0220     		movs	r0, #2
 1620              	.LVL131:
 1621              		.loc 1 1308 1 view .LVU485
 1622 0058 7047     		bx	lr
 1623              		.cfi_endproc
 1624              	.LFE302:
 1626              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 1627              		.align	1
 1628              		.global	HAL_ADCEx_RegularStop_IT
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1633              	HAL_ADCEx_RegularStop_IT:
 1634              	.LVL132:
 1635              	.LFB303:
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1636              		.loc 1 1320 1 is_stmt 1 view -0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1640              		.loc 1 1321 3 view .LVU487
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1641              		.loc 1 1324 3 view .LVU488
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 180


1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1642              		.loc 1 1327 3 view .LVU489
 1643              		.loc 1 1327 3 view .LVU490
 1644 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1645 0004 012B     		cmp	r3, #1
 1646 0006 2BD0     		beq	.L123
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1647              		.loc 1 1320 1 is_stmt 0 discriminator 2 view .LVU491
 1648 0008 10B5     		push	{r4, lr}
 1649              	.LCFI21:
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 4, -8
 1652              		.cfi_offset 14, -4
 1653 000a 0446     		mov	r4, r0
 1654              		.loc 1 1327 3 is_stmt 1 discriminator 2 view .LVU492
 1655 000c 0121     		movs	r1, #1
 1656 000e 80F85010 		strb	r1, [r0, #80]
 1657              		.loc 1 1327 3 discriminator 2 view .LVU493
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1658              		.loc 1 1330 3 discriminator 2 view .LVU494
 1659              		.loc 1 1330 20 is_stmt 0 discriminator 2 view .LVU495
 1660 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1661              	.LVL133:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1662              		.loc 1 1334 3 is_stmt 1 discriminator 2 view .LVU496
 1663              		.loc 1 1334 6 is_stmt 0 discriminator 2 view .LVU497
 1664 0016 88B9     		cbnz	r0, .L121
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1665              		.loc 1 1337 5 is_stmt 1 view .LVU498
 1666 0018 636D     		ldr	r3, [r4, #84]
 1667 001a 23F48073 		bic	r3, r3, #256
 1668 001e 6365     		str	r3, [r4, #84]
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 1669              		.loc 1 1340 5 view .LVU499
 1670 0020 2268     		ldr	r2, [r4]
 1671 0022 5368     		ldr	r3, [r2, #4]
 1672 0024 23F01C03 		bic	r3, r3, #28
 1673 0028 5360     		str	r3, [r2, #4]
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1674              		.loc 1 1343 5 view .LVU500
 1675              		.loc 1 1343 44 is_stmt 0 view .LVU501
 1676 002a 2368     		ldr	r3, [r4]
 1677              	.LVL134:
 1678              	.LBB268:
 1679              	.LBI268:
ARM GAS  /tmp/ccI69vXK.s 			page 181


7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1680              		.loc 2 7132 26 is_stmt 1 view .LVU502
 1681              	.LBB269:
 1682              		.loc 2 7134 3 view .LVU503
 1683              		.loc 2 7134 12 is_stmt 0 view .LVU504
 1684 002c 9B68     		ldr	r3, [r3, #8]
 1685              	.LVL135:
 1686              		.loc 2 7134 76 view .LVU505
 1687 002e 13F0080F 		tst	r3, #8
 1688 0032 07D0     		beq	.L122
 1689              	.LVL136:
 1690              		.loc 2 7134 76 view .LVU506
 1691              	.LBE269:
 1692              	.LBE268:
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1693              		.loc 1 1357 7 is_stmt 1 view .LVU507
 1694 0034 636D     		ldr	r3, [r4, #84]
 1695 0036 43F48053 		orr	r3, r3, #4096
 1696 003a 6365     		str	r3, [r4, #84]
 1697              	.L121:
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1698              		.loc 1 1362 3 view .LVU508
 1699              		.loc 1 1362 3 view .LVU509
 1700 003c 0023     		movs	r3, #0
 1701 003e 84F85030 		strb	r3, [r4, #80]
 1702              		.loc 1 1362 3 view .LVU510
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1703              		.loc 1 1365 3 view .LVU511
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1704              		.loc 1 1366 1 is_stmt 0 view .LVU512
 1705 0042 10BD     		pop	{r4, pc}
 1706              	.LVL137:
 1707              	.L122:
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 1708              		.loc 1 1345 7 is_stmt 1 view .LVU513
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 1709              		.loc 1 1345 24 is_stmt 0 view .LVU514
 1710 0044 2046     		mov	r0, r4
ARM GAS  /tmp/ccI69vXK.s 			page 182


 1711              	.LVL138:
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 1712              		.loc 1 1345 24 view .LVU515
 1713 0046 FFF7FEFF 		bl	ADC_Disable
 1714              	.LVL139:
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1715              		.loc 1 1347 7 is_stmt 1 view .LVU516
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1716              		.loc 1 1347 10 is_stmt 0 view .LVU517
 1717 004a 0028     		cmp	r0, #0
 1718 004c F6D1     		bne	.L121
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1719              		.loc 1 1350 9 is_stmt 1 view .LVU518
 1720 004e 636D     		ldr	r3, [r4, #84]
 1721 0050 23F48053 		bic	r3, r3, #4096
 1722 0054 23F00103 		bic	r3, r3, #1
 1723 0058 43F00103 		orr	r3, r3, #1
 1724 005c 6365     		str	r3, [r4, #84]
 1725 005e EDE7     		b	.L121
 1726              	.LVL140:
 1727              	.L123:
 1728              	.LCFI22:
 1729              		.cfi_def_cfa_offset 0
 1730              		.cfi_restore 4
 1731              		.cfi_restore 14
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1732              		.loc 1 1327 3 is_stmt 0 view .LVU519
 1733 0060 0220     		movs	r0, #2
 1734              	.LVL141:
 1735              		.loc 1 1366 1 view .LVU520
 1736 0062 7047     		bx	lr
 1737              		.cfi_endproc
 1738              	.LFE303:
 1740              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 1741              		.align	1
 1742              		.global	HAL_ADCEx_RegularStop_DMA
 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
 1747              	HAL_ADCEx_RegularStop_DMA:
 1748              	.LVL142:
 1749              	.LFB304:
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1750              		.loc 1 1380 1 is_stmt 1 view -0
ARM GAS  /tmp/ccI69vXK.s 			page 183


 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 0
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
 1754              		.loc 1 1380 1 is_stmt 0 view .LVU522
 1755 0000 38B5     		push	{r3, r4, r5, lr}
 1756              	.LCFI23:
 1757              		.cfi_def_cfa_offset 16
 1758              		.cfi_offset 3, -16
 1759              		.cfi_offset 4, -12
 1760              		.cfi_offset 5, -8
 1761              		.cfi_offset 14, -4
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1762              		.loc 1 1381 3 is_stmt 1 view .LVU523
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1763              		.loc 1 1384 3 view .LVU524
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1764              		.loc 1 1387 3 view .LVU525
 1765              		.loc 1 1387 3 view .LVU526
 1766 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1767 0006 012B     		cmp	r3, #1
 1768 0008 41D0     		beq	.L135
 1769 000a 0446     		mov	r4, r0
 1770              		.loc 1 1387 3 discriminator 2 view .LVU527
 1771 000c 0121     		movs	r1, #1
 1772 000e 80F85010 		strb	r1, [r0, #80]
 1773              		.loc 1 1387 3 discriminator 2 view .LVU528
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1774              		.loc 1 1390 3 discriminator 2 view .LVU529
 1775              		.loc 1 1390 20 is_stmt 0 discriminator 2 view .LVU530
 1776 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1777              	.LVL143:
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1778              		.loc 1 1394 3 is_stmt 1 discriminator 2 view .LVU531
 1779              		.loc 1 1394 6 is_stmt 0 discriminator 2 view .LVU532
 1780 0016 0546     		mov	r5, r0
 1781 0018 20B1     		cbz	r0, .L137
 1782              	.LVL144:
 1783              	.L130:
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
ARM GAS  /tmp/ccI69vXK.s 			page 184


1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1784              		.loc 1 1446 3 is_stmt 1 view .LVU533
 1785              		.loc 1 1446 3 view .LVU534
 1786 001a 0023     		movs	r3, #0
 1787 001c 84F85030 		strb	r3, [r4, #80]
 1788              		.loc 1 1446 3 view .LVU535
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1789              		.loc 1 1449 3 view .LVU536
 1790              	.LVL145:
 1791              	.L129:
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1792              		.loc 1 1450 1 is_stmt 0 view .LVU537
 1793 0020 2846     		mov	r0, r5
 1794 0022 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccI69vXK.s 			page 185


 1795              	.LVL146:
 1796              	.L137:
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1797              		.loc 1 1397 5 is_stmt 1 view .LVU538
 1798 0024 636D     		ldr	r3, [r4, #84]
 1799 0026 23F48073 		bic	r3, r3, #256
 1800 002a 6365     		str	r3, [r4, #84]
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1801              		.loc 1 1400 5 view .LVU539
 1802 002c 2268     		ldr	r2, [r4]
 1803 002e D368     		ldr	r3, [r2, #12]
 1804 0030 23F00103 		bic	r3, r3, #1
 1805 0034 D360     		str	r3, [r2, #12]
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1806              		.loc 1 1404 5 view .LVU540
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1807              		.loc 1 1404 22 is_stmt 0 view .LVU541
 1808 0036 E06C     		ldr	r0, [r4, #76]
 1809              	.LVL147:
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1810              		.loc 1 1404 22 view .LVU542
 1811 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1812              	.LVL148:
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1813              		.loc 1 1407 5 is_stmt 1 view .LVU543
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1814              		.loc 1 1407 8 is_stmt 0 view .LVU544
 1815 003c 0546     		mov	r5, r0
 1816 003e 18B1     		cbz	r0, .L131
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1817              		.loc 1 1410 7 is_stmt 1 view .LVU545
 1818 0040 636D     		ldr	r3, [r4, #84]
 1819 0042 43F04003 		orr	r3, r3, #64
 1820 0046 6365     		str	r3, [r4, #84]
 1821              	.L131:
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1822              		.loc 1 1414 5 view .LVU546
 1823 0048 2268     		ldr	r2, [r4]
 1824 004a 5368     		ldr	r3, [r2, #4]
 1825 004c 23F01003 		bic	r3, r3, #16
 1826 0050 5360     		str	r3, [r2, #4]
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1827              		.loc 1 1419 5 view .LVU547
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1828              		.loc 1 1419 44 is_stmt 0 view .LVU548
 1829 0052 2368     		ldr	r3, [r4]
 1830              	.LVL149:
 1831              	.LBB270:
 1832              	.LBI270:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1833              		.loc 2 7132 26 is_stmt 1 view .LVU549
 1834              	.LBB271:
 1835              		.loc 2 7134 3 view .LVU550
 1836              		.loc 2 7134 12 is_stmt 0 view .LVU551
 1837 0054 9B68     		ldr	r3, [r3, #8]
 1838              	.LVL150:
 1839              		.loc 2 7134 76 view .LVU552
ARM GAS  /tmp/ccI69vXK.s 			page 186


 1840 0056 13F0080F 		tst	r3, #8
 1841 005a 04D0     		beq	.L132
 1842              	.LVL151:
 1843              		.loc 2 7134 76 view .LVU553
 1844              	.LBE271:
 1845              	.LBE270:
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1846              		.loc 1 1441 7 is_stmt 1 view .LVU554
 1847 005c 636D     		ldr	r3, [r4, #84]
 1848 005e 43F48053 		orr	r3, r3, #4096
 1849 0062 6365     		str	r3, [r4, #84]
 1850 0064 D9E7     		b	.L130
 1851              	.LVL152:
 1852              	.L132:
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1853              		.loc 1 1421 7 view .LVU555
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1854              		.loc 1 1421 10 is_stmt 0 view .LVU556
 1855 0066 75B9     		cbnz	r5, .L133
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1856              		.loc 1 1423 9 is_stmt 1 view .LVU557
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1857              		.loc 1 1423 26 is_stmt 0 view .LVU558
 1858 0068 2046     		mov	r0, r4
 1859              	.LVL153:
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1860              		.loc 1 1423 26 view .LVU559
 1861 006a FFF7FEFF 		bl	ADC_Disable
 1862              	.LVL154:
 1863 006e 0546     		mov	r5, r0
 1864              	.LVL155:
 1865              	.L134:
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1866              		.loc 1 1431 7 is_stmt 1 view .LVU560
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1867              		.loc 1 1431 10 is_stmt 0 view .LVU561
 1868 0070 002D     		cmp	r5, #0
 1869 0072 D2D1     		bne	.L130
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1870              		.loc 1 1434 9 is_stmt 1 view .LVU562
 1871 0074 636D     		ldr	r3, [r4, #84]
 1872 0076 23F48053 		bic	r3, r3, #4096
 1873 007a 23F00103 		bic	r3, r3, #1
 1874 007e 43F00103 		orr	r3, r3, #1
 1875 0082 6365     		str	r3, [r4, #84]
 1876 0084 C9E7     		b	.L130
 1877              	.LVL156:
 1878              	.L133:
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1879              		.loc 1 1427 9 view .LVU563
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1880              		.loc 1 1427 15 is_stmt 0 view .LVU564
 1881 0086 2046     		mov	r0, r4
 1882              	.LVL157:
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1883              		.loc 1 1427 15 view .LVU565
 1884 0088 FFF7FEFF 		bl	ADC_Disable
ARM GAS  /tmp/ccI69vXK.s 			page 187


 1885              	.LVL158:
 1886 008c F0E7     		b	.L134
 1887              	.LVL159:
 1888              	.L135:
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1889              		.loc 1 1387 3 view .LVU566
 1890 008e 0225     		movs	r5, #2
 1891 0090 C6E7     		b	.L129
 1892              		.cfi_endproc
 1893              	.LFE304:
 1895              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1896              		.align	1
 1897              		.global	HAL_ADCEx_InjectedConfigChannel
 1898              		.syntax unified
 1899              		.thumb
 1900              		.thumb_func
 1902              	HAL_ADCEx_InjectedConfigChannel:
 1903              	.LVL160:
 1904              	.LFB305:
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is on-going.
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_hadc_slave_conversion_on_going;
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
ARM GAS  /tmp/ccI69vXK.s 			page 188


1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hadc_slave.Instance == NULL)
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instance
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            || (tmp_hadc_slave_conversion_on_going == 1UL)
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           )
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Inst
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            )
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instan
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 189


1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmp_hadc_slave)->Instance) == 0UL)
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           {
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmp_hadc_slave);
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           }
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            no Master State change */
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @}
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
ARM GAS  /tmp/ccI69vXK.s 			page 190


1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @verbatim
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @endverbatim
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param pConfigInjected Structure of ADC injected group and ADC channel for
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected group.
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc,
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                   const ADC_InjectionConfTypeDef *pConfigInjected)
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1905              		.loc 1 1654 1 is_stmt 1 view -0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 8
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              		.loc 1 1654 1 is_stmt 0 view .LVU568
ARM GAS  /tmp/ccI69vXK.s 			page 191


 1910 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1911              	.LCFI24:
 1912              		.cfi_def_cfa_offset 20
 1913              		.cfi_offset 4, -20
 1914              		.cfi_offset 5, -16
 1915              		.cfi_offset 6, -12
 1916              		.cfi_offset 7, -8
 1917              		.cfi_offset 14, -4
 1918 0002 83B0     		sub	sp, sp, #12
 1919              	.LCFI25:
 1920              		.cfi_def_cfa_offset 32
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1921              		.loc 1 1655 3 is_stmt 1 view .LVU569
 1922              	.LVL161:
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 1923              		.loc 1 1656 3 view .LVU570
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
 1924              		.loc 1 1657 3 view .LVU571
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1925              		.loc 1 1658 3 view .LVU572
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1926              		.loc 1 1659 3 view .LVU573
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1927              		.loc 1 1660 3 view .LVU574
 1928              		.loc 1 1660 17 is_stmt 0 view .LVU575
 1929 0004 0023     		movs	r3, #0
 1930 0006 0193     		str	r3, [sp, #4]
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_jsqr_context_queue_being_built = 0U;
 1931              		.loc 1 1662 3 is_stmt 1 view .LVU576
 1932              	.LVL162:
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1933              		.loc 1 1665 3 view .LVU577
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(pConfigInjected->InjectedSamplingTime));
 1934              		.loc 1 1666 3 view .LVU578
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(pConfigInjected->InjectedSingleDiff));
 1935              		.loc 1 1667 3 view .LVU579
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->AutoInjectedConv));
 1936              		.loc 1 1668 3 view .LVU580
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->QueueInjectedContext));
 1937              		.loc 1 1669 3 view .LVU581
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(pConfigInjected->ExternalTrigInjecConvEdge));
 1938              		.loc 1 1670 3 view .LVU582
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(hadc, pConfigInjected->ExternalTrigInjecConv));
 1939              		.loc 1 1671 3 view .LVU583
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(pConfigInjected->InjectedOffsetNumber));
 1940              		.loc 1 1672 3 view .LVU584
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pConfigInjected->InjectedOffset));
 1941              		.loc 1 1673 3 view .LVU585
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->InjecOversamplingMode));
 1942              		.loc 1 1674 3 view .LVU586
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 1943              		.loc 1 1676 3 view .LVU587
 1944              		.loc 1 1676 17 is_stmt 0 view .LVU588
ARM GAS  /tmp/ccI69vXK.s 			page 192


 1945 0008 0269     		ldr	r2, [r0, #16]
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(pConfigInjected->InjectedRank));
 1946              		.loc 1 1678 5 is_stmt 1 view .LVU589
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(pConfigInjected->InjectedNbrOfConversion));
 1947              		.loc 1 1679 5 view .LVU590
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->InjectedDiscontinuousConvMode));
 1948              		.loc 1 1680 5 view .LVU591
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      ignored (considered as reset) */
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((pConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 1949              		.loc 1 1686 3 view .LVU592
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  && (pConfigInjected->InjecOversamplingMode == ENABLE)));
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((pConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 1950              		.loc 1 1690 3 view .LVU593
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  && (pConfigInjected->AutoInjectedConv == ENABLE)));
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (pConfigInjected->AutoInjectedConv
 1951              		.loc 1 1694 3 view .LVU594
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Verification of channel number */
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (pConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 1952              		.loc 1 1697 3 view .LVU595
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(hadc, pConfigInjected->InjectedChannel));
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, pConfigInjected->InjectedChannel));
 1953              		.loc 1 1703 5 view .LVU596
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1954              		.loc 1 1707 3 view .LVU597
 1955              		.loc 1 1707 3 view .LVU598
 1956 000a 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1957 000e 012B     		cmp	r3, #1
 1958 0010 00F08E82 		beq	.L204
 1959 0014 0446     		mov	r4, r0
 1960 0016 0D46     		mov	r5, r1
 1961              		.loc 1 1707 3 discriminator 2 view .LVU599
 1962 0018 0123     		movs	r3, #1
 1963 001a 80F85030 		strb	r3, [r0, #80]
 1964              		.loc 1 1707 3 discriminator 2 view .LVU600
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*                                                                          */
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
ARM GAS  /tmp/ccI69vXK.s 			page 193


1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 1965              		.loc 1 1730 3 discriminator 2 view .LVU601
 1966              		.loc 1 1730 6 is_stmt 0 discriminator 2 view .LVU602
 1967 001e AAB1     		cbz	r2, .L140
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (pConfigInjected->InjectedNbrOfConversion == 1U))
 1968              		.loc 1 1731 23 discriminator 1 view .LVU603
 1969 0020 8B69     		ldr	r3, [r1, #24]
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (pConfigInjected->InjectedNbrOfConversion == 1U))
 1970              		.loc 1 1730 54 discriminator 1 view .LVU604
 1971 0022 012B     		cmp	r3, #1
 1972 0024 12D0     		beq	.L140
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (pConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = (ADC_JSQR_RK(pConfigInjected->InjectedChannel, ADC_INJ
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                              );
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = (ADC_JSQR_RK(pConfigInjected->InjectedChannel, ADC_INJ
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_jsqr_context_queue_being_built);
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_jsqr_context_queue_being_built;
ARM GAS  /tmp/ccI69vXK.s 			page 194


1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*                                                                        */
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 1973              		.loc 1 1777 5 is_stmt 1 view .LVU605
 1974              		.loc 1 1777 30 is_stmt 0 view .LVU606
 1975 0026 026E     		ldr	r2, [r0, #96]
 1976              		.loc 1 1777 8 view .LVU607
 1977 0028 002A     		cmp	r2, #0
 1978 002a 40F08E80 		bne	.L205
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  being built                                                         */
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = pConfigInjected->InjectedNbrOfConversion;
 1979              		.loc 1 1781 7 is_stmt 1 view .LVU608
 1980              		.loc 1 1781 42 is_stmt 0 view .LVU609
 1981 002e 0366     		str	r3, [r0, #96]
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 1982              		.loc 1 1785 7 is_stmt 1 view .LVU610
 1983              		.loc 1 1785 42 is_stmt 0 view .LVU611
 1984 0030 0023     		movs	r3, #0
 1985 0032 C365     		str	r3, [r0, #92]
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (pConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 1986              		.loc 1 1797 7 is_stmt 1 view .LVU612
 1987              		.loc 1 1797 26 is_stmt 0 view .LVU613
 1988 0034 0B6A     		ldr	r3, [r1, #32]
 1989              		.loc 1 1797 10 view .LVU614
 1990 0036 002B     		cmp	r3, #0
 1991 0038 00F08480 		beq	.L146
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = ((pConfigInjected->InjectedNbrOfConversion - 1U)
ARM GAS  /tmp/ccI69vXK.s 			page 195


 1992              		.loc 1 1799 9 is_stmt 1 view .LVU615
 1993              		.loc 1 1799 63 is_stmt 0 view .LVU616
 1994 003c 8A69     		ldr	r2, [r1, #24]
 1995              		.loc 1 1799 89 view .LVU617
 1996 003e 013A     		subs	r2, r2, #1
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 1997              		.loc 1 1800 89 view .LVU618
 1998 0040 03F03C03 		and	r3, r3, #60
 1999              		.loc 1 1800 47 view .LVU619
 2000 0044 1A43     		orrs	r2, r2, r3
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
 2001              		.loc 1 1801 64 view .LVU620
 2002 0046 4B6A     		ldr	r3, [r1, #36]
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 2003              		.loc 1 1799 44 view .LVU621
 2004 0048 1A43     		orrs	r2, r2, r3
 2005              	.LVL163:
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 2006              		.loc 1 1799 44 view .LVU622
 2007 004a 7FE0     		b	.L145
 2008              	.LVL164:
 2009              	.L140:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2010              		.loc 1 1740 5 is_stmt 1 view .LVU623
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2011              		.loc 1 1740 24 is_stmt 0 view .LVU624
 2012 004c 6B68     		ldr	r3, [r5, #4]
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2013              		.loc 1 1740 8 view .LVU625
 2014 004e 082B     		cmp	r3, #8
 2015 0050 58D0     		beq	.L220
 2016              	.LVL165:
 2017              	.L142:
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                              );
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = ((pConfigInjected->InjectedNbrOfConversion - 1U));
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_jsqr_context_queue_being_built &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, pConfigInjected->InjectedRank
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_jsqr_context_queue_being_built |= ADC_JSQR_RK(pConfigInjected->InjectedChannel, pConfigInje
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Decrease channel count  */
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 3. tmp_jsqr_context_queue_being_built is fully built for this HAL_ADCEx_InjectedConfigChanne
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_jsqr_context_queue_being_built;
ARM GAS  /tmp/ccI69vXK.s 			page 196


1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 2018              		.loc 1 1842 3 is_stmt 1 view .LVU626
 2019              		.loc 1 1842 42 is_stmt 0 view .LVU627
 2020 0052 2368     		ldr	r3, [r4]
 2021              	.LVL166:
 2022              	.LBB272:
 2023              	.LBI272:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2024              		.loc 2 7132 26 is_stmt 1 view .LVU628
 2025              	.LBB273:
 2026              		.loc 2 7134 3 view .LVU629
 2027              		.loc 2 7134 12 is_stmt 0 view .LVU630
 2028 0054 9A68     		ldr	r2, [r3, #8]
 2029              		.loc 2 7134 76 view .LVU631
 2030 0056 12F0080F 		tst	r2, #8
 2031 005a 0DD1     		bne	.L147
 2032              	.LVL167:
 2033              		.loc 2 7134 76 view .LVU632
 2034              	.LBE273:
 2035              	.LBE272:
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pConfigInjected->AutoInjectedConv == DISABLE)
 2036              		.loc 1 1845 5 is_stmt 1 view .LVU633
 2037              		.loc 1 1845 24 is_stmt 0 view .LVU634
 2038 005c 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 2039              		.loc 1 1845 8 view .LVU635
 2040 005e 002A     		cmp	r2, #0
 2041 0060 40F09280 		bne	.L148
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 2042              		.loc 1 1847 7 is_stmt 1 view .LVU636
 2043 0064 DA68     		ldr	r2, [r3, #12]
 2044 0066 22F44012 		bic	r2, r2, #3145728
 2045 006a A87F     		ldrb	r0, [r5, #30]	@ zero_extendqisi2
 2046              	.LVL168:
 2047              		.loc 1 1847 7 is_stmt 0 view .LVU637
 2048 006c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 2049 006e 0905     		lsls	r1, r1, #20
 2050 0070 41EA4051 		orr	r1, r1, r0, lsl #21
 2051 0074 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccI69vXK.s 			page 197


 2052 0076 DA60     		str	r2, [r3, #12]
 2053              	.L147:
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)pConfigInjected->QueueInjectedContext)    
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)pConfigInjected->InjectedDiscontinuousCon
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* discarded.                                                             */
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)pConfigInjected->QueueInjectedContext));
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2054              		.loc 1 1870 3 is_stmt 1 view .LVU638
 2055              		.loc 1 1870 79 is_stmt 0 view .LVU639
 2056 0078 2168     		ldr	r1, [r4]
 2057              	.LVL169:
 2058              	.LBB274:
 2059              	.LBI274:
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2060              		.loc 2 6948 26 is_stmt 1 view .LVU640
 2061              	.LBB275:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2062              		.loc 2 6950 3 view .LVU641
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2063              		.loc 2 6950 12 is_stmt 0 view .LVU642
 2064 007a 8B68     		ldr	r3, [r1, #8]
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2065              		.loc 2 6950 74 view .LVU643
 2066 007c 13F00403 		ands	r3, r3, #4
 2067 0080 00D0     		beq	.L149
 2068 0082 0123     		movs	r3, #1
 2069              	.L149:
 2070              	.LVL170:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2071              		.loc 2 6950 74 view .LVU644
 2072              	.LBE275:
 2073              	.LBE274:
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2074              		.loc 1 1871 3 is_stmt 1 view .LVU645
 2075              	.LBB276:
 2076              	.LBI276:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2077              		.loc 2 7132 26 view .LVU646
 2078              	.LBB277:
ARM GAS  /tmp/ccI69vXK.s 			page 198


 2079              		.loc 2 7134 3 view .LVU647
 2080              		.loc 2 7134 12 is_stmt 0 view .LVU648
 2081 0084 8A68     		ldr	r2, [r1, #8]
 2082              		.loc 2 7134 76 view .LVU649
 2083 0086 12F00802 		ands	r2, r2, #8
 2084 008a 00D0     		beq	.L150
 2085 008c 0122     		movs	r2, #1
 2086              	.L150:
 2087              	.LVL171:
 2088              		.loc 2 7134 76 view .LVU650
 2089              	.LBE277:
 2090              	.LBE276:
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2091              		.loc 1 1873 3 is_stmt 1 view .LVU651
 2092              		.loc 1 1873 6 is_stmt 0 view .LVU652
 2093 008e 002B     		cmp	r3, #0
 2094 0090 40F00981 		bne	.L206
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2095              		.loc 1 1874 7 view .LVU653
 2096 0094 002A     		cmp	r2, #0
 2097 0096 40F03D81 		bne	.L207
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((pConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 2098              		.loc 1 1879 5 is_stmt 1 view .LVU654
 2099              		.loc 1 1879 25 is_stmt 0 view .LVU655
 2100 009a 2B6A     		ldr	r3, [r5, #32]
 2101              	.LVL172:
 2102              		.loc 1 1879 8 view .LVU656
 2103 009c 13B1     		cbz	r3, .L152
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         || (pConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 2104              		.loc 1 1880 28 view .LVU657
 2105 009e 6B6A     		ldr	r3, [r5, #36]
 2106              		.loc 1 1880 9 view .LVU658
 2107 00a0 002B     		cmp	r3, #0
 2108 00a2 7FD1     		bne	.L153
 2109              	.L152:
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (pConfigInjected->AutoInjectedConv == ENABLE)
 2110              		.loc 1 1882 7 is_stmt 1 view .LVU659
 2111              		.loc 1 1882 26 is_stmt 0 view .LVU660
 2112 00a4 6B7F     		ldrb	r3, [r5, #29]	@ zero_extendqisi2
 2113              		.loc 1 1882 10 view .LVU661
 2114 00a6 012B     		cmp	r3, #1
 2115 00a8 76D0     		beq	.L221
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 2116              		.loc 1 1888 9 is_stmt 1 view .LVU662
 2117 00aa CB68     		ldr	r3, [r1, #12]
 2118 00ac 23F00073 		bic	r3, r3, #33554432
ARM GAS  /tmp/ccI69vXK.s 			page 199


 2119 00b0 CB60     		str	r3, [r1, #12]
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 2120              		.loc 1 1655 21 is_stmt 0 view .LVU663
 2121 00b2 0026     		movs	r6, #0
 2122              	.LVL173:
 2123              	.L155:
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (pConfigInjected->AutoInjectedConv == ENABLE)
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pConfigInjected->InjecOversamplingMode == ENABLE)
 2124              		.loc 1 1908 5 is_stmt 1 view .LVU664
 2125              		.loc 1 1908 24 is_stmt 0 view .LVU665
 2126 00b4 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 2127              		.loc 1 1908 8 view .LVU666
 2128 00b8 012B     		cmp	r3, #1
 2129 00ba 00F08180 		beq	.L222
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(pConfigInjected->InjecOversampling.Ratio));
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(pConfigInjected->InjecOversampling.RightBitShift));
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS)
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                      == (ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS)));
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSR  |
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSS,
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE                                  |
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  pConfigInjected->InjecOversampling.Ratio         |
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  pConfigInjected->InjecOversampling.RightBitShift
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                 );
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
ARM GAS  /tmp/ccI69vXK.s 			page 200


1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 2130              		.loc 1 1934 7 is_stmt 1 view .LVU667
 2131 00be 2268     		ldr	r2, [r4]
 2132              	.LVL174:
 2133              		.loc 1 1934 7 is_stmt 0 view .LVU668
 2134 00c0 1369     		ldr	r3, [r2, #16]
 2135 00c2 23F00203 		bic	r3, r3, #2
 2136 00c6 1361     		str	r3, [r2, #16]
 2137              	.L158:
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_SMPR1_SMPPLUS)
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedSamplingTime == ADC_SAMPLETIME_3CYCLES_5)
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfigInjected->InjectedChannel, LL_ADC_SAMPLI
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5);
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfigInjected->InjectedChannel,
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     pConfigInjected->InjectedSamplingTime);
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set sampling time of the selected ADC channel */
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfigInjected->InjectedChannel,
 2138              		.loc 1 1958 5 is_stmt 1 view .LVU669
 2139 00c8 AA68     		ldr	r2, [r5, #8]
 2140 00ca 2968     		ldr	r1, [r5]
 2141 00cc 2068     		ldr	r0, [r4]
 2142 00ce FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2143              	.LVL175:
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                   pConfigInjected->InjectedSamplingTime);
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_SMPR1_SMPPLUS */
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_offset_shifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, pConfigInjected->InjectedOffset);
 2144              		.loc 1 1966 5 view .LVU670
 2145              		.loc 1 1966 26 is_stmt 0 view .LVU671
 2146 00d2 6969     		ldr	r1, [r5, #20]
 2147 00d4 2268     		ldr	r2, [r4]
 2148 00d6 D368     		ldr	r3, [r2, #12]
 2149 00d8 C3F3C103 		ubfx	r3, r3, #3, #2
 2150 00dc 5B00     		lsls	r3, r3, #1
 2151              		.loc 1 1966 24 view .LVU672
 2152 00de 9940     		lsls	r1, r1, r3
 2153              	.LVL176:
ARM GAS  /tmp/ccI69vXK.s 			page 201


1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 2154              		.loc 1 1968 5 is_stmt 1 view .LVU673
 2155              		.loc 1 1968 24 is_stmt 0 view .LVU674
 2156 00e0 2869     		ldr	r0, [r5, #16]
 2157              		.loc 1 1968 8 view .LVU675
 2158 00e2 0428     		cmp	r0, #4
 2159 00e4 78D0     		beq	.L159
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, pConfigInjected->InjectedOffsetNumber, pConfigInjected->Inje
 2160              		.loc 1 1971 7 is_stmt 1 view .LVU676
 2161              	.LVL177:
 2162              	.LBB278:
 2163              	.LBI278:
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2164              		.loc 2 3664 22 view .LVU677
 2165              	.LBB279:
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2166              		.loc 2 3666 3 view .LVU678
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2167              		.loc 2 3666 25 is_stmt 0 view .LVU679
 2168 00e6 6032     		adds	r2, r2, #96
 2169              	.LVL178:
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2170              		.loc 2 3668 3 is_stmt 1 view .LVU680
 2171 00e8 52F82070 		ldr	r7, [r2, r0, lsl #2]
 2172 00ec A94B     		ldr	r3, .L231
 2173 00ee 3B40     		ands	r3, r3, r7
 2174 00f0 2F68     		ldr	r7, [r5]
 2175 00f2 07F0F847 		and	r7, r7, #2080374784
 2176 00f6 3943     		orrs	r1, r1, r7
 2177              	.LVL179:
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2178              		.loc 2 3668 3 is_stmt 0 view .LVU681
 2179 00f8 0B43     		orrs	r3, r3, r1
 2180 00fa 43F00043 		orr	r3, r3, #-2147483648
 2181 00fe 42F82030 		str	r3, [r2, r0, lsl #2]
 2182              	.LVL180:
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2183              		.loc 2 3671 1 view .LVU682
 2184 0102 D1E0     		b	.L151
 2185              	.LVL181:
 2186              	.L220:
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2187              		.loc 2 3671 1 view .LVU683
 2188              	.LBE279:
 2189              	.LBE278:
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2190              		.loc 1 1747 7 is_stmt 1 view .LVU684
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2191              		.loc 1 1747 26 is_stmt 0 view .LVU685
 2192 0104 2A6A     		ldr	r2, [r5, #32]
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2193              		.loc 1 1747 10 view .LVU686
 2194 0106 BAB1     		cbz	r2, .L143
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
ARM GAS  /tmp/ccI69vXK.s 			page 202


 2195              		.loc 1 1749 9 is_stmt 1 view .LVU687
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 2196              		.loc 1 1749 47 is_stmt 0 view .LVU688
 2197 0108 2B68     		ldr	r3, [r5]
 2198 010a 9B0E     		lsrs	r3, r3, #26
 2199 010c 1B02     		lsls	r3, r3, #8
 2200 010e 03F4F853 		and	r3, r3, #7936
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
 2201              		.loc 1 1750 89 view .LVU689
 2202 0112 02F03C02 		and	r2, r2, #60
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
 2203              		.loc 1 1750 47 view .LVU690
 2204 0116 1343     		orrs	r3, r3, r2
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                              );
 2205              		.loc 1 1751 64 view .LVU691
 2206 0118 6A6A     		ldr	r2, [r5, #36]
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 2207              		.loc 1 1749 44 view .LVU692
 2208 011a 1343     		orrs	r3, r3, r2
 2209              	.LVL182:
 2210              	.L144:
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 2211              		.loc 1 1759 7 is_stmt 1 view .LVU693
 2212 011c 2168     		ldr	r1, [r4]
 2213              	.LVL183:
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 2214              		.loc 1 1759 7 is_stmt 0 view .LVU694
 2215 011e CA6C     		ldr	r2, [r1, #76]
 2216 0120 22F0FB42 		bic	r2, r2, #2105540608
 2217 0124 22F4EF02 		bic	r2, r2, #7831552
 2218 0128 22F4BF42 		bic	r2, r2, #24448
 2219 012c 22F07F02 		bic	r2, r2, #127
 2220 0130 1A43     		orrs	r2, r2, r3
 2221 0132 CA64     		str	r2, [r1, #76]
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2222              		.loc 1 1761 7 is_stmt 1 view .LVU695
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2223              		.loc 1 1761 42 is_stmt 0 view .LVU696
 2224 0134 E365     		str	r3, [r4, #92]
 2225 0136 8CE7     		b	.L142
 2226              	.LVL184:
 2227              	.L143:
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2228              		.loc 1 1756 9 is_stmt 1 view .LVU697
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2229              		.loc 1 1756 47 is_stmt 0 view .LVU698
 2230 0138 2B68     		ldr	r3, [r5]
 2231 013a 9B0E     		lsrs	r3, r3, #26
 2232 013c 1B02     		lsls	r3, r3, #8
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2233              		.loc 1 1756 44 view .LVU699
 2234 013e 03F4F853 		and	r3, r3, #7936
 2235              	.LVL185:
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2236              		.loc 1 1756 44 view .LVU700
 2237 0142 EBE7     		b	.L144
 2238              	.LVL186:
ARM GAS  /tmp/ccI69vXK.s 			page 203


 2239              	.L146:
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2240              		.loc 1 1806 9 is_stmt 1 view .LVU701
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2241              		.loc 1 1806 63 is_stmt 0 view .LVU702
 2242 0144 8A69     		ldr	r2, [r1, #24]
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2243              		.loc 1 1806 44 view .LVU703
 2244 0146 013A     		subs	r2, r2, #1
 2245              	.LVL187:
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2246              		.loc 1 1806 44 view .LVU704
 2247 0148 00E0     		b	.L145
 2248              	.LVL188:
 2249              	.L205:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2250              		.loc 1 1662 12 view .LVU705
 2251 014a 0022     		movs	r2, #0
 2252              	.LVL189:
 2253              	.L145:
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2254              		.loc 1 1814 5 is_stmt 1 view .LVU706
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2255              		.loc 1 1817 5 view .LVU707
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2256              		.loc 1 1817 43 is_stmt 0 view .LVU708
 2257 014c 2B68     		ldr	r3, [r5]
 2258 014e C3F38463 		ubfx	r3, r3, #26, #5
 2259 0152 6968     		ldr	r1, [r5, #4]
 2260              	.LVL190:
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2261              		.loc 1 1817 43 view .LVU709
 2262 0154 01F01F01 		and	r1, r1, #31
 2263 0158 8B40     		lsls	r3, r3, r1
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2264              		.loc 1 1817 40 view .LVU710
 2265 015a 1343     		orrs	r3, r3, r2
 2266              	.LVL191:
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2267              		.loc 1 1820 5 is_stmt 1 view .LVU711
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2268              		.loc 1 1820 26 is_stmt 0 view .LVU712
 2269 015c 216E     		ldr	r1, [r4, #96]
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2270              		.loc 1 1820 39 view .LVU713
 2271 015e 0139     		subs	r1, r1, #1
 2272 0160 2166     		str	r1, [r4, #96]
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2273              		.loc 1 1825 5 is_stmt 1 view .LVU714
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2274              		.loc 1 1825 26 is_stmt 0 view .LVU715
 2275 0162 E26D     		ldr	r2, [r4, #92]
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2276              		.loc 1 1825 40 view .LVU716
 2277 0164 1343     		orrs	r3, r3, r2
 2278              	.LVL192:
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 204


 2279              		.loc 1 1825 40 view .LVU717
 2280 0166 E365     		str	r3, [r4, #92]
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2281              		.loc 1 1829 5 is_stmt 1 view .LVU718
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2282              		.loc 1 1829 8 is_stmt 0 view .LVU719
 2283 0168 0029     		cmp	r1, #0
 2284 016a 7FF472AF 		bne	.L142
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 2285              		.loc 1 1831 7 is_stmt 1 view .LVU720
 2286 016e 2168     		ldr	r1, [r4]
 2287 0170 CA6C     		ldr	r2, [r1, #76]
 2288 0172 22F0FB42 		bic	r2, r2, #2105540608
 2289 0176 22F4EF02 		bic	r2, r2, #7831552
 2290 017a 22F4BF42 		bic	r2, r2, #24448
 2291 017e 22F07F02 		bic	r2, r2, #127
 2292 0182 1343     		orrs	r3, r3, r2
 2293 0184 CB64     		str	r3, [r1, #76]
 2294 0186 64E7     		b	.L142
 2295              	.LVL193:
 2296              	.L148:
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 2297              		.loc 1 1856 7 view .LVU721
 2298 0188 DA68     		ldr	r2, [r3, #12]
 2299 018a 22F44012 		bic	r2, r2, #3145728
 2300 018e A97F     		ldrb	r1, [r5, #30]	@ zero_extendqisi2
 2301 0190 42EA4152 		orr	r2, r2, r1, lsl #21
 2302 0194 DA60     		str	r2, [r3, #12]
 2303 0196 6FE7     		b	.L147
 2304              	.LVL194:
 2305              	.L221:
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2306              		.loc 1 1884 9 view .LVU722
 2307 0198 CB68     		ldr	r3, [r1, #12]
 2308 019a 43F00073 		orr	r3, r3, #33554432
 2309 019e CB60     		str	r3, [r1, #12]
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 2310              		.loc 1 1655 21 is_stmt 0 view .LVU723
 2311 01a0 0026     		movs	r6, #0
 2312 01a2 87E7     		b	.L155
 2313              	.L153:
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2314              		.loc 1 1895 7 is_stmt 1 view .LVU724
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2315              		.loc 1 1895 26 is_stmt 0 view .LVU725
 2316 01a4 6E7F     		ldrb	r6, [r5, #29]	@ zero_extendqisi2
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2317              		.loc 1 1895 10 view .LVU726
 2318 01a6 012E     		cmp	r6, #1
 2319 01a8 05D0     		beq	.L223
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2320              		.loc 1 1904 9 is_stmt 1 view .LVU727
 2321 01aa CB68     		ldr	r3, [r1, #12]
 2322 01ac 23F00073 		bic	r3, r3, #33554432
 2323 01b0 CB60     		str	r3, [r1, #12]
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 2324              		.loc 1 1655 21 is_stmt 0 view .LVU728
ARM GAS  /tmp/ccI69vXK.s 			page 205


 2325 01b2 0026     		movs	r6, #0
 2326 01b4 7EE7     		b	.L155
 2327              	.L223:
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2328              		.loc 1 1898 9 is_stmt 1 view .LVU729
 2329 01b6 636D     		ldr	r3, [r4, #84]
 2330 01b8 43F02003 		orr	r3, r3, #32
 2331 01bc 6365     		str	r3, [r4, #84]
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2332              		.loc 1 1900 9 view .LVU730
 2333              	.LVL195:
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2334              		.loc 1 1900 9 is_stmt 0 view .LVU731
 2335 01be 79E7     		b	.L155
 2336              	.LVL196:
 2337              	.L222:
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(pConfigInjected->InjecOversampling.RightBitShift));
 2338              		.loc 1 1910 7 is_stmt 1 view .LVU732
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2339              		.loc 1 1911 7 view .LVU733
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                      == (ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS)));
 2340              		.loc 1 1914 7 view .LVU734
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
 2341              		.loc 1 1922 7 view .LVU735
 2342 01c0 2168     		ldr	r1, [r4]
 2343 01c2 0B69     		ldr	r3, [r1, #16]
 2344 01c4 23F4FF73 		bic	r3, r3, #510
 2345 01c8 EA6A     		ldr	r2, [r5, #44]
 2346              	.LVL197:
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
 2347              		.loc 1 1922 7 is_stmt 0 view .LVU736
 2348 01ca 286B     		ldr	r0, [r5, #48]
 2349 01cc 0243     		orrs	r2, r2, r0
 2350 01ce 1343     		orrs	r3, r3, r2
 2351 01d0 43F00203 		orr	r3, r3, #2
 2352 01d4 0B61     		str	r3, [r1, #16]
 2353 01d6 77E7     		b	.L158
 2354              	.LVL198:
 2355              	.L159:
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                        tmp_offset_shifted);
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Scan each offset register to check if the selected channel is targeted. */
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If this is the case, the corresponding offset number is disabled.       */
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
 2356              		.loc 1 1979 7 is_stmt 1 view .LVU737
 2357              	.LBB280:
 2358              	.LBI280:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2359              		.loc 2 3744 26 view .LVU738
 2360              	.LBB281:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2361              		.loc 2 3746 3 view .LVU739
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2362              		.loc 2 3748 3 view .LVU740
ARM GAS  /tmp/ccI69vXK.s 			page 206


3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2363              		.loc 2 3748 10 is_stmt 0 view .LVU741
 2364 01d8 136E     		ldr	r3, [r2, #96]
 2365              	.LVL199:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2366              		.loc 2 3748 10 view .LVU742
 2367              	.LBE281:
 2368              	.LBE280:
 2369              	.LBB282:
 2370              	.LBI282:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2371              		.loc 2 3744 26 is_stmt 1 view .LVU743
 2372              	.LBB283:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2373              		.loc 2 3746 3 view .LVU744
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2374              		.loc 2 3748 3 view .LVU745
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2375              		.loc 2 3748 10 is_stmt 0 view .LVU746
 2376 01da 116E     		ldr	r1, [r2, #96]
 2377              	.LVL200:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2378              		.loc 2 3748 10 view .LVU747
 2379              	.LBE283:
 2380              	.LBE282:
 2381              		.loc 1 1979 11 view .LVU748
 2382 01dc C1F38461 		ubfx	r1, r1, #26, #5
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2383              		.loc 1 1980 14 view .LVU749
 2384 01e0 2B68     		ldr	r3, [r5]
 2385 01e2 C3F31200 		ubfx	r0, r3, #0, #19
 2386 01e6 78BB     		cbnz	r0, .L160
 2387              		.loc 1 1980 14 discriminator 1 view .LVU750
 2388 01e8 C3F38463 		ubfx	r3, r3, #26, #5
 2389              	.L161:
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2390              		.loc 1 1979 10 view .LVU751
 2391 01ec 9942     		cmp	r1, r3
 2392 01ee 33D0     		beq	.L224
 2393              	.L163:
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 2394              		.loc 1 1984 7 is_stmt 1 view .LVU752
 2395              		.loc 1 1984 11 is_stmt 0 view .LVU753
 2396 01f0 2168     		ldr	r1, [r4]
 2397              	.LVL201:
 2398              	.LBB284:
 2399              	.LBI284:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2400              		.loc 2 3744 26 is_stmt 1 view .LVU754
 2401              	.LBB285:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2402              		.loc 2 3746 3 view .LVU755
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2403              		.loc 2 3748 3 view .LVU756
ARM GAS  /tmp/ccI69vXK.s 			page 207


3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2404              		.loc 2 3748 10 is_stmt 0 view .LVU757
 2405 01f2 4B6E     		ldr	r3, [r1, #100]
 2406              	.LVL202:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2407              		.loc 2 3748 10 view .LVU758
 2408              	.LBE285:
 2409              	.LBE284:
 2410              	.LBB286:
 2411              	.LBI286:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2412              		.loc 2 3744 26 is_stmt 1 view .LVU759
 2413              	.LBB287:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2414              		.loc 2 3746 3 view .LVU760
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2415              		.loc 2 3748 3 view .LVU761
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2416              		.loc 2 3748 10 is_stmt 0 view .LVU762
 2417 01f4 4A6E     		ldr	r2, [r1, #100]
 2418              	.LVL203:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2419              		.loc 2 3748 10 view .LVU763
 2420              	.LBE287:
 2421              	.LBE286:
 2422              		.loc 1 1984 11 view .LVU764
 2423 01f6 C2F38462 		ubfx	r2, r2, #26, #5
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2424              		.loc 1 1985 14 view .LVU765
 2425 01fa 2B68     		ldr	r3, [r5]
 2426 01fc C3F31200 		ubfx	r0, r3, #0, #19
 2427 0200 78BB     		cbnz	r0, .L164
 2428              		.loc 1 1985 14 discriminator 1 view .LVU766
 2429 0202 C3F38463 		ubfx	r3, r3, #26, #5
 2430              	.L165:
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2431              		.loc 1 1984 10 view .LVU767
 2432 0206 9A42     		cmp	r2, r3
 2433 0208 33D0     		beq	.L225
 2434              	.L167:
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 2435              		.loc 1 1989 7 is_stmt 1 view .LVU768
 2436              		.loc 1 1989 11 is_stmt 0 view .LVU769
 2437 020a 2168     		ldr	r1, [r4]
 2438              	.LVL204:
 2439              	.LBB288:
 2440              	.LBI288:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2441              		.loc 2 3744 26 is_stmt 1 view .LVU770
 2442              	.LBB289:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2443              		.loc 2 3746 3 view .LVU771
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2444              		.loc 2 3748 3 view .LVU772
ARM GAS  /tmp/ccI69vXK.s 			page 208


3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2445              		.loc 2 3748 10 is_stmt 0 view .LVU773
 2446 020c 8B6E     		ldr	r3, [r1, #104]
 2447              	.LVL205:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2448              		.loc 2 3748 10 view .LVU774
 2449              	.LBE289:
 2450              	.LBE288:
 2451              	.LBB290:
 2452              	.LBI290:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2453              		.loc 2 3744 26 is_stmt 1 view .LVU775
 2454              	.LBB291:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2455              		.loc 2 3746 3 view .LVU776
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2456              		.loc 2 3748 3 view .LVU777
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2457              		.loc 2 3748 10 is_stmt 0 view .LVU778
 2458 020e 8A6E     		ldr	r2, [r1, #104]
 2459              	.LVL206:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2460              		.loc 2 3748 10 view .LVU779
 2461              	.LBE291:
 2462              	.LBE290:
 2463              		.loc 1 1989 11 view .LVU780
 2464 0210 C2F38462 		ubfx	r2, r2, #26, #5
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2465              		.loc 1 1990 14 view .LVU781
 2466 0214 2B68     		ldr	r3, [r5]
 2467 0216 C3F31200 		ubfx	r0, r3, #0, #19
 2468 021a 78BB     		cbnz	r0, .L168
 2469              		.loc 1 1990 14 discriminator 1 view .LVU782
 2470 021c C3F38463 		ubfx	r3, r3, #26, #5
 2471              	.L169:
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2472              		.loc 1 1989 10 view .LVU783
 2473 0220 9A42     		cmp	r2, r3
 2474 0222 33D0     		beq	.L226
 2475              	.L171:
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 2476              		.loc 1 1994 7 is_stmt 1 view .LVU784
 2477              		.loc 1 1994 11 is_stmt 0 view .LVU785
 2478 0224 2168     		ldr	r1, [r4]
 2479              	.LVL207:
 2480              	.LBB292:
 2481              	.LBI292:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2482              		.loc 2 3744 26 is_stmt 1 view .LVU786
 2483              	.LBB293:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2484              		.loc 2 3746 3 view .LVU787
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2485              		.loc 2 3748 3 view .LVU788
ARM GAS  /tmp/ccI69vXK.s 			page 209


3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2486              		.loc 2 3748 10 is_stmt 0 view .LVU789
 2487 0226 CB6E     		ldr	r3, [r1, #108]
 2488              	.LVL208:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2489              		.loc 2 3748 10 view .LVU790
 2490              	.LBE293:
 2491              	.LBE292:
 2492              	.LBB294:
 2493              	.LBI294:
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2494              		.loc 2 3744 26 is_stmt 1 view .LVU791
 2495              	.LBB295:
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2496              		.loc 2 3746 3 view .LVU792
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2497              		.loc 2 3748 3 view .LVU793
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2498              		.loc 2 3748 10 is_stmt 0 view .LVU794
 2499 0228 CA6E     		ldr	r2, [r1, #108]
 2500              	.LVL209:
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2501              		.loc 2 3748 10 view .LVU795
 2502              	.LBE295:
 2503              	.LBE294:
 2504              		.loc 1 1994 11 view .LVU796
 2505 022a C2F38462 		ubfx	r2, r2, #26, #5
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2506              		.loc 1 1995 14 view .LVU797
 2507 022e 2B68     		ldr	r3, [r5]
 2508 0230 C3F31200 		ubfx	r0, r3, #0, #19
 2509 0234 78BB     		cbnz	r0, .L172
 2510              		.loc 1 1995 14 discriminator 1 view .LVU798
 2511 0236 C3F38463 		ubfx	r3, r3, #26, #5
 2512              	.L173:
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 2513              		.loc 1 1994 10 view .LVU799
 2514 023a 9A42     		cmp	r2, r3
 2515 023c 34D1     		bne	.L151
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 2516              		.loc 1 1997 9 is_stmt 1 view .LVU800
 2517              	.LVL210:
 2518              	.LBB296:
 2519              	.LBI296:
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2520              		.loc 2 3803 22 view .LVU801
 2521              	.LBB297:
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2522              		.loc 2 3805 3 view .LVU802
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2523              		.loc 2 3807 3 view .LVU803
 2524 023e CB6E     		ldr	r3, [r1, #108]
 2525 0240 23F00043 		bic	r3, r3, #-2147483648
 2526 0244 CB66     		str	r3, [r1, #108]
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2527              		.loc 2 3810 1 is_stmt 0 view .LVU804
ARM GAS  /tmp/ccI69vXK.s 			page 210


 2528 0246 2FE0     		b	.L151
 2529              	.LVL211:
 2530              	.L160:
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2531              		.loc 2 3810 1 view .LVU805
 2532              	.LBE297:
 2533              	.LBE296:
 2534              	.LBB298:
 2535              	.LBI298:
 2536              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /tmp/ccI69vXK.s 			page 211


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccI69vXK.s 			page 212


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/ccI69vXK.s 			page 213


 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
ARM GAS  /tmp/ccI69vXK.s 			page 214


 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 215


 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 216


 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccI69vXK.s 			page 217


 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
ARM GAS  /tmp/ccI69vXK.s 			page 218


 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
ARM GAS  /tmp/ccI69vXK.s 			page 219


 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
ARM GAS  /tmp/ccI69vXK.s 			page 220


 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 221


 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
ARM GAS  /tmp/ccI69vXK.s 			page 222


 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
ARM GAS  /tmp/ccI69vXK.s 			page 223


 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 224


 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
ARM GAS  /tmp/ccI69vXK.s 			page 225


 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccI69vXK.s 			page 226


 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccI69vXK.s 			page 227


 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
ARM GAS  /tmp/ccI69vXK.s 			page 228


1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2537              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU806
 2538              	.LBB299:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2539              		.loc 3 1050 3 discriminator 2 view .LVU807
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2540              		.loc 3 1055 4 discriminator 2 view .LVU808
 2541              		.syntax unified
 2542              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2543 0248 93FAA3F3 		rbit r3, r3
 2544              	@ 0 "" 2
 2545              	.LVL212:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
ARM GAS  /tmp/ccI69vXK.s 			page 229


1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2546              		.loc 3 1068 3 discriminator 2 view .LVU809
 2547              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU810
 2548              		.thumb
 2549              		.syntax unified
 2550              	.LBE299:
 2551              	.LBE298:
 2552              	.LBB300:
 2553              	.LBI300:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2554              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU811
 2555              	.LBB301:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2556              		.loc 3 1089 3 discriminator 2 view .LVU812
 2557              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU813
 2558 024c 13B1     		cbz	r3, .L208
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2559              		.loc 3 1093 3 is_stmt 1 view .LVU814
 2560              		.loc 3 1093 10 is_stmt 0 view .LVU815
 2561 024e B3FA83F3 		clz	r3, r3
 2562              	.LVL213:
 2563              		.loc 3 1093 10 view .LVU816
 2564 0252 CBE7     		b	.L161
 2565              	.LVL214:
 2566              	.L208:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2567              		.loc 3 1091 12 view .LVU817
 2568 0254 2023     		movs	r3, #32
 2569              	.LVL215:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2570              		.loc 3 1091 12 view .LVU818
 2571 0256 C9E7     		b	.L161
ARM GAS  /tmp/ccI69vXK.s 			page 230


 2572              	.L224:
 2573              	.LBE301:
 2574              	.LBE300:
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2575              		.loc 1 1982 9 is_stmt 1 view .LVU819
 2576              	.LVL216:
 2577              	.LBB302:
 2578              	.LBI302:
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2579              		.loc 2 3803 22 view .LVU820
 2580              	.LBB303:
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2581              		.loc 2 3805 3 view .LVU821
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2582              		.loc 2 3807 3 view .LVU822
 2583 0258 136E     		ldr	r3, [r2, #96]
 2584 025a 23F00043 		bic	r3, r3, #-2147483648
 2585 025e 1366     		str	r3, [r2, #96]
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2586              		.loc 2 3810 1 is_stmt 0 view .LVU823
 2587 0260 C6E7     		b	.L163
 2588              	.LVL217:
 2589              	.L164:
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2590              		.loc 2 3810 1 view .LVU824
 2591              	.LBE303:
 2592              	.LBE302:
 2593              	.LBB304:
 2594              	.LBI304:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2595              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU825
 2596              	.LBB305:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2597              		.loc 3 1050 3 discriminator 2 view .LVU826
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2598              		.loc 3 1055 4 discriminator 2 view .LVU827
 2599              		.syntax unified
 2600              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2601 0262 93FAA3F3 		rbit r3, r3
 2602              	@ 0 "" 2
 2603              	.LVL218:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2604              		.loc 3 1068 3 discriminator 2 view .LVU828
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2605              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU829
 2606              		.thumb
 2607              		.syntax unified
 2608              	.LBE305:
 2609              	.LBE304:
 2610              	.LBB306:
 2611              	.LBI306:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2612              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU830
 2613              	.LBB307:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2614              		.loc 3 1089 3 discriminator 2 view .LVU831
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccI69vXK.s 			page 231


 2615              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU832
 2616 0266 13B1     		cbz	r3, .L209
 2617              		.loc 3 1093 3 is_stmt 1 view .LVU833
 2618              		.loc 3 1093 10 is_stmt 0 view .LVU834
 2619 0268 B3FA83F3 		clz	r3, r3
 2620              	.LVL219:
 2621              		.loc 3 1093 10 view .LVU835
 2622 026c CBE7     		b	.L165
 2623              	.LVL220:
 2624              	.L209:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2625              		.loc 3 1091 12 view .LVU836
 2626 026e 2023     		movs	r3, #32
 2627              	.LVL221:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2628              		.loc 3 1091 12 view .LVU837
 2629 0270 C9E7     		b	.L165
 2630              	.L225:
 2631              	.LBE307:
 2632              	.LBE306:
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2633              		.loc 1 1987 9 is_stmt 1 view .LVU838
 2634              	.LVL222:
 2635              	.LBB308:
 2636              	.LBI308:
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2637              		.loc 2 3803 22 view .LVU839
 2638              	.LBB309:
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2639              		.loc 2 3805 3 view .LVU840
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2640              		.loc 2 3807 3 view .LVU841
 2641 0272 4B6E     		ldr	r3, [r1, #100]
 2642 0274 23F00043 		bic	r3, r3, #-2147483648
 2643 0278 4B66     		str	r3, [r1, #100]
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2644              		.loc 2 3810 1 is_stmt 0 view .LVU842
 2645 027a C6E7     		b	.L167
 2646              	.LVL223:
 2647              	.L168:
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2648              		.loc 2 3810 1 view .LVU843
 2649              	.LBE309:
 2650              	.LBE308:
 2651              	.LBB310:
 2652              	.LBI310:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2653              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU844
 2654              	.LBB311:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2655              		.loc 3 1050 3 discriminator 2 view .LVU845
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2656              		.loc 3 1055 4 discriminator 2 view .LVU846
 2657              		.syntax unified
 2658              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2659 027c 93FAA3F3 		rbit r3, r3
 2660              	@ 0 "" 2
ARM GAS  /tmp/ccI69vXK.s 			page 232


 2661              	.LVL224:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2662              		.loc 3 1068 3 discriminator 2 view .LVU847
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2663              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU848
 2664              		.thumb
 2665              		.syntax unified
 2666              	.LBE311:
 2667              	.LBE310:
 2668              	.LBB312:
 2669              	.LBI312:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2670              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU849
 2671              	.LBB313:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2672              		.loc 3 1089 3 discriminator 2 view .LVU850
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2673              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU851
 2674 0280 13B1     		cbz	r3, .L210
 2675              		.loc 3 1093 3 is_stmt 1 view .LVU852
 2676              		.loc 3 1093 10 is_stmt 0 view .LVU853
 2677 0282 B3FA83F3 		clz	r3, r3
 2678              	.LVL225:
 2679              		.loc 3 1093 10 view .LVU854
 2680 0286 CBE7     		b	.L169
 2681              	.LVL226:
 2682              	.L210:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2683              		.loc 3 1091 12 view .LVU855
 2684 0288 2023     		movs	r3, #32
 2685              	.LVL227:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2686              		.loc 3 1091 12 view .LVU856
 2687 028a C9E7     		b	.L169
 2688              	.L226:
 2689              	.LBE313:
 2690              	.LBE312:
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2691              		.loc 1 1992 9 is_stmt 1 view .LVU857
 2692              	.LVL228:
 2693              	.LBB314:
 2694              	.LBI314:
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2695              		.loc 2 3803 22 view .LVU858
 2696              	.LBB315:
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2697              		.loc 2 3805 3 view .LVU859
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2698              		.loc 2 3807 3 view .LVU860
 2699 028c 8B6E     		ldr	r3, [r1, #104]
 2700 028e 23F00043 		bic	r3, r3, #-2147483648
 2701 0292 8B66     		str	r3, [r1, #104]
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2702              		.loc 2 3810 1 is_stmt 0 view .LVU861
 2703 0294 C6E7     		b	.L171
 2704              	.LVL229:
 2705              	.L172:
ARM GAS  /tmp/ccI69vXK.s 			page 233


3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2706              		.loc 2 3810 1 view .LVU862
 2707              	.LBE315:
 2708              	.LBE314:
 2709              	.LBB316:
 2710              	.LBI316:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2711              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU863
 2712              	.LBB317:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2713              		.loc 3 1050 3 discriminator 2 view .LVU864
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2714              		.loc 3 1055 4 discriminator 2 view .LVU865
 2715              		.syntax unified
 2716              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2717 0296 93FAA3F3 		rbit r3, r3
 2718              	@ 0 "" 2
 2719              	.LVL230:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2720              		.loc 3 1068 3 discriminator 2 view .LVU866
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2721              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU867
 2722              		.thumb
 2723              		.syntax unified
 2724              	.LBE317:
 2725              	.LBE316:
 2726              	.LBB318:
 2727              	.LBI318:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2728              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU868
 2729              	.LBB319:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2730              		.loc 3 1089 3 discriminator 2 view .LVU869
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2731              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU870
 2732 029a 13B1     		cbz	r3, .L211
 2733              		.loc 3 1093 3 is_stmt 1 view .LVU871
 2734              		.loc 3 1093 10 is_stmt 0 view .LVU872
 2735 029c B3FA83F3 		clz	r3, r3
 2736              	.LVL231:
 2737              		.loc 3 1093 10 view .LVU873
 2738 02a0 CBE7     		b	.L173
 2739              	.LVL232:
 2740              	.L211:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2741              		.loc 3 1091 12 view .LVU874
 2742 02a2 2023     		movs	r3, #32
 2743              	.LVL233:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2744              		.loc 3 1091 12 view .LVU875
 2745 02a4 C9E7     		b	.L173
 2746              	.LVL234:
 2747              	.L206:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2748              		.loc 3 1091 12 view .LVU876
 2749              	.LBE319:
 2750              	.LBE318:
ARM GAS  /tmp/ccI69vXK.s 			page 234


1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 2751              		.loc 1 1655 21 view .LVU877
 2752 02a6 0026     		movs	r6, #0
 2753              	.LVL235:
 2754              	.L151:
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2755              		.loc 1 2006 3 is_stmt 1 view .LVU878
 2756              		.loc 1 2006 28 is_stmt 0 view .LVU879
 2757 02a8 2168     		ldr	r1, [r4]
 2758              	.LVL236:
 2759              	.LBB320:
 2760              	.LBI320:
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2761              		.loc 2 6826 26 is_stmt 1 view .LVU880
 2762              	.LBB321:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2763              		.loc 2 6828 3 view .LVU881
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2764              		.loc 2 6828 12 is_stmt 0 view .LVU882
 2765 02aa 8B68     		ldr	r3, [r1, #8]
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2766              		.loc 2 6828 68 view .LVU883
 2767 02ac 13F0010F 		tst	r3, #1
 2768 02b0 16D1     		bne	.L175
 2769              	.LVL237:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2770              		.loc 2 6828 68 view .LVU884
 2771              	.LBE321:
 2772              	.LBE320:
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, pConfigInjected->InjectedChannel, pConfigInjected->
 2773              		.loc 1 2009 5 is_stmt 1 view .LVU885
 2774              		.loc 1 2009 64 is_stmt 0 view .LVU886
 2775 02b2 2B68     		ldr	r3, [r5]
 2776              		.loc 1 2009 98 view .LVU887
 2777 02b4 E868     		ldr	r0, [r5, #12]
 2778              	.LVL238:
 2779              	.LBB322:
 2780              	.LBI322:
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2781              		.loc 2 5621 22 is_stmt 1 view .LVU888
 2782              	.LBB323:
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2783              		.loc 2 5626 3 view .LVU889
 2784 02b6 D1F8B020 		ldr	r2, [r1, #176]
 2785 02ba C3F31207 		ubfx	r7, r3, #0, #19
 2786 02be 22EA0702 		bic	r2, r2, r7
 2787 02c2 00F0180C 		and	ip, r0, #24
ARM GAS  /tmp/ccI69vXK.s 			page 235


 2788 02c6 3448     		ldr	r0, .L231+4
 2789              	.LVL239:
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2790              		.loc 2 5626 3 is_stmt 0 view .LVU890
 2791 02c8 20FA0CF0 		lsr	r0, r0, ip
 2792 02cc 0340     		ands	r3, r3, r0
 2793              	.LVL240:
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2794              		.loc 2 5626 3 view .LVU891
 2795 02ce C3F31203 		ubfx	r3, r3, #0, #19
 2796 02d2 1343     		orrs	r3, r3, r2
 2797 02d4 C1F8B030 		str	r3, [r1, #176]
 2798              	.LVL241:
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2799              		.loc 2 5626 3 view .LVU892
 2800              	.LBE323:
 2801              	.LBE322:
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 2802              		.loc 1 2013 5 is_stmt 1 view .LVU893
 2803              		.loc 1 2013 24 is_stmt 0 view .LVU894
 2804 02d8 EA68     		ldr	r2, [r5, #12]
 2805              		.loc 1 2013 8 view .LVU895
 2806 02da 304B     		ldr	r3, .L231+8
 2807 02dc 9A42     		cmp	r2, r3
 2808 02de 1BD0     		beq	.L227
 2809              	.L175:
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance,
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                     (uint32_t)pConfigInjected->InjectedChannel)
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                   + 1UL) & 0x1FUL)),
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     pConfigInjected->InjectedSamplingTime);
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* internal measurement paths enable: If internal channel selected,       */
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* enable dedicated internal buffers and path.                            */
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Note: these internal measurement paths can be disabled using           */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* HAL_ADC_DeInit().                                                      */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfigInjected->InjectedChannel))
 2810              		.loc 1 2032 3 is_stmt 1 view .LVU896
 2811              		.loc 1 2032 7 is_stmt 0 view .LVU897
 2812 02e0 2B68     		ldr	r3, [r5]
 2813              		.loc 1 2032 6 view .LVU898
 2814 02e2 2F4A     		ldr	r2, .L231+12
 2815 02e4 1342     		tst	r3, r2
 2816 02e6 0FD0     		beq	.L199
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Ins
ARM GAS  /tmp/ccI69vXK.s 			page 236


 2817              		.loc 1 2034 5 is_stmt 1 view .LVU899
 2818              	.LVL242:
 2819              	.LBB324:
 2820              	.LBI324:
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2821              		.loc 2 3334 26 view .LVU900
 2822              	.LBB325:
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2823              		.loc 2 3336 3 view .LVU901
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2824              		.loc 2 3336 21 is_stmt 0 view .LVU902
 2825 02e8 2E4A     		ldr	r2, .L231+16
 2826 02ea 9268     		ldr	r2, [r2, #8]
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2827              		.loc 2 3336 10 view .LVU903
 2828 02ec 02F0E070 		and	r0, r2, #29360128
 2829              	.LVL243:
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2830              		.loc 2 3336 10 view .LVU904
 2831              	.LBE325:
 2832              	.LBE324:
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((pConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR)
 2833              		.loc 1 2038 5 is_stmt 1 view .LVU905
 2834              		.loc 1 2038 8 is_stmt 0 view .LVU906
 2835 02f0 2D49     		ldr	r1, .L231+20
 2836 02f2 8B42     		cmp	r3, r1
 2837 02f4 00F0D380 		beq	.L228
 2838              	.L200:
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Wait loop initialization and execution */
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Note: Variable divided by 2 to compensate partially              */
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /*       CPU processing cycles, scaling in us split to not          */
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /*       exceed 32 bits register capacity and handle low frequency. */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL)
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            * (((SystemCoreClock / (100000UL * 2UL)) + 1UL) + 1UL));
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           wait_loop_index--;
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else if ((pConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
 2839              		.loc 1 2059 10 is_stmt 1 view .LVU907
 2840              		.loc 1 2059 13 is_stmt 0 view .LVU908
 2841 02f8 2C49     		ldr	r1, .L231+24
 2842 02fa 8B42     		cmp	r3, r1
 2843 02fc 00F0F480 		beq	.L229
ARM GAS  /tmp/ccI69vXK.s 			page 237


 2844              	.L203:
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else if ((pConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
 2845              		.loc 1 2068 10 is_stmt 1 view .LVU909
 2846              		.loc 1 2068 13 is_stmt 0 view .LVU910
 2847 0300 2B49     		ldr	r1, .L231+28
 2848 0302 8B42     		cmp	r3, r1
 2849 0304 00F00281 		beq	.L230
 2850              	.LVL244:
 2851              	.L199:
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_VREFINT_INSTANCE(hadc))
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* nothing to do */
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 2852              		.loc 1 2080 5 is_stmt 1 view .LVU911
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2853              		.loc 1 2084 3 view .LVU912
 2854              		.loc 1 2084 3 view .LVU913
 2855 0308 0023     		movs	r3, #0
 2856 030a 84F85030 		strb	r3, [r4, #80]
 2857              		.loc 1 2084 3 view .LVU914
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 2858              		.loc 1 2087 3 view .LVU915
 2859              	.LVL245:
 2860              	.L139:
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2861              		.loc 1 2088 1 is_stmt 0 view .LVU916
 2862 030e 3046     		mov	r0, r6
 2863 0310 03B0     		add	sp, sp, #12
 2864              	.LCFI26:
 2865              		.cfi_remember_state
 2866              		.cfi_def_cfa_offset 20
 2867              		@ sp needed
 2868 0312 F0BD     		pop	{r4, r5, r6, r7, pc}
 2869              	.LVL246:
 2870              	.L207:
 2871              	.LCFI27:
ARM GAS  /tmp/ccI69vXK.s 			page 238


 2872              		.cfi_restore_state
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 2873              		.loc 1 1655 21 view .LVU917
 2874 0314 0026     		movs	r6, #0
 2875 0316 C7E7     		b	.L151
 2876              	.LVL247:
 2877              	.L227:
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 2878              		.loc 1 2016 7 is_stmt 1 view .LVU918
 2879 0318 2068     		ldr	r0, [r4]
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2880              		.loc 1 2017 48 is_stmt 0 view .LVU919
 2881 031a 2B68     		ldr	r3, [r5]
 2882 031c C3F31207 		ubfx	r7, r3, #0, #19
 2883 0320 57BB     		cbnz	r7, .L176
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2884              		.loc 1 2017 48 discriminator 1 view .LVU920
 2885 0322 9A0E     		lsrs	r2, r3, #26
 2886 0324 0132     		adds	r2, r2, #1
 2887 0326 02F01F02 		and	r2, r2, #31
 2888 032a 092A     		cmp	r2, #9
 2889 032c 8CBF     		ite	hi
 2890 032e 0022     		movhi	r2, #0
 2891 0330 0122     		movls	r2, #1
 2892              	.L177:
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 2893              		.loc 1 2016 7 view .LVU921
 2894 0332 002A     		cmp	r2, #0
 2895 0334 69D0     		beq	.L179
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2896              		.loc 1 2017 48 view .LVU922
 2897 0336 002F     		cmp	r7, #0
 2898 0338 3ED1     		bne	.L180
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2899              		.loc 1 2017 48 discriminator 3 view .LVU923
 2900 033a 990E     		lsrs	r1, r3, #26
 2901 033c 0131     		adds	r1, r1, #1
 2902 033e 8906     		lsls	r1, r1, #26
 2903 0340 01F0F841 		and	r1, r1, #2080374784
 2904              	.L181:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2905              		.loc 1 2017 48 discriminator 6 view .LVU924
 2906 0344 002F     		cmp	r7, #0
 2907 0346 43D1     		bne	.L183
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2908              		.loc 1 2017 48 discriminator 7 view .LVU925
 2909 0348 4FEA936C 		lsr	ip, r3, #26
 2910 034c 0CF1010C 		add	ip, ip, #1
 2911 0350 0CF01F0C 		and	ip, ip, #31
 2912 0354 0122     		movs	r2, #1
 2913 0356 02FA0CF2 		lsl	r2, r2, ip
 2914              	.L184:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2915              		.loc 1 2017 48 discriminator 10 view .LVU926
 2916 035a 1143     		orrs	r1, r1, r2
 2917 035c 002F     		cmp	r7, #0
 2918 035e 46D1     		bne	.L186
ARM GAS  /tmp/ccI69vXK.s 			page 239


2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2919              		.loc 1 2017 48 discriminator 11 view .LVU927
 2920 0360 9B0E     		lsrs	r3, r3, #26
 2921 0362 0133     		adds	r3, r3, #1
 2922 0364 03F01F03 		and	r3, r3, #31
 2923 0368 03EB4303 		add	r3, r3, r3, lsl #1
 2924 036c 1B05     		lsls	r3, r3, #20
 2925              	.L187:
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 2926              		.loc 1 2016 7 view .LVU928
 2927 036e 1943     		orrs	r1, r1, r3
 2928              	.L189:
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 2929              		.loc 1 2016 7 discriminator 1 view .LVU929
 2930 0370 AA68     		ldr	r2, [r5, #8]
 2931 0372 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2932              	.LVL248:
 2933 0376 B3E7     		b	.L175
 2934              	.L176:
 2935              	.LVL249:
 2936              	.LBB326:
 2937              	.LBI326:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2938              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU930
 2939              	.LBB327:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2940              		.loc 3 1050 3 discriminator 2 view .LVU931
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2941              		.loc 3 1055 4 discriminator 2 view .LVU932
 2942              		.syntax unified
 2943              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2944 0378 93FAA3F2 		rbit r2, r3
 2945              	@ 0 "" 2
 2946              	.LVL250:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2947              		.loc 3 1068 3 discriminator 2 view .LVU933
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2948              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU934
 2949              		.thumb
 2950              		.syntax unified
 2951              	.LBE327:
 2952              	.LBE326:
 2953              	.LBB328:
 2954              	.LBI328:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2955              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU935
 2956              	.LBB329:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2957              		.loc 3 1089 3 discriminator 2 view .LVU936
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2958              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU937
 2959 037c D2B1     		cbz	r2, .L212
 2960              		.loc 3 1093 3 is_stmt 1 view .LVU938
 2961              		.loc 3 1093 10 is_stmt 0 view .LVU939
 2962 037e B2FA82F2 		clz	r2, r2
 2963              	.LVL251:
 2964              	.L178:
ARM GAS  /tmp/ccI69vXK.s 			page 240


 2965              		.loc 3 1093 10 view .LVU940
 2966              	.LBE329:
 2967              	.LBE328:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 2968              		.loc 1 2017 48 view .LVU941
 2969 0382 0132     		adds	r2, r2, #1
 2970 0384 02F01F02 		and	r2, r2, #31
 2971 0388 092A     		cmp	r2, #9
 2972 038a 8CBF     		ite	hi
 2973 038c 0022     		movhi	r2, #0
 2974 038e 0122     		movls	r2, #1
 2975 0390 CFE7     		b	.L177
 2976              	.L232:
 2977 0392 00BF     		.align	2
 2978              	.L231:
 2979 0394 00F0FF03 		.word	67104768
 2980 0398 FFFF0700 		.word	524287
 2981 039c 00007F40 		.word	1082064896
 2982 03a0 00000880 		.word	-2146959360
 2983 03a4 00030450 		.word	1342440192
 2984 03a8 000052C7 		.word	-950927360
 2985 03ac 000084CB 		.word	-880541696
 2986 03b0 01000080 		.word	-2147483647
 2987              	.LVL252:
 2988              	.L212:
 2989              	.LBB331:
 2990              	.LBB330:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2991              		.loc 3 1091 12 view .LVU942
 2992 03b4 2022     		movs	r2, #32
 2993              	.LVL253:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2994              		.loc 3 1091 12 view .LVU943
 2995 03b6 E4E7     		b	.L178
 2996              	.LVL254:
 2997              	.L180:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2998              		.loc 3 1091 12 view .LVU944
 2999              	.LBE330:
 3000              	.LBE331:
 3001              	.LBB332:
 3002              	.LBI332:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3003              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU945
 3004              	.LBB333:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3005              		.loc 3 1050 3 discriminator 4 view .LVU946
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3006              		.loc 3 1055 4 discriminator 4 view .LVU947
 3007              		.syntax unified
 3008              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3009 03b8 93FAA3F1 		rbit r1, r3
 3010              	@ 0 "" 2
 3011              	.LVL255:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3012              		.loc 3 1068 3 discriminator 4 view .LVU948
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccI69vXK.s 			page 241


 3013              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU949
 3014              		.thumb
 3015              		.syntax unified
 3016              	.LBE333:
 3017              	.LBE332:
 3018              	.LBB334:
 3019              	.LBI334:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3020              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU950
 3021              	.LBB335:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3022              		.loc 3 1089 3 discriminator 4 view .LVU951
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3023              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU952
 3024 03bc 31B1     		cbz	r1, .L213
 3025              		.loc 3 1093 3 is_stmt 1 view .LVU953
 3026              		.loc 3 1093 10 is_stmt 0 view .LVU954
 3027 03be B1FA81F1 		clz	r1, r1
 3028              	.LVL256:
 3029              	.L182:
 3030              		.loc 3 1093 10 view .LVU955
 3031              	.LBE335:
 3032              	.LBE334:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3033              		.loc 1 2017 48 view .LVU956
 3034 03c2 0131     		adds	r1, r1, #1
 3035 03c4 8906     		lsls	r1, r1, #26
 3036 03c6 01F0F841 		and	r1, r1, #2080374784
 3037 03ca BBE7     		b	.L181
 3038              	.LVL257:
 3039              	.L213:
 3040              	.LBB337:
 3041              	.LBB336:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3042              		.loc 3 1091 12 view .LVU957
 3043 03cc 2021     		movs	r1, #32
 3044              	.LVL258:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3045              		.loc 3 1091 12 view .LVU958
 3046 03ce F8E7     		b	.L182
 3047              	.LVL259:
 3048              	.L183:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3049              		.loc 3 1091 12 view .LVU959
 3050              	.LBE336:
 3051              	.LBE337:
 3052              	.LBB338:
 3053              	.LBI338:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3054              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU960
 3055              	.LBB339:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3056              		.loc 3 1050 3 discriminator 8 view .LVU961
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3057              		.loc 3 1055 4 discriminator 8 view .LVU962
 3058              		.syntax unified
 3059              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccI69vXK.s 			page 242


 3060 03d0 93FAA3F2 		rbit r2, r3
 3061              	@ 0 "" 2
 3062              	.LVL260:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3063              		.loc 3 1068 3 discriminator 8 view .LVU963
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3064              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU964
 3065              		.thumb
 3066              		.syntax unified
 3067              	.LBE339:
 3068              	.LBE338:
 3069              	.LBB340:
 3070              	.LBI340:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3071              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU965
 3072              	.LBB341:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3073              		.loc 3 1089 3 discriminator 8 view .LVU966
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3074              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU967
 3075 03d4 4AB1     		cbz	r2, .L214
 3076              		.loc 3 1093 3 is_stmt 1 view .LVU968
 3077              		.loc 3 1093 10 is_stmt 0 view .LVU969
 3078 03d6 B2FA82F2 		clz	r2, r2
 3079              	.LVL261:
 3080              	.L185:
 3081              		.loc 3 1093 10 view .LVU970
 3082              	.LBE341:
 3083              	.LBE340:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3084              		.loc 1 2017 48 view .LVU971
 3085 03da 0132     		adds	r2, r2, #1
 3086 03dc 02F01F02 		and	r2, r2, #31
 3087 03e0 4FF0010C 		mov	ip, #1
 3088 03e4 0CFA02F2 		lsl	r2, ip, r2
 3089 03e8 B7E7     		b	.L184
 3090              	.LVL262:
 3091              	.L214:
 3092              	.LBB343:
 3093              	.LBB342:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3094              		.loc 3 1091 12 view .LVU972
 3095 03ea 2022     		movs	r2, #32
 3096              	.LVL263:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3097              		.loc 3 1091 12 view .LVU973
 3098 03ec F5E7     		b	.L185
 3099              	.LVL264:
 3100              	.L186:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3101              		.loc 3 1091 12 view .LVU974
 3102              	.LBE342:
 3103              	.LBE343:
 3104              	.LBB344:
 3105              	.LBI344:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3106              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU975
ARM GAS  /tmp/ccI69vXK.s 			page 243


 3107              	.LBB345:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3108              		.loc 3 1050 3 discriminator 12 view .LVU976
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3109              		.loc 3 1055 4 discriminator 12 view .LVU977
 3110              		.syntax unified
 3111              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3112 03ee 93FAA3F3 		rbit r3, r3
 3113              	@ 0 "" 2
 3114              	.LVL265:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3115              		.loc 3 1068 3 discriminator 12 view .LVU978
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3116              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU979
 3117              		.thumb
 3118              		.syntax unified
 3119              	.LBE345:
 3120              	.LBE344:
 3121              	.LBB346:
 3122              	.LBI346:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3123              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU980
 3124              	.LBB347:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3125              		.loc 3 1089 3 discriminator 12 view .LVU981
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3126              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU982
 3127 03f2 43B1     		cbz	r3, .L215
 3128              		.loc 3 1093 3 is_stmt 1 view .LVU983
 3129              		.loc 3 1093 10 is_stmt 0 view .LVU984
 3130 03f4 B3FA83F3 		clz	r3, r3
 3131              	.LVL266:
 3132              	.L188:
 3133              		.loc 3 1093 10 view .LVU985
 3134              	.LBE347:
 3135              	.LBE346:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3136              		.loc 1 2017 48 view .LVU986
 3137 03f8 0133     		adds	r3, r3, #1
 3138 03fa 03F01F03 		and	r3, r3, #31
 3139 03fe 03EB4303 		add	r3, r3, r3, lsl #1
 3140 0402 1B05     		lsls	r3, r3, #20
 3141 0404 B3E7     		b	.L187
 3142              	.LVL267:
 3143              	.L215:
 3144              	.LBB349:
 3145              	.LBB348:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3146              		.loc 3 1091 12 view .LVU987
 3147 0406 2023     		movs	r3, #32
 3148              	.LVL268:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3149              		.loc 3 1091 12 view .LVU988
 3150 0408 F6E7     		b	.L188
 3151              	.LVL269:
 3152              	.L179:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/ccI69vXK.s 			page 244


 3153              		.loc 3 1091 12 view .LVU989
 3154              	.LBE348:
 3155              	.LBE349:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3156              		.loc 1 2017 48 view .LVU990
 3157 040a E7B9     		cbnz	r7, .L190
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3158              		.loc 1 2017 48 discriminator 13 view .LVU991
 3159 040c 990E     		lsrs	r1, r3, #26
 3160 040e 0131     		adds	r1, r1, #1
 3161 0410 8906     		lsls	r1, r1, #26
 3162 0412 01F0F841 		and	r1, r1, #2080374784
 3163              	.L191:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3164              		.loc 1 2017 48 discriminator 16 view .LVU992
 3165 0416 17BB     		cbnz	r7, .L193
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3166              		.loc 1 2017 48 discriminator 17 view .LVU993
 3167 0418 4FEA936C 		lsr	ip, r3, #26
 3168 041c 0CF1010C 		add	ip, ip, #1
 3169 0420 0CF01F0C 		and	ip, ip, #31
 3170 0424 0122     		movs	r2, #1
 3171 0426 02FA0CF2 		lsl	r2, r2, ip
 3172              	.L194:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3173              		.loc 1 2017 48 discriminator 20 view .LVU994
 3174 042a 1143     		orrs	r1, r1, r2
 3175 042c 37BB     		cbnz	r7, .L196
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3176              		.loc 1 2017 48 discriminator 21 view .LVU995
 3177 042e 9B0E     		lsrs	r3, r3, #26
 3178 0430 0133     		adds	r3, r3, #1
 3179 0432 03F01F03 		and	r3, r3, #31
 3180 0436 03EB4303 		add	r3, r3, r3, lsl #1
 3181 043a 1E3B     		subs	r3, r3, #30
 3182 043c 1B05     		lsls	r3, r3, #20
 3183 043e 43F00073 		orr	r3, r3, #33554432
 3184              	.L197:
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 3185              		.loc 1 2016 7 discriminator 2 view .LVU996
 3186 0442 1943     		orrs	r1, r1, r3
 3187 0444 94E7     		b	.L189
 3188              	.L190:
 3189              	.LVL270:
 3190              	.LBB350:
 3191              	.LBI350:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3192              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU997
 3193              	.LBB351:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3194              		.loc 3 1050 3 discriminator 14 view .LVU998
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3195              		.loc 3 1055 4 discriminator 14 view .LVU999
 3196              		.syntax unified
 3197              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3198 0446 93FAA3F1 		rbit r1, r3
 3199              	@ 0 "" 2
ARM GAS  /tmp/ccI69vXK.s 			page 245


 3200              	.LVL271:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3201              		.loc 3 1068 3 discriminator 14 view .LVU1000
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3202              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU1001
 3203              		.thumb
 3204              		.syntax unified
 3205              	.LBE351:
 3206              	.LBE350:
 3207              	.LBB352:
 3208              	.LBI352:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3209              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU1002
 3210              	.LBB353:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3211              		.loc 3 1089 3 discriminator 14 view .LVU1003
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3212              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU1004
 3213 044a 31B1     		cbz	r1, .L216
 3214              		.loc 3 1093 3 is_stmt 1 view .LVU1005
 3215              		.loc 3 1093 10 is_stmt 0 view .LVU1006
 3216 044c B1FA81F1 		clz	r1, r1
 3217              	.LVL272:
 3218              	.L192:
 3219              		.loc 3 1093 10 view .LVU1007
 3220              	.LBE353:
 3221              	.LBE352:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3222              		.loc 1 2017 48 view .LVU1008
 3223 0450 0131     		adds	r1, r1, #1
 3224 0452 8906     		lsls	r1, r1, #26
 3225 0454 01F0F841 		and	r1, r1, #2080374784
 3226 0458 DDE7     		b	.L191
 3227              	.LVL273:
 3228              	.L216:
 3229              	.LBB355:
 3230              	.LBB354:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3231              		.loc 3 1091 12 view .LVU1009
 3232 045a 2021     		movs	r1, #32
 3233              	.LVL274:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3234              		.loc 3 1091 12 view .LVU1010
 3235 045c F8E7     		b	.L192
 3236              	.LVL275:
 3237              	.L193:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3238              		.loc 3 1091 12 view .LVU1011
 3239              	.LBE354:
 3240              	.LBE355:
 3241              	.LBB356:
 3242              	.LBI356:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3243              		.loc 3 1048 31 is_stmt 1 discriminator 18 view .LVU1012
 3244              	.LBB357:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3245              		.loc 3 1050 3 discriminator 18 view .LVU1013
ARM GAS  /tmp/ccI69vXK.s 			page 246


1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3246              		.loc 3 1055 4 discriminator 18 view .LVU1014
 3247              		.syntax unified
 3248              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3249 045e 93FAA3F2 		rbit r2, r3
 3250              	@ 0 "" 2
 3251              	.LVL276:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3252              		.loc 3 1068 3 discriminator 18 view .LVU1015
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3253              		.loc 3 1068 3 is_stmt 0 discriminator 18 view .LVU1016
 3254              		.thumb
 3255              		.syntax unified
 3256              	.LBE357:
 3257              	.LBE356:
 3258              	.LBB358:
 3259              	.LBI358:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3260              		.loc 3 1078 30 is_stmt 1 discriminator 18 view .LVU1017
 3261              	.LBB359:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3262              		.loc 3 1089 3 discriminator 18 view .LVU1018
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3263              		.loc 3 1089 6 is_stmt 0 discriminator 18 view .LVU1019
 3264 0462 4AB1     		cbz	r2, .L217
 3265              		.loc 3 1093 3 is_stmt 1 view .LVU1020
 3266              		.loc 3 1093 10 is_stmt 0 view .LVU1021
 3267 0464 B2FA82F2 		clz	r2, r2
 3268              	.LVL277:
 3269              	.L195:
 3270              		.loc 3 1093 10 view .LVU1022
 3271              	.LBE359:
 3272              	.LBE358:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3273              		.loc 1 2017 48 view .LVU1023
 3274 0468 0132     		adds	r2, r2, #1
 3275 046a 02F01F02 		and	r2, r2, #31
 3276 046e 4FF0010C 		mov	ip, #1
 3277 0472 0CFA02F2 		lsl	r2, ip, r2
 3278 0476 D8E7     		b	.L194
 3279              	.LVL278:
 3280              	.L217:
 3281              	.LBB361:
 3282              	.LBB360:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3283              		.loc 3 1091 12 view .LVU1024
 3284 0478 2022     		movs	r2, #32
 3285              	.LVL279:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3286              		.loc 3 1091 12 view .LVU1025
 3287 047a F5E7     		b	.L195
 3288              	.LVL280:
 3289              	.L196:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3290              		.loc 3 1091 12 view .LVU1026
 3291              	.LBE360:
 3292              	.LBE361:
ARM GAS  /tmp/ccI69vXK.s 			page 247


 3293              	.LBB362:
 3294              	.LBI362:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3295              		.loc 3 1048 31 is_stmt 1 discriminator 22 view .LVU1027
 3296              	.LBB363:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3297              		.loc 3 1050 3 discriminator 22 view .LVU1028
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3298              		.loc 3 1055 4 discriminator 22 view .LVU1029
 3299              		.syntax unified
 3300              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3301 047c 93FAA3F3 		rbit r3, r3
 3302              	@ 0 "" 2
 3303              	.LVL281:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3304              		.loc 3 1068 3 discriminator 22 view .LVU1030
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3305              		.loc 3 1068 3 is_stmt 0 discriminator 22 view .LVU1031
 3306              		.thumb
 3307              		.syntax unified
 3308              	.LBE363:
 3309              	.LBE362:
 3310              	.LBB364:
 3311              	.LBI364:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3312              		.loc 3 1078 30 is_stmt 1 discriminator 22 view .LVU1032
 3313              	.LBB365:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3314              		.loc 3 1089 3 discriminator 22 view .LVU1033
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3315              		.loc 3 1089 6 is_stmt 0 discriminator 22 view .LVU1034
 3316 0480 5BB1     		cbz	r3, .L218
 3317              		.loc 3 1093 3 is_stmt 1 view .LVU1035
 3318              		.loc 3 1093 10 is_stmt 0 view .LVU1036
 3319 0482 B3FA83F3 		clz	r3, r3
 3320              	.LVL282:
 3321              	.L198:
 3322              		.loc 3 1093 10 view .LVU1037
 3323              	.LBE365:
 3324              	.LBE364:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 3325              		.loc 1 2017 48 view .LVU1038
 3326 0486 0133     		adds	r3, r3, #1
 3327 0488 03F01F03 		and	r3, r3, #31
 3328 048c 03EB4303 		add	r3, r3, r3, lsl #1
 3329 0490 1E3B     		subs	r3, r3, #30
 3330 0492 1B05     		lsls	r3, r3, #20
 3331 0494 43F00073 		orr	r3, r3, #33554432
 3332 0498 D3E7     		b	.L197
 3333              	.LVL283:
 3334              	.L218:
 3335              	.LBB367:
 3336              	.LBB366:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3337              		.loc 3 1091 12 view .LVU1039
 3338 049a 2023     		movs	r3, #32
 3339              	.LVL284:
ARM GAS  /tmp/ccI69vXK.s 			page 248


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3340              		.loc 3 1091 12 view .LVU1040
 3341 049c F3E7     		b	.L198
 3342              	.LVL285:
 3343              	.L228:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3344              		.loc 3 1091 12 view .LVU1041
 3345              	.LBE366:
 3346              	.LBE367:
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 3347              		.loc 1 2039 9 view .LVU1042
 3348 049e 12F4000F 		tst	r2, #8388608
 3349 04a2 7FF429AF 		bne	.L200
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3350              		.loc 1 2041 7 is_stmt 1 view .LVU1043
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3351              		.loc 1 2041 11 is_stmt 0 view .LVU1044
 3352 04a6 2268     		ldr	r2, [r4]
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3353              		.loc 1 2041 10 view .LVU1045
 3354 04a8 224B     		ldr	r3, .L233
 3355 04aa 9A42     		cmp	r2, r3
 3356 04ac 7FF42CAF 		bne	.L199
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
 3357              		.loc 1 2043 9 is_stmt 1 view .LVU1046
 3358 04b0 40F40000 		orr	r0, r0, #8388608
 3359              	.LVL286:
 3360              	.LBB368:
 3361              	.LBI368:
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3362              		.loc 2 3252 22 view .LVU1047
 3363              	.LBB369:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3364              		.loc 2 3254 3 view .LVU1048
 3365 04b4 204A     		ldr	r2, .L233+4
 3366 04b6 9368     		ldr	r3, [r2, #8]
 3367 04b8 23F0E073 		bic	r3, r3, #29360128
 3368 04bc 1843     		orrs	r0, r0, r3
 3369              	.LVL287:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3370              		.loc 2 3254 3 is_stmt 0 view .LVU1049
 3371 04be 9060     		str	r0, [r2, #8]
 3372              	.LVL288:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3373              		.loc 2 3254 3 view .LVU1050
 3374              	.LBE369:
 3375              	.LBE368:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            * (((SystemCoreClock / (100000UL * 2UL)) + 1UL) + 1UL));
 3376              		.loc 1 2051 9 is_stmt 1 view .LVU1051
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3377              		.loc 1 2052 49 is_stmt 0 view .LVU1052
 3378 04c0 1E4B     		ldr	r3, .L233+8
 3379 04c2 1B68     		ldr	r3, [r3]
 3380 04c4 9B09     		lsrs	r3, r3, #6
 3381 04c6 1E4A     		ldr	r2, .L233+12
 3382 04c8 A2FB0323 		umull	r2, r3, r2, r3
 3383 04cc 9B09     		lsrs	r3, r3, #6
ARM GAS  /tmp/ccI69vXK.s 			page 249


2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3384              		.loc 1 2052 28 view .LVU1053
 3385 04ce 03EB4303 		add	r3, r3, r3, lsl #1
 3386 04d2 9B00     		lsls	r3, r3, #2
 3387 04d4 1833     		adds	r3, r3, #24
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            * (((SystemCoreClock / (100000UL * 2UL)) + 1UL) + 1UL));
 3388              		.loc 1 2051 25 view .LVU1054
 3389 04d6 0193     		str	r3, [sp, #4]
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 3390              		.loc 1 2053 9 is_stmt 1 view .LVU1055
 3391              	.L201:
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 3392              		.loc 1 2053 32 view .LVU1056
 3393 04d8 019B     		ldr	r3, [sp, #4]
 3394 04da 002B     		cmp	r3, #0
 3395 04dc 3FF414AF 		beq	.L199
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 3396              		.loc 1 2055 11 view .LVU1057
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 3397              		.loc 1 2055 26 is_stmt 0 view .LVU1058
 3398 04e0 019B     		ldr	r3, [sp, #4]
 3399 04e2 013B     		subs	r3, r3, #1
 3400 04e4 0193     		str	r3, [sp, #4]
 3401 04e6 F7E7     		b	.L201
 3402              	.LVL289:
 3403              	.L229:
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 3404              		.loc 1 2060 14 view .LVU1059
 3405 04e8 12F0807F 		tst	r2, #16777216
 3406 04ec 7FF408AF 		bne	.L203
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3407              		.loc 1 2062 7 is_stmt 1 view .LVU1060
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3408              		.loc 1 2062 11 is_stmt 0 view .LVU1061
 3409 04f0 2268     		ldr	r2, [r4]
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3410              		.loc 1 2062 10 view .LVU1062
 3411 04f2 104B     		ldr	r3, .L233
 3412 04f4 9A42     		cmp	r2, r3
 3413 04f6 7FF407AF 		bne	.L199
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3414              		.loc 1 2064 9 is_stmt 1 view .LVU1063
 3415 04fa 40F08070 		orr	r0, r0, #16777216
 3416              	.LVL290:
 3417              	.LBB370:
 3418              	.LBI370:
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3419              		.loc 2 3252 22 view .LVU1064
 3420              	.LBB371:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3421              		.loc 2 3254 3 view .LVU1065
 3422 04fe 0E4A     		ldr	r2, .L233+4
 3423 0500 9368     		ldr	r3, [r2, #8]
 3424 0502 23F0E073 		bic	r3, r3, #29360128
 3425 0506 1843     		orrs	r0, r0, r3
 3426              	.LVL291:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccI69vXK.s 			page 250


 3427              		.loc 2 3254 3 is_stmt 0 view .LVU1066
 3428 0508 9060     		str	r0, [r2, #8]
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3429              		.loc 2 3255 1 view .LVU1067
 3430 050a FDE6     		b	.L199
 3431              	.LVL292:
 3432              	.L230:
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3433              		.loc 2 3255 1 view .LVU1068
 3434              	.LBE371:
 3435              	.LBE370:
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 3436              		.loc 1 2069 14 view .LVU1069
 3437 050c 12F4800F 		tst	r2, #4194304
 3438 0510 7FF4FAAE 		bne	.L199
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3439              		.loc 1 2071 7 is_stmt 1 view .LVU1070
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3440              		.loc 1 2071 11 is_stmt 0 view .LVU1071
 3441 0514 2268     		ldr	r2, [r4]
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3442              		.loc 1 2071 10 view .LVU1072
 3443 0516 074B     		ldr	r3, .L233
 3444 0518 9A42     		cmp	r2, r3
 3445 051a 7FF4F5AE 		bne	.L199
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 3446              		.loc 1 2073 9 is_stmt 1 view .LVU1073
 3447 051e 40F48003 		orr	r3, r0, #4194304
 3448              	.LVL293:
 3449              	.LBB372:
 3450              	.LBI372:
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3451              		.loc 2 3252 22 view .LVU1074
 3452              	.LBB373:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3453              		.loc 2 3254 3 view .LVU1075
 3454 0522 0549     		ldr	r1, .L233+4
 3455 0524 8A68     		ldr	r2, [r1, #8]
 3456 0526 22F0E072 		bic	r2, r2, #29360128
 3457 052a 1343     		orrs	r3, r3, r2
 3458              	.LVL294:
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3459              		.loc 2 3254 3 is_stmt 0 view .LVU1076
 3460 052c 8B60     		str	r3, [r1, #8]
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3461              		.loc 2 3255 1 view .LVU1077
 3462 052e EBE6     		b	.L199
 3463              	.LVL295:
 3464              	.L204:
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3465              		.loc 2 3255 1 view .LVU1078
 3466              	.LBE373:
 3467              	.LBE372:
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 3468              		.loc 1 1707 3 view .LVU1079
 3469 0530 0226     		movs	r6, #2
 3470 0532 ECE6     		b	.L139
ARM GAS  /tmp/ccI69vXK.s 			page 251


 3471              	.L234:
 3472              		.align	2
 3473              	.L233:
 3474 0534 00000450 		.word	1342439424
 3475 0538 00030450 		.word	1342440192
 3476 053c 00000000 		.word	SystemCoreClock
 3477 0540 632D3E05 		.word	87960931
 3478              		.cfi_endproc
 3479              	.LFE305:
 3481              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 3482              		.align	1
 3483              		.global	HAL_ADCEx_EnableInjectedQueue
 3484              		.syntax unified
 3485              		.thumb
 3486              		.thumb_func
 3488              	HAL_ADCEx_EnableInjectedQueue:
 3489              	.LVL296:
 3490              	.LFB306:
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         the ADCs.
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param pMultimode Structure of ADC multimode configuration
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, const ADC_MultiModeType
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_hadc_slave_conversion_on_going;
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(pMultimode->Mode));
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (pMultimode->Mode != ADC_MODE_INDEPENDENT)
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MULTIMODE(pMultimode->DMAAccessMode));
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(pMultimode->TwoSamplingDelay));
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Temporary handle minimum initialization */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
ARM GAS  /tmp/ccI69vXK.s 			page 252


2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hadc_slave.Instance == NULL)
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process unlocked */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_ERROR;
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instance);
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_hadc_slave_conversion_on_going == 0UL))
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (pMultimode->Mode != ADC_MODE_INDEPENDENT)
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  pMultimode->DMAAccessMode |
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                     */
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                               */
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                              */
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                                 */
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                                 */
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay    */
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    range                                                                 */
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    pMultimode->Mode |
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    pMultimode->TwoSamplingDelay
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                   );
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
ARM GAS  /tmp/ccI69vXK.s 			page 253


2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3491              		.loc 1 2225 1 is_stmt 1 view -0
 3492              		.cfi_startproc
 3493              		@ args = 0, pretend = 0, frame = 0
 3494              		@ frame_needed = 0, uses_anonymous_args = 0
 3495              		@ link register save eliminated.
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3496              		.loc 1 2226 3 view .LVU1081
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3497              		.loc 1 2227 3 view .LVU1082
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3498              		.loc 1 2228 3 view .LVU1083
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3499              		.loc 1 2231 3 view .LVU1084
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 254


2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3500              		.loc 1 2233 3 view .LVU1085
 3501              		.loc 1 2233 79 is_stmt 0 view .LVU1086
 3502 0000 0168     		ldr	r1, [r0]
 3503              	.LVL297:
 3504              	.LBB374:
 3505              	.LBI374:
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3506              		.loc 2 6948 26 is_stmt 1 view .LVU1087
 3507              	.LBB375:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3508              		.loc 2 6950 3 view .LVU1088
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3509              		.loc 2 6950 12 is_stmt 0 view .LVU1089
 3510 0002 8B68     		ldr	r3, [r1, #8]
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3511              		.loc 2 6950 74 view .LVU1090
 3512 0004 13F00403 		ands	r3, r3, #4
 3513 0008 00D0     		beq	.L236
 3514 000a 0123     		movs	r3, #1
 3515              	.L236:
 3516              	.LVL298:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3517              		.loc 2 6950 74 view .LVU1091
 3518              	.LBE375:
 3519              	.LBE374:
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3520              		.loc 1 2234 3 is_stmt 1 view .LVU1092
 3521              	.LBB376:
 3522              	.LBI376:
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3523              		.loc 2 7132 26 view .LVU1093
 3524              	.LBB377:
 3525              		.loc 2 7134 3 view .LVU1094
 3526              		.loc 2 7134 12 is_stmt 0 view .LVU1095
 3527 000c 8A68     		ldr	r2, [r1, #8]
 3528              		.loc 2 7134 76 view .LVU1096
 3529 000e 12F00802 		ands	r2, r2, #8
 3530 0012 00D0     		beq	.L237
 3531 0014 0122     		movs	r2, #1
 3532              	.L237:
 3533              	.LVL299:
 3534              		.loc 2 7134 76 view .LVU1097
 3535              	.LBE377:
 3536              	.LBE376:
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3537              		.loc 1 2237 3 is_stmt 1 view .LVU1098
 3538              		.loc 1 2237 6 is_stmt 0 view .LVU1099
 3539 0016 53B9     		cbnz	r3, .L239
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3540              		.loc 1 2238 7 view .LVU1100
 3541 0018 5AB9     		cbnz	r2, .L240
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
ARM GAS  /tmp/ccI69vXK.s 			page 255


 3542              		.loc 1 2241 5 is_stmt 1 view .LVU1101
 3543 001a CB68     		ldr	r3, [r1, #12]
 3544              	.LVL300:
 3545              		.loc 1 2241 5 is_stmt 0 view .LVU1102
 3546 001c 23F00043 		bic	r3, r3, #-2147483648
 3547 0020 CB60     		str	r3, [r1, #12]
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 3548              		.loc 1 2244 5 is_stmt 1 view .LVU1103
 3549 0022 436D     		ldr	r3, [r0, #84]
 3550 0024 23F48043 		bic	r3, r3, #16384
 3551 0028 4365     		str	r3, [r0, #84]
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3552              		.loc 1 2246 5 view .LVU1104
 3553              	.LVL301:
 3554              		.loc 1 2246 20 is_stmt 0 view .LVU1105
 3555 002a 0020     		movs	r0, #0
 3556              	.LVL302:
 3557              		.loc 1 2246 20 view .LVU1106
 3558 002c 7047     		bx	lr
 3559              	.LVL303:
 3560              	.L239:
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3561              		.loc 1 2250 20 view .LVU1107
 3562 002e 0120     		movs	r0, #1
 3563              	.LVL304:
 3564              		.loc 1 2250 20 view .LVU1108
 3565 0030 7047     		bx	lr
 3566              	.LVL305:
 3567              	.L240:
 3568              		.loc 1 2250 20 view .LVU1109
 3569 0032 0120     		movs	r0, #1
 3570              	.LVL306:
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3571              		.loc 1 2253 3 is_stmt 1 view .LVU1110
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3572              		.loc 1 2254 1 is_stmt 0 view .LVU1111
 3573 0034 7047     		bx	lr
 3574              		.cfi_endproc
 3575              	.LFE306:
 3577              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 3578              		.align	1
 3579              		.global	HAL_ADCEx_DisableInjectedQueue
 3580              		.syntax unified
 3581              		.thumb
 3582              		.thumb_func
 3584              	HAL_ADCEx_DisableInjectedQueue:
 3585              	.LVL307:
 3586              	.LFB307:
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 256


2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3587              		.loc 1 2266 1 is_stmt 1 view -0
 3588              		.cfi_startproc
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
 3591              		@ link register save eliminated.
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3592              		.loc 1 2267 3 view .LVU1113
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3593              		.loc 1 2268 3 view .LVU1114
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3594              		.loc 1 2269 3 view .LVU1115
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3595              		.loc 1 2272 3 view .LVU1116
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3596              		.loc 1 2274 3 view .LVU1117
 3597              		.loc 1 2274 79 is_stmt 0 view .LVU1118
 3598 0000 0168     		ldr	r1, [r0]
 3599              	.LVL308:
 3600              	.LBB378:
 3601              	.LBI378:
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3602              		.loc 2 6948 26 is_stmt 1 view .LVU1119
 3603              	.LBB379:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3604              		.loc 2 6950 3 view .LVU1120
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3605              		.loc 2 6950 12 is_stmt 0 view .LVU1121
 3606 0002 8B68     		ldr	r3, [r1, #8]
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3607              		.loc 2 6950 74 view .LVU1122
 3608 0004 13F00403 		ands	r3, r3, #4
 3609 0008 00D0     		beq	.L242
 3610 000a 0123     		movs	r3, #1
 3611              	.L242:
 3612              	.LVL309:
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3613              		.loc 2 6950 74 view .LVU1123
 3614              	.LBE379:
 3615              	.LBE378:
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3616              		.loc 1 2275 3 is_stmt 1 view .LVU1124
 3617              	.LBB380:
 3618              	.LBI380:
ARM GAS  /tmp/ccI69vXK.s 			page 257


7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3619              		.loc 2 7132 26 view .LVU1125
 3620              	.LBB381:
 3621              		.loc 2 7134 3 view .LVU1126
 3622              		.loc 2 7134 12 is_stmt 0 view .LVU1127
 3623 000c 8A68     		ldr	r2, [r1, #8]
 3624              		.loc 2 7134 76 view .LVU1128
 3625 000e 12F00802 		ands	r2, r2, #8
 3626 0012 00D0     		beq	.L243
 3627 0014 0122     		movs	r2, #1
 3628              	.L243:
 3629              	.LVL310:
 3630              		.loc 2 7134 76 view .LVU1129
 3631              	.LBE381:
 3632              	.LBE380:
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3633              		.loc 1 2278 3 is_stmt 1 view .LVU1130
 3634              		.loc 1 2278 6 is_stmt 0 view .LVU1131
 3635 0016 53B9     		cbnz	r3, .L245
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3636              		.loc 1 2279 7 view .LVU1132
 3637 0018 5AB9     		cbnz	r2, .L246
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
 3638              		.loc 1 2282 5 is_stmt 1 view .LVU1133
 3639              	.LVL311:
 3640              	.LBB382:
 3641              	.LBI382:
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3642              		.loc 2 5080 22 view .LVU1134
 3643              	.LBB383:
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3644              		.loc 2 5082 3 view .LVU1135
 3645 001a CB68     		ldr	r3, [r1, #12]
 3646              	.LVL312:
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3647              		.loc 2 5082 3 is_stmt 0 view .LVU1136
 3648 001c 23F00043 		bic	r3, r3, #-2147483648
 3649 0020 23F40013 		bic	r3, r3, #2097152
 3650 0024 43F00043 		orr	r3, r3, #-2147483648
 3651 0028 CB60     		str	r3, [r1, #12]
 3652              	.LVL313:
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3653              		.loc 2 5082 3 view .LVU1137
 3654              	.LBE383:
 3655              	.LBE382:
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3656              		.loc 1 2283 5 is_stmt 1 view .LVU1138
 3657              		.loc 1 2283 20 is_stmt 0 view .LVU1139
 3658 002a 0020     		movs	r0, #0
 3659              	.LVL314:
 3660              		.loc 1 2283 20 view .LVU1140
 3661 002c 7047     		bx	lr
 3662              	.LVL315:
ARM GAS  /tmp/ccI69vXK.s 			page 258


 3663              	.L245:
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3664              		.loc 1 2287 20 view .LVU1141
 3665 002e 0120     		movs	r0, #1
 3666              	.LVL316:
 3667              		.loc 1 2287 20 view .LVU1142
 3668 0030 7047     		bx	lr
 3669              	.LVL317:
 3670              	.L246:
 3671              		.loc 1 2287 20 view .LVU1143
 3672 0032 0120     		movs	r0, #1
 3673              	.LVL318:
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3674              		.loc 1 2290 3 is_stmt 1 view .LVU1144
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3675              		.loc 1 2291 1 is_stmt 0 view .LVU1145
 3676 0034 7047     		bx	lr
 3677              		.cfi_endproc
 3678              	.LFE307:
 3680              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 3681              		.align	1
 3682              		.global	HAL_ADCEx_DisableVoltageRegulator
 3683              		.syntax unified
 3684              		.thumb
 3685              		.thumb_func
 3687              	HAL_ADCEx_DisableVoltageRegulator:
 3688              	.LVL319:
 3689              	.LFB308:
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3690              		.loc 1 2303 1 is_stmt 1 view -0
 3691              		.cfi_startproc
 3692              		@ args = 0, pretend = 0, frame = 0
 3693              		@ frame_needed = 0, uses_anonymous_args = 0
 3694              		@ link register save eliminated.
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3695              		.loc 1 2304 3 view .LVU1147
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3696              		.loc 1 2307 3 view .LVU1148
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccI69vXK.s 			page 259


2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3697              		.loc 1 2310 3 view .LVU1149
 3698              		.loc 1 2310 28 is_stmt 0 view .LVU1150
 3699 0000 0368     		ldr	r3, [r0]
 3700              	.LVL320:
 3701              	.LBB384:
 3702              	.LBI384:
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3703              		.loc 2 6826 26 is_stmt 1 view .LVU1151
 3704              	.LBB385:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3705              		.loc 2 6828 3 view .LVU1152
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3706              		.loc 2 6828 12 is_stmt 0 view .LVU1153
 3707 0002 9A68     		ldr	r2, [r3, #8]
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3708              		.loc 2 6828 68 view .LVU1154
 3709 0004 12F0010F 		tst	r2, #1
 3710 0008 07D1     		bne	.L249
 3711              	.LVL321:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3712              		.loc 2 6828 68 view .LVU1155
 3713              	.LBE385:
 3714              	.LBE384:
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 3715              		.loc 1 2312 5 is_stmt 1 view .LVU1156
 3716              	.LBB386:
 3717              	.LBI386:
6755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3718              		.loc 2 6755 22 view .LVU1157
 3719              	.LBB387:
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3720              		.loc 2 6757 3 view .LVU1158
 3721 000a 9A68     		ldr	r2, [r3, #8]
 3722 000c 22F01042 		bic	r2, r2, #-1879048192
 3723 0010 22F03F02 		bic	r2, r2, #63
 3724 0014 9A60     		str	r2, [r3, #8]
 3725              	.LVL322:
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3726              		.loc 2 6757 3 is_stmt 0 view .LVU1159
 3727              	.LBE387:
 3728              	.LBE386:
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3729              		.loc 1 2313 5 is_stmt 1 view .LVU1160
 3730              		.loc 1 2313 20 is_stmt 0 view .LVU1161
 3731 0016 0020     		movs	r0, #0
 3732              	.LVL323:
 3733              		.loc 1 2313 20 view .LVU1162
 3734 0018 7047     		bx	lr
 3735              	.LVL324:
 3736              	.L249:
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /tmp/ccI69vXK.s 			page 260


 3737              		.loc 1 2317 20 view .LVU1163
 3738 001a 0120     		movs	r0, #1
 3739              	.LVL325:
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3740              		.loc 1 2320 3 is_stmt 1 view .LVU1164
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3741              		.loc 1 2321 1 is_stmt 0 view .LVU1165
 3742 001c 7047     		bx	lr
 3743              		.cfi_endproc
 3744              	.LFE308:
 3746              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 3747              		.align	1
 3748              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 3749              		.syntax unified
 3750              		.thumb
 3751              		.thumb_func
 3753              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 3754              	.LVL326:
 3755              	.LFB309:
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         entering stop modes.
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         calibration is lost.
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         saved calibration factor.
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3756              		.loc 1 2340 1 is_stmt 1 view -0
 3757              		.cfi_startproc
 3758              		@ args = 0, pretend = 0, frame = 0
 3759              		@ frame_needed = 0, uses_anonymous_args = 0
 3760              		@ link register save eliminated.
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3761              		.loc 1 2341 3 view .LVU1167
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3762              		.loc 1 2344 3 view .LVU1168
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3763              		.loc 1 2347 3 view .LVU1169
 3764              		.loc 1 2347 28 is_stmt 0 view .LVU1170
 3765 0000 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccI69vXK.s 			page 261


 3766              	.LVL327:
 3767              	.LBB388:
 3768              	.LBI388:
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3769              		.loc 2 6826 26 is_stmt 1 view .LVU1171
 3770              	.LBB389:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3771              		.loc 2 6828 3 view .LVU1172
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3772              		.loc 2 6828 12 is_stmt 0 view .LVU1173
 3773 0002 9368     		ldr	r3, [r2, #8]
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3774              		.loc 2 6828 68 view .LVU1174
 3775 0004 13F0010F 		tst	r3, #1
 3776 0008 09D1     		bne	.L252
 3777              	.LVL328:
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3778              		.loc 2 6828 68 view .LVU1175
 3779              	.LBE389:
 3780              	.LBE388:
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
 3781              		.loc 1 2349 5 is_stmt 1 view .LVU1176
 3782              	.LBB390:
 3783              	.LBI390:
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3784              		.loc 2 6680 22 view .LVU1177
 3785              	.LBB391:
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3786              		.loc 2 6685 3 view .LVU1178
 3787 000a 9368     		ldr	r3, [r2, #8]
 3788 000c 23F02043 		bic	r3, r3, #-1610612736
 3789 0010 23F03F03 		bic	r3, r3, #63
 3790 0014 43F00053 		orr	r3, r3, #536870912
 3791 0018 9360     		str	r3, [r2, #8]
 3792              	.LVL329:
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3793              		.loc 2 6685 3 is_stmt 0 view .LVU1179
 3794              	.LBE391:
 3795              	.LBE390:
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3796              		.loc 1 2350 5 is_stmt 1 view .LVU1180
 3797              		.loc 1 2350 20 is_stmt 0 view .LVU1181
 3798 001a 0020     		movs	r0, #0
 3799              	.LVL330:
 3800              		.loc 1 2350 20 view .LVU1182
 3801 001c 7047     		bx	lr
 3802              	.LVL331:
 3803              	.L252:
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3804              		.loc 1 2354 20 view .LVU1183
 3805 001e 0120     		movs	r0, #1
 3806              	.LVL332:
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/ccI69vXK.s 			page 262


2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3807              		.loc 1 2357 3 is_stmt 1 view .LVU1184
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3808              		.loc 1 2358 1 is_stmt 0 view .LVU1185
 3809 0020 7047     		bx	lr
 3810              		.cfi_endproc
 3811              	.LFE309:
 3813              		.text
 3814              	.Letext0:
 3815              		.file 4 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 3816              		.file 5 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 3817              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 3818              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3819              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3820              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3821              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 3822              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 3823              		.file 12 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 3824              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccI69vXK.s 			page 263


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc_ex.c
     /tmp/ccI69vXK.s:21     .text.LL_ADC_SetCalibrationFactor:0000000000000000 $t
     /tmp/ccI69vXK.s:26     .text.LL_ADC_SetCalibrationFactor:0000000000000000 LL_ADC_SetCalibrationFactor
     /tmp/ccI69vXK.s:54     .text.LL_ADC_SetChannelSamplingTime:0000000000000000 $t
     /tmp/ccI69vXK.s:59     .text.LL_ADC_SetChannelSamplingTime:0000000000000000 LL_ADC_SetChannelSamplingTime
     /tmp/ccI69vXK.s:104    .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/ccI69vXK.s:110    .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/ccI69vXK.s:270    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
     /tmp/ccI69vXK.s:276    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
     /tmp/ccI69vXK.s:317    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
     /tmp/ccI69vXK.s:323    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
     /tmp/ccI69vXK.s:462    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/ccI69vXK.s:468    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/ccI69vXK.s:651    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/ccI69vXK.s:657    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/ccI69vXK.s:757    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/ccI69vXK.s:763    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/ccI69vXK.s:999    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/ccI69vXK.s:1005   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/ccI69vXK.s:1233   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/ccI69vXK.s:1239   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/ccI69vXK.s:1344   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/ccI69vXK.s:1350   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/ccI69vXK.s:1413   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/ccI69vXK.s:1419   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/ccI69vXK.s:1434   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
     /tmp/ccI69vXK.s:1440   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/ccI69vXK.s:1455   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
     /tmp/ccI69vXK.s:1461   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/ccI69vXK.s:1476   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
     /tmp/ccI69vXK.s:1482   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/ccI69vXK.s:1497   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 $t
     /tmp/ccI69vXK.s:1503   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/ccI69vXK.s:1518   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
     /tmp/ccI69vXK.s:1524   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
     /tmp/ccI69vXK.s:1627   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
     /tmp/ccI69vXK.s:1633   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
     /tmp/ccI69vXK.s:1741   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
     /tmp/ccI69vXK.s:1747   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
     /tmp/ccI69vXK.s:1896   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/ccI69vXK.s:1902   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/ccI69vXK.s:2979   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000394 $d
     /tmp/ccI69vXK.s:2992   .text.HAL_ADCEx_InjectedConfigChannel:00000000000003b4 $t
     /tmp/ccI69vXK.s:3474   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000534 $d
     /tmp/ccI69vXK.s:3482   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 $t
     /tmp/ccI69vXK.s:3488   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/ccI69vXK.s:3578   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 $t
     /tmp/ccI69vXK.s:3584   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/ccI69vXK.s:3681   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 $t
     /tmp/ccI69vXK.s:3687   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/ccI69vXK.s:3747   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 $t
     /tmp/ccI69vXK.s:3753   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 HAL_ADCEx_EnterADCDeepPowerDownMode

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
ARM GAS  /tmp/ccI69vXK.s 			page 264


ADC_ConversionStop
HAL_GetTick
HAL_DMA_Abort
SystemCoreClock
