ARM GAS  /tmp/cceI5Tt8.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB292:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cceI5Tt8.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_ADC1_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/cceI5Tt8.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_ADC1_Init();
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Infinite loop */
 101:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 102:Core/Src/main.c ****   while (1)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     Error_Handler();
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Configure LSE Drive Capability
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 130:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 136:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 139:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
ARM GAS  /tmp/cceI5Tt8.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Enable MSI Auto calibration
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 173:Core/Src/main.c ****   * @param None
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** static void MX_ADC1_Init(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Common config
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   hadc1.Instance = ADC1;
 192:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 193:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 194:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 195:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 196:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 197:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 198:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 199:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 200:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 202:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
ARM GAS  /tmp/cceI5Tt8.s 			page 5


 203:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 204:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 205:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 206:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /** Configure Regular Channel
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 214:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 216:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 217:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 218:Core/Src/main.c ****   sConfig.Offset = 0;
 219:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * @brief USART2 Initialization Function
 231:Core/Src/main.c ****   * @param None
 232:Core/Src/main.c ****   * @retval None
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 235:Core/Src/main.c **** {
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 244:Core/Src/main.c ****   huart2.Instance = USART2;
 245:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 246:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 247:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 248:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 249:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 250:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 251:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 252:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 253:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 254:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 259:Core/Src/main.c **** 
ARM GAS  /tmp/cceI5Tt8.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief GPIO Initialization Function
 266:Core/Src/main.c ****   * @param None
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** static void MX_GPIO_Init(void)
 270:Core/Src/main.c **** {
  28              		.loc 1 270 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 271:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 271 3 view .LVU1
  43              		.loc 1 271 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0394     		str	r4, [sp, #12]
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 272:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 273:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 276:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 276 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 276 3 view .LVU4
  53              		.loc 1 276 3 view .LVU5
  54 0010 1E4B     		ldr	r3, .L3
  55 0012 DA6C     		ldr	r2, [r3, #76]
  56 0014 42F00402 		orr	r2, r2, #4
  57 0018 DA64     		str	r2, [r3, #76]
  58              		.loc 1 276 3 view .LVU6
  59 001a DA6C     		ldr	r2, [r3, #76]
  60 001c 02F00402 		and	r2, r2, #4
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 276 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 276 3 view .LVU8
 277:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 277 3 view .LVU9
ARM GAS  /tmp/cceI5Tt8.s 			page 7


  67              	.LBB5:
  68              		.loc 1 277 3 view .LVU10
  69              		.loc 1 277 3 view .LVU11
  70 0024 DA6C     		ldr	r2, [r3, #76]
  71 0026 42F00102 		orr	r2, r2, #1
  72 002a DA64     		str	r2, [r3, #76]
  73              		.loc 1 277 3 view .LVU12
  74 002c DA6C     		ldr	r2, [r3, #76]
  75 002e 02F00102 		and	r2, r2, #1
  76 0032 0192     		str	r2, [sp, #4]
  77              		.loc 1 277 3 view .LVU13
  78 0034 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 277 3 view .LVU14
 278:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 278 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 278 3 view .LVU16
  84              		.loc 1 278 3 view .LVU17
  85 0036 DA6C     		ldr	r2, [r3, #76]
  86 0038 42F00202 		orr	r2, r2, #2
  87 003c DA64     		str	r2, [r3, #76]
  88              		.loc 1 278 3 view .LVU18
  89 003e DB6C     		ldr	r3, [r3, #76]
  90 0040 03F00203 		and	r3, r3, #2
  91 0044 0293     		str	r3, [sp, #8]
  92              		.loc 1 278 3 view .LVU19
  93 0046 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 278 3 view .LVU20
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 281:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
  96              		.loc 1 281 3 view .LVU21
  97 0048 2246     		mov	r2, r4
  98 004a C021     		movs	r1, #192
  99 004c 4FF09040 		mov	r0, #1207959552
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 284:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 102              		.loc 1 284 3 view .LVU22
 103 0054 0E4E     		ldr	r6, .L3+4
 104 0056 2246     		mov	r2, r4
 105 0058 0821     		movs	r1, #8
 106 005a 3046     		mov	r0, r6
 107 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /*Configure GPIO pins : PA6 PA7 */
 287:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 109              		.loc 1 287 3 view .LVU23
 110              		.loc 1 287 23 is_stmt 0 view .LVU24
 111 0060 C023     		movs	r3, #192
 112 0062 0393     		str	r3, [sp, #12]
 288:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/cceI5Tt8.s 			page 8


 113              		.loc 1 288 3 is_stmt 1 view .LVU25
 114              		.loc 1 288 24 is_stmt 0 view .LVU26
 115 0064 0125     		movs	r5, #1
 116 0066 0495     		str	r5, [sp, #16]
 289:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 289 3 is_stmt 1 view .LVU27
 118              		.loc 1 289 24 is_stmt 0 view .LVU28
 119 0068 0594     		str	r4, [sp, #20]
 290:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 120              		.loc 1 290 3 is_stmt 1 view .LVU29
 121              		.loc 1 290 25 is_stmt 0 view .LVU30
 122 006a 0695     		str	r5, [sp, #24]
 291:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123              		.loc 1 291 3 is_stmt 1 view .LVU31
 124 006c 03A9     		add	r1, sp, #12
 125 006e 4FF09040 		mov	r0, #1207959552
 126 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL2:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /*Configure GPIO pin : LD3_Pin */
 294:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin;
 128              		.loc 1 294 3 view .LVU32
 129              		.loc 1 294 23 is_stmt 0 view .LVU33
 130 0076 0823     		movs	r3, #8
 131 0078 0393     		str	r3, [sp, #12]
 295:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 295 3 is_stmt 1 view .LVU34
 133              		.loc 1 295 24 is_stmt 0 view .LVU35
 134 007a 0495     		str	r5, [sp, #16]
 296:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 296 3 is_stmt 1 view .LVU36
 136              		.loc 1 296 24 is_stmt 0 view .LVU37
 137 007c 0594     		str	r4, [sp, #20]
 297:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 138              		.loc 1 297 3 is_stmt 1 view .LVU38
 139              		.loc 1 297 25 is_stmt 0 view .LVU39
 140 007e 0694     		str	r4, [sp, #24]
 298:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 141              		.loc 1 298 3 is_stmt 1 view .LVU40
 142 0080 03A9     		add	r1, sp, #12
 143 0082 3046     		mov	r0, r6
 144 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL3:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 301:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 302:Core/Src/main.c **** }
 146              		.loc 1 302 1 is_stmt 0 view .LVU41
 147 0088 08B0     		add	sp, sp, #32
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 16
 150              		@ sp needed
 151 008a 70BD     		pop	{r4, r5, r6, pc}
 152              	.L4:
 153              		.align	2
 154              	.L3:
 155 008c 00100240 		.word	1073876992
ARM GAS  /tmp/cceI5Tt8.s 			page 9


 156 0090 00040048 		.word	1207960576
 157              		.cfi_endproc
 158              	.LFE292:
 160              		.section	.text.Error_Handler,"ax",%progbits
 161              		.align	1
 162              		.global	Error_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	Error_Handler:
 168              	.LFB293:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /* USER CODE END 4 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /**
 309:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 310:Core/Src/main.c ****   * @retval None
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c **** void Error_Handler(void)
 313:Core/Src/main.c **** {
 169              		.loc 1 313 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ Volatile: function does not return.
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 314:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 315:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 316:Core/Src/main.c ****   __disable_irq();
 175              		.loc 1 316 3 view .LVU43
 176              	.LBB7:
 177              	.LBI7:
 178              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/cceI5Tt8.s 			page 10


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/cceI5Tt8.s 			page 11


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /tmp/cceI5Tt8.s 			page 12


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/cceI5Tt8.s 			page 13


 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 179              		.loc 2 207 27 view .LVU44
 180              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 181              		.loc 2 209 3 view .LVU45
 182              		.syntax unified
 183              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 184 0000 72B6     		cpsid i
 185              	@ 0 "" 2
 186              		.thumb
 187              		.syntax unified
 188              	.L6:
 189              	.LBE8:
 190              	.LBE7:
 317:Core/Src/main.c ****   while (1)
 191              		.loc 1 317 3 discriminator 1 view .LVU46
 318:Core/Src/main.c ****   {
 319:Core/Src/main.c ****   }
 192              		.loc 1 319 3 discriminator 1 view .LVU47
 317:Core/Src/main.c ****   while (1)
 193              		.loc 1 317 9 discriminator 1 view .LVU48
 194 0002 FEE7     		b	.L6
 195              		.cfi_endproc
 196              	.LFE293:
 198              		.section	.text.MX_ADC1_Init,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	MX_ADC1_Init:
 205              	.LFB290:
 177:Core/Src/main.c **** 
 206              		.loc 1 177 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 24
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 00B5     		push	{lr}
 211              	.LCFI3:
 212              		.cfi_def_cfa_offset 4
 213              		.cfi_offset 14, -4
 214 0002 87B0     		sub	sp, sp, #28
 215              	.LCFI4:
 216              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cceI5Tt8.s 			page 14


 183:Core/Src/main.c **** 
 217              		.loc 1 183 3 view .LVU50
 183:Core/Src/main.c **** 
 218              		.loc 1 183 26 is_stmt 0 view .LVU51
 219 0004 0023     		movs	r3, #0
 220 0006 0093     		str	r3, [sp]
 221 0008 0193     		str	r3, [sp, #4]
 222 000a 0293     		str	r3, [sp, #8]
 223 000c 0393     		str	r3, [sp, #12]
 224 000e 0493     		str	r3, [sp, #16]
 225 0010 0593     		str	r3, [sp, #20]
 191:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 226              		.loc 1 191 3 is_stmt 1 view .LVU52
 191:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 227              		.loc 1 191 18 is_stmt 0 view .LVU53
 228 0012 1848     		ldr	r0, .L13
 229 0014 184A     		ldr	r2, .L13+4
 230 0016 0260     		str	r2, [r0]
 192:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 231              		.loc 1 192 3 is_stmt 1 view .LVU54
 192:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 232              		.loc 1 192 29 is_stmt 0 view .LVU55
 233 0018 4360     		str	r3, [r0, #4]
 193:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 234              		.loc 1 193 3 is_stmt 1 view .LVU56
 193:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 235              		.loc 1 193 25 is_stmt 0 view .LVU57
 236 001a 8360     		str	r3, [r0, #8]
 194:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 237              		.loc 1 194 3 is_stmt 1 view .LVU58
 194:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 238              		.loc 1 194 24 is_stmt 0 view .LVU59
 239 001c C360     		str	r3, [r0, #12]
 195:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 240              		.loc 1 195 3 is_stmt 1 view .LVU60
 195:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 241              		.loc 1 195 27 is_stmt 0 view .LVU61
 242 001e 0361     		str	r3, [r0, #16]
 196:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 243              		.loc 1 196 3 is_stmt 1 view .LVU62
 196:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 244              		.loc 1 196 27 is_stmt 0 view .LVU63
 245 0020 0422     		movs	r2, #4
 246 0022 4261     		str	r2, [r0, #20]
 197:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 247              		.loc 1 197 3 is_stmt 1 view .LVU64
 197:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 248              		.loc 1 197 31 is_stmt 0 view .LVU65
 249 0024 0376     		strb	r3, [r0, #24]
 198:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 250              		.loc 1 198 3 is_stmt 1 view .LVU66
 198:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 251              		.loc 1 198 33 is_stmt 0 view .LVU67
 252 0026 4376     		strb	r3, [r0, #25]
 199:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 199 3 is_stmt 1 view .LVU68
 199:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  /tmp/cceI5Tt8.s 			page 15


 254              		.loc 1 199 30 is_stmt 0 view .LVU69
 255 0028 0122     		movs	r2, #1
 256 002a C261     		str	r2, [r0, #28]
 200:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 257              		.loc 1 200 3 is_stmt 1 view .LVU70
 200:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 258              		.loc 1 200 36 is_stmt 0 view .LVU71
 259 002c 80F82030 		strb	r3, [r0, #32]
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 260              		.loc 1 201 3 is_stmt 1 view .LVU72
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 261              		.loc 1 201 31 is_stmt 0 view .LVU73
 262 0030 8362     		str	r3, [r0, #40]
 202:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 263              		.loc 1 202 3 is_stmt 1 view .LVU74
 202:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 264              		.loc 1 202 35 is_stmt 0 view .LVU75
 265 0032 C362     		str	r3, [r0, #44]
 203:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 266              		.loc 1 203 3 is_stmt 1 view .LVU76
 203:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 267              		.loc 1 203 36 is_stmt 0 view .LVU77
 268 0034 80F83030 		strb	r3, [r0, #48]
 204:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 269              		.loc 1 204 3 is_stmt 1 view .LVU78
 204:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 270              		.loc 1 204 22 is_stmt 0 view .LVU79
 271 0038 4363     		str	r3, [r0, #52]
 205:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 272              		.loc 1 205 3 is_stmt 1 view .LVU80
 205:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 273              		.loc 1 205 31 is_stmt 0 view .LVU81
 274 003a 80F83830 		strb	r3, [r0, #56]
 206:Core/Src/main.c ****   {
 275              		.loc 1 206 3 is_stmt 1 view .LVU82
 206:Core/Src/main.c ****   {
 276              		.loc 1 206 7 is_stmt 0 view .LVU83
 277 003e FFF7FEFF 		bl	HAL_ADC_Init
 278              	.LVL4:
 206:Core/Src/main.c ****   {
 279              		.loc 1 206 6 view .LVU84
 280 0042 90B9     		cbnz	r0, .L11
 213:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 281              		.loc 1 213 3 is_stmt 1 view .LVU85
 213:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 282              		.loc 1 213 19 is_stmt 0 view .LVU86
 283 0044 0D4B     		ldr	r3, .L13+8
 284 0046 0093     		str	r3, [sp]
 214:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 285              		.loc 1 214 3 is_stmt 1 view .LVU87
 214:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 286              		.loc 1 214 16 is_stmt 0 view .LVU88
 287 0048 0623     		movs	r3, #6
 288 004a 0193     		str	r3, [sp, #4]
 215:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 289              		.loc 1 215 3 is_stmt 1 view .LVU89
 215:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
ARM GAS  /tmp/cceI5Tt8.s 			page 16


 290              		.loc 1 215 24 is_stmt 0 view .LVU90
 291 004c 0023     		movs	r3, #0
 292 004e 0293     		str	r3, [sp, #8]
 216:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 293              		.loc 1 216 3 is_stmt 1 view .LVU91
 216:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 294              		.loc 1 216 22 is_stmt 0 view .LVU92
 295 0050 7F22     		movs	r2, #127
 296 0052 0392     		str	r2, [sp, #12]
 217:Core/Src/main.c ****   sConfig.Offset = 0;
 297              		.loc 1 217 3 is_stmt 1 view .LVU93
 217:Core/Src/main.c ****   sConfig.Offset = 0;
 298              		.loc 1 217 24 is_stmt 0 view .LVU94
 299 0054 0422     		movs	r2, #4
 300 0056 0492     		str	r2, [sp, #16]
 218:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 301              		.loc 1 218 3 is_stmt 1 view .LVU95
 218:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 302              		.loc 1 218 18 is_stmt 0 view .LVU96
 303 0058 0593     		str	r3, [sp, #20]
 219:Core/Src/main.c ****   {
 304              		.loc 1 219 3 is_stmt 1 view .LVU97
 219:Core/Src/main.c ****   {
 305              		.loc 1 219 7 is_stmt 0 view .LVU98
 306 005a 6946     		mov	r1, sp
 307 005c 0548     		ldr	r0, .L13
 308 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 309              	.LVL5:
 219:Core/Src/main.c ****   {
 310              		.loc 1 219 6 view .LVU99
 311 0062 20B9     		cbnz	r0, .L12
 227:Core/Src/main.c **** 
 312              		.loc 1 227 1 view .LVU100
 313 0064 07B0     		add	sp, sp, #28
 314              	.LCFI5:
 315              		.cfi_remember_state
 316              		.cfi_def_cfa_offset 4
 317              		@ sp needed
 318 0066 5DF804FB 		ldr	pc, [sp], #4
 319              	.L11:
 320              	.LCFI6:
 321              		.cfi_restore_state
 208:Core/Src/main.c ****   }
 322              		.loc 1 208 5 is_stmt 1 view .LVU101
 323 006a FFF7FEFF 		bl	Error_Handler
 324              	.LVL6:
 325              	.L12:
 221:Core/Src/main.c ****   }
 326              		.loc 1 221 5 view .LVU102
 327 006e FFF7FEFF 		bl	Error_Handler
 328              	.LVL7:
 329              	.L14:
 330 0072 00BF     		.align	2
 331              	.L13:
 332 0074 00000000 		.word	hadc1
 333 0078 00000450 		.word	1342439424
 334 007c 00018021 		.word	562036992
ARM GAS  /tmp/cceI5Tt8.s 			page 17


 335              		.cfi_endproc
 336              	.LFE290:
 338              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	MX_USART2_UART_Init:
 345              	.LFB291:
 235:Core/Src/main.c **** 
 346              		.loc 1 235 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              	.LCFI7:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
 244:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 355              		.loc 1 244 3 view .LVU104
 244:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 356              		.loc 1 244 19 is_stmt 0 view .LVU105
 357 0002 0B48     		ldr	r0, .L19
 358 0004 0B4B     		ldr	r3, .L19+4
 359 0006 0360     		str	r3, [r0]
 245:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 360              		.loc 1 245 3 is_stmt 1 view .LVU106
 245:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 361              		.loc 1 245 24 is_stmt 0 view .LVU107
 362 0008 4FF4E133 		mov	r3, #115200
 363 000c 4360     		str	r3, [r0, #4]
 246:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 364              		.loc 1 246 3 is_stmt 1 view .LVU108
 246:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 365              		.loc 1 246 26 is_stmt 0 view .LVU109
 366 000e 0023     		movs	r3, #0
 367 0010 8360     		str	r3, [r0, #8]
 247:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 368              		.loc 1 247 3 is_stmt 1 view .LVU110
 247:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 369              		.loc 1 247 24 is_stmt 0 view .LVU111
 370 0012 C360     		str	r3, [r0, #12]
 248:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 371              		.loc 1 248 3 is_stmt 1 view .LVU112
 248:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 372              		.loc 1 248 22 is_stmt 0 view .LVU113
 373 0014 0361     		str	r3, [r0, #16]
 249:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 374              		.loc 1 249 3 is_stmt 1 view .LVU114
 249:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 375              		.loc 1 249 20 is_stmt 0 view .LVU115
 376 0016 0C22     		movs	r2, #12
 377 0018 4261     		str	r2, [r0, #20]
 250:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 378              		.loc 1 250 3 is_stmt 1 view .LVU116
 250:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/cceI5Tt8.s 			page 18


 379              		.loc 1 250 25 is_stmt 0 view .LVU117
 380 001a 8361     		str	r3, [r0, #24]
 251:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 381              		.loc 1 251 3 is_stmt 1 view .LVU118
 251:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 382              		.loc 1 251 28 is_stmt 0 view .LVU119
 383 001c C361     		str	r3, [r0, #28]
 252:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 384              		.loc 1 252 3 is_stmt 1 view .LVU120
 252:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 385              		.loc 1 252 30 is_stmt 0 view .LVU121
 386 001e 0362     		str	r3, [r0, #32]
 253:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 387              		.loc 1 253 3 is_stmt 1 view .LVU122
 253:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 388              		.loc 1 253 38 is_stmt 0 view .LVU123
 389 0020 4362     		str	r3, [r0, #36]
 254:Core/Src/main.c ****   {
 390              		.loc 1 254 3 is_stmt 1 view .LVU124
 254:Core/Src/main.c ****   {
 391              		.loc 1 254 7 is_stmt 0 view .LVU125
 392 0022 FFF7FEFF 		bl	HAL_UART_Init
 393              	.LVL8:
 254:Core/Src/main.c ****   {
 394              		.loc 1 254 6 view .LVU126
 395 0026 00B9     		cbnz	r0, .L18
 262:Core/Src/main.c **** 
 396              		.loc 1 262 1 view .LVU127
 397 0028 08BD     		pop	{r3, pc}
 398              	.L18:
 256:Core/Src/main.c ****   }
 399              		.loc 1 256 5 is_stmt 1 view .LVU128
 400 002a FFF7FEFF 		bl	Error_Handler
 401              	.LVL9:
 402              	.L20:
 403 002e 00BF     		.align	2
 404              	.L19:
 405 0030 00000000 		.word	huart2
 406 0034 00440040 		.word	1073759232
 407              		.cfi_endproc
 408              	.LFE291:
 410              		.section	.text.SystemClock_Config,"ax",%progbits
 411              		.align	1
 412              		.global	SystemClock_Config
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	SystemClock_Config:
 418              	.LFB289:
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 419              		.loc 1 116 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 88
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 00B5     		push	{lr}
 424              	.LCFI8:
 425              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cceI5Tt8.s 			page 19


 426              		.cfi_offset 14, -4
 427 0002 97B0     		sub	sp, sp, #92
 428              	.LCFI9:
 429              		.cfi_def_cfa_offset 96
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 430              		.loc 1 117 3 view .LVU130
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 431              		.loc 1 117 22 is_stmt 0 view .LVU131
 432 0004 4422     		movs	r2, #68
 433 0006 0021     		movs	r1, #0
 434 0008 05A8     		add	r0, sp, #20
 435 000a FFF7FEFF 		bl	memset
 436              	.LVL10:
 118:Core/Src/main.c **** 
 437              		.loc 1 118 3 is_stmt 1 view .LVU132
 118:Core/Src/main.c **** 
 438              		.loc 1 118 22 is_stmt 0 view .LVU133
 439 000e 0023     		movs	r3, #0
 440 0010 0093     		str	r3, [sp]
 441 0012 0193     		str	r3, [sp, #4]
 442 0014 0293     		str	r3, [sp, #8]
 443 0016 0393     		str	r3, [sp, #12]
 444 0018 0493     		str	r3, [sp, #16]
 122:Core/Src/main.c ****   {
 445              		.loc 1 122 3 is_stmt 1 view .LVU134
 122:Core/Src/main.c ****   {
 446              		.loc 1 122 7 is_stmt 0 view .LVU135
 447 001a 4FF40070 		mov	r0, #512
 448 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 449              	.LVL11:
 122:Core/Src/main.c ****   {
 450              		.loc 1 122 6 view .LVU136
 451 0022 0028     		cmp	r0, #0
 452 0024 31D1     		bne	.L26
 129:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 453              		.loc 1 129 3 is_stmt 1 view .LVU137
 454 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 455              	.LVL12:
 130:Core/Src/main.c **** 
 456              		.loc 1 130 3 view .LVU138
 457 002a 1B4A     		ldr	r2, .L29
 458 002c D2F89030 		ldr	r3, [r2, #144]
 459 0030 23F01803 		bic	r3, r3, #24
 460 0034 C2F89030 		str	r3, [r2, #144]
 135:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 461              		.loc 1 135 3 view .LVU139
 135:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 462              		.loc 1 135 36 is_stmt 0 view .LVU140
 463 0038 1423     		movs	r3, #20
 464 003a 0593     		str	r3, [sp, #20]
 136:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 465              		.loc 1 136 3 is_stmt 1 view .LVU141
 136:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 466              		.loc 1 136 30 is_stmt 0 view .LVU142
 467 003c 0123     		movs	r3, #1
 468 003e 0793     		str	r3, [sp, #28]
 137:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
ARM GAS  /tmp/cceI5Tt8.s 			page 20


 469              		.loc 1 137 3 is_stmt 1 view .LVU143
 137:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 470              		.loc 1 137 30 is_stmt 0 view .LVU144
 471 0040 0B93     		str	r3, [sp, #44]
 138:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 472              		.loc 1 138 3 is_stmt 1 view .LVU145
 138:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 473              		.loc 1 138 41 is_stmt 0 view .LVU146
 474 0042 0022     		movs	r2, #0
 475 0044 0C92     		str	r2, [sp, #48]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 476              		.loc 1 139 3 is_stmt 1 view .LVU147
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 477              		.loc 1 139 35 is_stmt 0 view .LVU148
 478 0046 6022     		movs	r2, #96
 479 0048 0D92     		str	r2, [sp, #52]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 480              		.loc 1 140 3 is_stmt 1 view .LVU149
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 481              		.loc 1 140 34 is_stmt 0 view .LVU150
 482 004a 0222     		movs	r2, #2
 483 004c 0F92     		str	r2, [sp, #60]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 484              		.loc 1 141 3 is_stmt 1 view .LVU151
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 485              		.loc 1 141 35 is_stmt 0 view .LVU152
 486 004e 1093     		str	r3, [sp, #64]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 487              		.loc 1 142 3 is_stmt 1 view .LVU153
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 488              		.loc 1 142 30 is_stmt 0 view .LVU154
 489 0050 1193     		str	r3, [sp, #68]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 490              		.loc 1 143 3 is_stmt 1 view .LVU155
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 491              		.loc 1 143 30 is_stmt 0 view .LVU156
 492 0052 1023     		movs	r3, #16
 493 0054 1293     		str	r3, [sp, #72]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 494              		.loc 1 144 3 is_stmt 1 view .LVU157
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 495              		.loc 1 144 30 is_stmt 0 view .LVU158
 496 0056 0723     		movs	r3, #7
 497 0058 1393     		str	r3, [sp, #76]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 498              		.loc 1 145 3 is_stmt 1 view .LVU159
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 499              		.loc 1 145 30 is_stmt 0 view .LVU160
 500 005a 1492     		str	r2, [sp, #80]
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 501              		.loc 1 146 3 is_stmt 1 view .LVU161
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 502              		.loc 1 146 30 is_stmt 0 view .LVU162
 503 005c 1592     		str	r2, [sp, #84]
 147:Core/Src/main.c ****   {
 504              		.loc 1 147 3 is_stmt 1 view .LVU163
 147:Core/Src/main.c ****   {
ARM GAS  /tmp/cceI5Tt8.s 			page 21


 505              		.loc 1 147 7 is_stmt 0 view .LVU164
 506 005e 05A8     		add	r0, sp, #20
 507 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 508              	.LVL13:
 147:Core/Src/main.c ****   {
 509              		.loc 1 147 6 view .LVU165
 510 0064 98B9     		cbnz	r0, .L27
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 511              		.loc 1 154 3 is_stmt 1 view .LVU166
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 512              		.loc 1 154 31 is_stmt 0 view .LVU167
 513 0066 0F23     		movs	r3, #15
 514 0068 0093     		str	r3, [sp]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 515              		.loc 1 156 3 is_stmt 1 view .LVU168
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 516              		.loc 1 156 34 is_stmt 0 view .LVU169
 517 006a 0323     		movs	r3, #3
 518 006c 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 519              		.loc 1 157 3 is_stmt 1 view .LVU170
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 520              		.loc 1 157 35 is_stmt 0 view .LVU171
 521 006e 0023     		movs	r3, #0
 522 0070 0293     		str	r3, [sp, #8]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 523              		.loc 1 158 3 is_stmt 1 view .LVU172
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 524              		.loc 1 158 36 is_stmt 0 view .LVU173
 525 0072 0393     		str	r3, [sp, #12]
 159:Core/Src/main.c **** 
 526              		.loc 1 159 3 is_stmt 1 view .LVU174
 159:Core/Src/main.c **** 
 527              		.loc 1 159 36 is_stmt 0 view .LVU175
 528 0074 0493     		str	r3, [sp, #16]
 161:Core/Src/main.c ****   {
 529              		.loc 1 161 3 is_stmt 1 view .LVU176
 161:Core/Src/main.c ****   {
 530              		.loc 1 161 7 is_stmt 0 view .LVU177
 531 0076 0121     		movs	r1, #1
 532 0078 6846     		mov	r0, sp
 533 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 534              	.LVL14:
 161:Core/Src/main.c ****   {
 535              		.loc 1 161 6 view .LVU178
 536 007e 40B9     		cbnz	r0, .L28
 168:Core/Src/main.c **** }
 537              		.loc 1 168 3 is_stmt 1 view .LVU179
 538 0080 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 539              	.LVL15:
 169:Core/Src/main.c **** 
 540              		.loc 1 169 1 is_stmt 0 view .LVU180
 541 0084 17B0     		add	sp, sp, #92
 542              	.LCFI10:
 543              		.cfi_remember_state
 544              		.cfi_def_cfa_offset 4
 545              		@ sp needed
ARM GAS  /tmp/cceI5Tt8.s 			page 22


 546 0086 5DF804FB 		ldr	pc, [sp], #4
 547              	.L26:
 548              	.LCFI11:
 549              		.cfi_restore_state
 124:Core/Src/main.c ****   }
 550              		.loc 1 124 5 is_stmt 1 view .LVU181
 551 008a FFF7FEFF 		bl	Error_Handler
 552              	.LVL16:
 553              	.L27:
 149:Core/Src/main.c ****   }
 554              		.loc 1 149 5 view .LVU182
 555 008e FFF7FEFF 		bl	Error_Handler
 556              	.LVL17:
 557              	.L28:
 163:Core/Src/main.c ****   }
 558              		.loc 1 163 5 view .LVU183
 559 0092 FFF7FEFF 		bl	Error_Handler
 560              	.LVL18:
 561              	.L30:
 562 0096 00BF     		.align	2
 563              	.L29:
 564 0098 00100240 		.word	1073876992
 565              		.cfi_endproc
 566              	.LFE289:
 568              		.section	.text.main,"ax",%progbits
 569              		.align	1
 570              		.global	main
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	main:
 576              	.LFB288:
  70:Core/Src/main.c **** 
 577              		.loc 1 70 1 view -0
 578              		.cfi_startproc
 579              		@ Volatile: function does not return.
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582 0000 08B5     		push	{r3, lr}
 583              	.LCFI12:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 3, -8
 586              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 587              		.loc 1 79 3 view .LVU185
 588 0002 FFF7FEFF 		bl	HAL_Init
 589              	.LVL19:
  86:Core/Src/main.c **** 
 590              		.loc 1 86 3 view .LVU186
 591 0006 FFF7FEFF 		bl	SystemClock_Config
 592              	.LVL20:
  93:Core/Src/main.c ****   MX_ADC1_Init();
 593              		.loc 1 93 3 view .LVU187
 594 000a FFF7FEFF 		bl	MX_GPIO_Init
 595              	.LVL21:
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
 596              		.loc 1 94 3 view .LVU188
ARM GAS  /tmp/cceI5Tt8.s 			page 23


 597 000e FFF7FEFF 		bl	MX_ADC1_Init
 598              	.LVL22:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 599              		.loc 1 95 3 view .LVU189
 600 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 601              	.LVL23:
 602              	.L32:
 102:Core/Src/main.c ****   {
 603              		.loc 1 102 3 discriminator 1 view .LVU190
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 604              		.loc 1 107 3 discriminator 1 view .LVU191
 102:Core/Src/main.c ****   {
 605              		.loc 1 102 9 discriminator 1 view .LVU192
 606 0016 FEE7     		b	.L32
 607              		.cfi_endproc
 608              	.LFE288:
 610              		.global	huart2
 611              		.section	.bss.huart2,"aw",%nobits
 612              		.align	2
 615              	huart2:
 616 0000 00000000 		.space	136
 616      00000000 
 616      00000000 
 616      00000000 
 616      00000000 
 617              		.global	hadc1
 618              		.section	.bss.hadc1,"aw",%nobits
 619              		.align	2
 622              	hadc1:
 623 0000 00000000 		.space	100
 623      00000000 
 623      00000000 
 623      00000000 
 623      00000000 
 624              		.text
 625              	.Letext0:
 626              		.file 3 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 627              		.file 4 "/usr/share/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 628              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 629              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 630              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 631              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 632              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 633              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 634              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 635              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 636              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 637              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 638              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 639              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 640              		.file 17 "<built-in>"
ARM GAS  /tmp/cceI5Tt8.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cceI5Tt8.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cceI5Tt8.s:26     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cceI5Tt8.s:155    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/cceI5Tt8.s:161    .text.Error_Handler:0000000000000000 $t
     /tmp/cceI5Tt8.s:167    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cceI5Tt8.s:199    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cceI5Tt8.s:204    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cceI5Tt8.s:332    .text.MX_ADC1_Init:0000000000000074 $d
     /tmp/cceI5Tt8.s:622    .bss.hadc1:0000000000000000 hadc1
     /tmp/cceI5Tt8.s:339    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cceI5Tt8.s:344    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cceI5Tt8.s:405    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/cceI5Tt8.s:615    .bss.huart2:0000000000000000 huart2
     /tmp/cceI5Tt8.s:411    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cceI5Tt8.s:417    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cceI5Tt8.s:564    .text.SystemClock_Config:0000000000000098 $d
     /tmp/cceI5Tt8.s:569    .text.main:0000000000000000 $t
     /tmp/cceI5Tt8.s:575    .text.main:0000000000000000 main
     /tmp/cceI5Tt8.s:612    .bss.huart2:0000000000000000 $d
     /tmp/cceI5Tt8.s:619    .bss.hadc1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
